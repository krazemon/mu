9991 parse: --- defining scenario_editor-can-undo-ctrl-a
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc\ndef\nghi": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"abc\ndef\nghi": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 2, 1\n    press ctrl-a\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    left-click 2, 1\n    press ctrl-a\n  ": "literal-string"}
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 2\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 2\n    4 <- 1\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    type [1]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    type [1]\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abc       .\n    .d1ef      .\n    .ghi       .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .abc       .\n    .d1ef      .\n    .ghi       .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-undo-ctrl-a has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- deduce types for recipe scenario_editor-can-undo-ctrl-a
9992 transform: screen => ("address" "shared" "screen")
9992 transform: screen <= ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- transform names for recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-undo-ctrl-a
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")}
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- transform braces for recipe scenario_editor-can-undo-ctrl-a
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- perform checks for recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- type-check calls inside recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-undo-ctrl-a
9991 transform: --- checking reply instructions against header for scenario_editor-can-undo-ctrl-a
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-undo-ctrl-a
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 5
9999 mem: storing 50 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1014
9999 mem: storing 50 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 5
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 5 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1116
9999 mem: storing 7 in location 1117
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1119 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1120
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1121
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 0
9999 mem: storing 1016 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1016
9999 mem: location 1124 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 1
9999 mem: storing 1018 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1018
9999 mem: location 1124 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 2
9999 mem: storing 1020 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1020
9999 mem: location 1124 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 3
9999 mem: storing 1022 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1022
9999 mem: location 1124 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 4
9999 mem: storing 1024 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1024
9999 mem: location 1124 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 5
9999 mem: storing 1026 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1026
9999 mem: location 1124 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 6
9999 mem: storing 1028 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1028
9999 mem: location 1124 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 7
9999 mem: storing 1030 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1030
9999 mem: location 1124 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 8
9999 mem: storing 1032 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1032
9999 mem: location 1124 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 9
9999 mem: storing 1034 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1034
9999 mem: location 1124 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 10
9999 mem: storing 1036 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1036
9999 mem: location 1124 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 11
9999 mem: storing 1038 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1038
9999 mem: location 1124 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 12
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 12
9999 mem: storing 1040 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1040
9999 mem: location 1124 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 13
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 13
9999 mem: storing 1042 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1042
9999 mem: location 1124 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 14
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 14
9999 mem: storing 1044 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1044
9999 mem: location 1124 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 15
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 15
9999 mem: storing 1046 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1046
9999 mem: location 1124 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 16
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 16
9999 mem: storing 1048 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1048
9999 mem: location 1124 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 17
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 17
9999 mem: storing 1050 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1050
9999 mem: location 1124 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 18
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 18
9999 mem: storing 1052 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1052
9999 mem: location 1124 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 19
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 19
9999 mem: storing 1054 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1054
9999 mem: location 1124 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 20
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 20
9999 mem: storing 1056 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1056
9999 mem: location 1124 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 21
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 21
9999 mem: storing 1058 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1058
9999 mem: location 1124 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 22
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 22
9999 mem: storing 1060 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1060
9999 mem: location 1124 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 23
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 23
9999 mem: storing 1062 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1062
9999 mem: location 1124 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 24
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 24
9999 mem: storing 1064 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1064
9999 mem: location 1124 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 25
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 25
9999 mem: storing 1066 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1066
9999 mem: location 1124 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 26
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 26
9999 mem: storing 1068 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1068
9999 mem: location 1124 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 27
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 27
9999 mem: storing 1070 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1070
9999 mem: location 1124 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 28
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 28
9999 mem: storing 1072 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1072
9999 mem: location 1124 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 29
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 29
9999 mem: storing 1074 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1074
9999 mem: location 1124 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 30
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 30
9999 mem: storing 1076 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1076
9999 mem: location 1124 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 31
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 31
9999 mem: storing 1078 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1078
9999 mem: location 1124 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 32
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 32
9999 mem: storing 1080 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1080
9999 mem: location 1124 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 33
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 33
9999 mem: storing 1082 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1082
9999 mem: location 1124 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 34
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 34
9999 mem: storing 1084 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1084
9999 mem: location 1124 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 35
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 35
9999 mem: storing 1086 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1086
9999 mem: location 1124 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 36
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 36
9999 mem: storing 1088 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1088
9999 mem: location 1124 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 37
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 37
9999 mem: storing 1090 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1090
9999 mem: location 1124 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 38
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 38
9999 mem: storing 1092 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1092
9999 mem: location 1124 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 39
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 39
9999 mem: storing 1094 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1094
9999 mem: location 1124 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 40
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 40
9999 mem: storing 1096 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1096
9999 mem: location 1124 is 1096
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 40
9999 mem: storing 41 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 41
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 41
9999 mem: storing 1098 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1098
9999 mem: location 1124 is 1098
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 41
9999 mem: storing 42 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 42
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 42
9999 mem: storing 1100 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1100
9999 mem: location 1124 is 1100
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 42
9999 mem: storing 43 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 43
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 43
9999 mem: storing 1102 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1102
9999 mem: location 1124 is 1102
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 43
9999 mem: storing 44 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 44
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 44
9999 mem: storing 1104 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1104
9999 mem: location 1124 is 1104
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 44
9999 mem: storing 45 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 45
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 45
9999 mem: storing 1106 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1106
9999 mem: location 1124 is 1106
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 45
9999 mem: storing 46 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 46
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 46
9999 mem: storing 1108 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1108
9999 mem: location 1124 is 1108
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 46
9999 mem: storing 47 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 47
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 47
9999 mem: storing 1110 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1110
9999 mem: location 1124 is 1110
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 47
9999 mem: storing 48 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 48
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 48
9999 mem: storing 1112 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1112
9999 mem: location 1124 is 1112
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 48
9999 mem: storing 49 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 49
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 49
9999 mem: storing 1114 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1114
9999 mem: location 1124 is 1114
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 49
9999 mem: storing 50 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 50
9999 mem: location 1121 is 50
9999 mem: storing 1 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"abc\ndef\nghi": "literal-string"}
9999 mem: new string alloc: 1125
9999 mem: storing 1125 in location 1
9999 mem: incrementing refcount of 1125: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1125
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1138
9999 mem: storing 11 in location 1139
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1141
9999 mem: incrementing refcount of 1125: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1142
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1143
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1144
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1144 is 10
9999 mem: storing 9 in location 1144
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1151
9999 mem: storing 1151 in location 1145
9999 mem: incrementing refcount of 1151: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1146
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1143 is 0
9999 mem: location 1146 is 1156
9999 mem: storing 0 in location 1156
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1146
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1144 is 9
9999 mem: location 1146 is 1157
9999 mem: storing 9 in location 1157
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1146
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1146 is 1159
9999 mem: storing 1 in location 1159
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1146
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1143 is 0
9999 mem: location 1146 is 1160
9999 mem: storing 0 in location 1160
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1147
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1164
9999 mem: storing 4 in location 1165
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1167
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1168
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1170
9999 mem: storing 1170 in location 1169
9999 mem: incrementing refcount of 1170: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1169 is 1170
9999 mem: skipping refcount at 1170
9999 mem: storing 167 in location 1171
9999 mem: storing 0 in location 1172
9999 mem: storing 0 in location 1173
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1168 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1170
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1170
9999 mem: location 1147 is 1152
9999 mem: storing 1170 in location 1152
9999 mem: incrementing refcount of 1170: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1148
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1147 is 1152
9999 mem: location 1152 is 1170
9999 mem: location 1148 is 1153
9999 mem: storing 1170 in location 1153
9999 mem: incrementing refcount of 1170: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1149
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1147 is 1152
9999 mem: location 1152 is 1170
9999 mem: location 1149 is 1155
9999 mem: storing 1170 in location 1155
9999 mem: incrementing refcount of 1170: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1145 is 1151
9999 mem: location 1141 is 1125
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1174
9999 mem: storing 8 in location 1175
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1177
9999 mem: incrementing refcount of 1151: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1178
9999 mem: incrementing refcount of 1125: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1178 is 1125
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9999 mem: storing 11 in location 1179
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1179 is 11
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1180
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1177 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1177 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1170
9999 mem: storing 1170 in location 1181
9999 mem: incrementing refcount of 1170: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 0
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 0
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 97
9999 mem: location 1181 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1184
9999 mem: storing 5 in location 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1188
9999 mem: incrementing refcount of 1170: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1191
9999 mem: storing 1191 in location 1189
9999 mem: incrementing refcount of 1191: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1187 is 97
9999 mem: location 1189 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy to is 1192
9999 mem: storing 97 in location 1192
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1188 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1189 is 1191
9999 mem: location 1188 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy to is 1172
9999 mem: storing 1191 in location 1172
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1188 is 1170
9999 mem: location 1189 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy to is 1194
9999 mem: storing 1170 in location 1194
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1170
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy to is 1193
9999 mem: storing 0 in location 1193
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1170
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1195
9999 mem: storing 3 in location 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 7 -> 6
9999 mem: storing 1191 in location 1181
9999 mem: incrementing refcount of 1191: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 0
9999 mem: storing 1 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 1
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 1
9998 run: address to copy is 1128
9998 run: its type is character
9999 mem: location 1128 is 98
9999 mem: storing 98 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 98
9999 mem: location 1181 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1188
9999 mem: incrementing refcount of 1191: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1200
9999 mem: storing 1200 in location 1189
9999 mem: incrementing refcount of 1200: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1187 is 98
9999 mem: location 1189 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy to is 1201
9999 mem: storing 98 in location 1201
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1170
9999 mem: location 1188 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1170
9999 mem: location 1189 is 1200
9999 mem: location 1188 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy to is 1193
9999 mem: storing 1200 in location 1193
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1188 is 1191
9999 mem: location 1189 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy to is 1203
9999 mem: storing 1191 in location 1203
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1191
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy to is 1202
9999 mem: storing 0 in location 1202
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1191
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 5 -> 4
9999 mem: storing 1200 in location 1181
9999 mem: incrementing refcount of 1200: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 1
9999 mem: storing 2 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 2
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 2
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 99
9999 mem: storing 99 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 99
9999 mem: location 1181 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1188
9999 mem: incrementing refcount of 1200: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1204
9999 mem: storing 1204 in location 1189
9999 mem: incrementing refcount of 1204: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1187 is 99
9999 mem: location 1189 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy to is 1205
9999 mem: storing 99 in location 1205
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1191
9999 mem: location 1188 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1191
9999 mem: location 1189 is 1204
9999 mem: location 1188 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy to is 1202
9999 mem: storing 1204 in location 1202
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1188 is 1200
9999 mem: location 1189 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy to is 1207
9999 mem: storing 1200 in location 1207
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1200
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy to is 1206
9999 mem: storing 0 in location 1206
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1200
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 5 -> 4
9999 mem: storing 1204 in location 1181
9999 mem: incrementing refcount of 1204: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 2
9999 mem: storing 3 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 3
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 3
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 10
9999 mem: storing 10 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 10
9999 mem: location 1181 is 1204
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1188
9999 mem: incrementing refcount of 1204: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1208
9999 mem: storing 1208 in location 1189
9999 mem: incrementing refcount of 1208: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1187 is 10
9999 mem: location 1189 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy to is 1209
9999 mem: storing 10 in location 1209
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1200
9999 mem: location 1188 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 0
9999 mem: location 1207 is 1200
9999 mem: location 1189 is 1208
9999 mem: location 1188 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy to is 1206
9999 mem: storing 1208 in location 1206
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1188 is 1204
9999 mem: location 1189 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy to is 1211
9999 mem: storing 1204 in location 1211
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1204
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy to is 1210
9999 mem: storing 0 in location 1210
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1204
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1204
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 5 -> 4
9999 mem: storing 1208 in location 1181
9999 mem: incrementing refcount of 1208: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 3
9999 mem: storing 4 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 4
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 4
9998 run: address to copy is 1131
9998 run: its type is character
9999 mem: location 1131 is 100
9999 mem: storing 100 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 100
9999 mem: location 1181 is 1208
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1188
9999 mem: incrementing refcount of 1208: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1212
9999 mem: storing 1212 in location 1189
9999 mem: incrementing refcount of 1212: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1187 is 100
9999 mem: location 1189 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy to is 1213
9999 mem: storing 100 in location 1213
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1204
9999 mem: location 1188 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1204
9999 mem: location 1189 is 1212
9999 mem: location 1188 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy to is 1210
9999 mem: storing 1212 in location 1210
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1188 is 1208
9999 mem: location 1189 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy to is 1215
9999 mem: storing 1208 in location 1215
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1208
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy to is 1214
9999 mem: storing 0 in location 1214
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1208
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1208
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 5 -> 4
9999 mem: storing 1212 in location 1181
9999 mem: incrementing refcount of 1212: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 4
9999 mem: storing 5 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 5
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 5
9998 run: address to copy is 1132
9998 run: its type is character
9999 mem: location 1132 is 101
9999 mem: storing 101 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 101
9999 mem: location 1181 is 1212
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1188
9999 mem: incrementing refcount of 1212: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1216
9999 mem: storing 1216 in location 1189
9999 mem: incrementing refcount of 1216: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1187 is 101
9999 mem: location 1189 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy to is 1217
9999 mem: storing 101 in location 1217
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1208
9999 mem: location 1188 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1208
9999 mem: location 1189 is 1216
9999 mem: location 1188 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy to is 1214
9999 mem: storing 1216 in location 1214
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1188 is 1212
9999 mem: location 1189 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy to is 1219
9999 mem: storing 1212 in location 1219
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy to is 1218
9999 mem: storing 0 in location 1218
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1212
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1212
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
9990 schedule: next_2/insert-text/new-editor/scenario_editor-can-undo-ctrl-a
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 5 -> 4
9999 mem: storing 1216 in location 1181
9999 mem: incrementing refcount of 1216: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 5
9999 mem: storing 6 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 6
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 6
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 102
9999 mem: storing 102 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 102
9999 mem: location 1181 is 1216
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1188
9999 mem: incrementing refcount of 1216: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1220
9999 mem: storing 1220 in location 1189
9999 mem: incrementing refcount of 1220: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: location 1187 is 102
9999 mem: location 1189 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy to is 1221
9999 mem: storing 102 in location 1221
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1188 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1189 is 1220
9999 mem: location 1188 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy to is 1218
9999 mem: storing 1220 in location 1218
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: location 1188 is 1216
9999 mem: location 1189 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy to is 1223
9999 mem: storing 1216 in location 1223
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 0
9999 mem: location 1223 is 1216
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy to is 1222
9999 mem: storing 0 in location 1222
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1216
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1216
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 5 -> 4
9999 mem: storing 1220 in location 1181
9999 mem: incrementing refcount of 1220: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 6
9999 mem: storing 7 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 7
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 7
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 10
9999 mem: storing 10 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 10
9999 mem: location 1181 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1188
9999 mem: incrementing refcount of 1220: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1224
9999 mem: storing 1224 in location 1189
9999 mem: incrementing refcount of 1224: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: location 1187 is 10
9999 mem: location 1189 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy to is 1225
9999 mem: storing 10 in location 1225
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 0
9999 mem: location 1223 is 1216
9999 mem: location 1188 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 0
9999 mem: location 1223 is 1216
9999 mem: location 1189 is 1224
9999 mem: location 1188 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy to is 1222
9999 mem: storing 1224 in location 1222
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: location 1188 is 1220
9999 mem: location 1189 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy to is 1227
9999 mem: storing 1220 in location 1227
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 0
9999 mem: location 1227 is 1220
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy to is 1226
9999 mem: storing 0 in location 1226
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1220
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 5 -> 4
9999 mem: storing 1224 in location 1181
9999 mem: incrementing refcount of 1224: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 7
9999 mem: storing 8 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 8
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 8
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 103
9999 mem: storing 103 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 103
9999 mem: location 1181 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1188
9999 mem: incrementing refcount of 1224: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1228
9999 mem: storing 1228 in location 1189
9999 mem: incrementing refcount of 1228: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1187 is 103
9999 mem: location 1189 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy to is 1229
9999 mem: storing 103 in location 1229
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 0
9999 mem: location 1227 is 1220
9999 mem: location 1188 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 0
9999 mem: location 1227 is 1220
9999 mem: location 1189 is 1228
9999 mem: location 1188 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy to is 1226
9999 mem: storing 1228 in location 1226
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1188 is 1224
9999 mem: location 1189 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy to is 1231
9999 mem: storing 1224 in location 1231
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy to is 1230
9999 mem: storing 0 in location 1230
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1224
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 5 -> 4
9999 mem: storing 1228 in location 1181
9999 mem: incrementing refcount of 1228: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 8
9999 mem: storing 9 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 9
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 9
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 104
9999 mem: storing 104 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 104
9999 mem: location 1181 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1188
9999 mem: incrementing refcount of 1228: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1232
9999 mem: storing 1232 in location 1189
9999 mem: incrementing refcount of 1232: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1187 is 104
9999 mem: location 1189 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy to is 1233
9999 mem: storing 104 in location 1233
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1188 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1189 is 1232
9999 mem: location 1188 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy to is 1230
9999 mem: storing 1232 in location 1230
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1188 is 1228
9999 mem: location 1189 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy to is 1235
9999 mem: storing 1228 in location 1235
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 0
9999 mem: location 1235 is 1228
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy to is 1234
9999 mem: storing 0 in location 1234
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1228
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 5 -> 4
9999 mem: storing 1232 in location 1181
9999 mem: incrementing refcount of 1232: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 9
9999 mem: storing 10 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 10
9999 mem: location 1179 is 11
9999 mem: storing 0 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1178 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1180 is 10
9998 run: address to copy is 1137
9998 run: its type is character
9999 mem: location 1137 is 105
9999 mem: storing 105 in location 1183
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 105
9999 mem: location 1181 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1187
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1188
9999 mem: incrementing refcount of 1232: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1236
9999 mem: storing 1236 in location 1189
9999 mem: incrementing refcount of 1236: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1239 is 0
9999 mem: location 1187 is 105
9999 mem: location 1189 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy to is 1237
9999 mem: storing 105 in location 1237
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 0
9999 mem: location 1235 is 1228
9999 mem: location 1188 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 0
9999 mem: storing 0 in location 1190
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 0
9999 mem: location 1235 is 1228
9999 mem: location 1189 is 1236
9999 mem: location 1188 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy to is 1234
9999 mem: storing 1236 in location 1234
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 0
9999 mem: location 1188 is 1232
9999 mem: location 1189 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy to is 1239
9999 mem: storing 1232 in location 1239
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1190 is 0
9999 mem: location 1189 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy to is 1238
9999 mem: storing 0 in location 1238
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1232
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 5 -> 4
9999 mem: storing 1236 in location 1181
9999 mem: incrementing refcount of 1236: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1180 is 10
9999 mem: storing 11 in location 1180
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1180 is 11
9999 mem: location 1179 is 11
9999 mem: storing 1 in location 1182
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1177 is 1151
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 2 -> 1
9999 mem: storing 1151 in location 1145
9999 mem: incrementing refcount of 1151: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1149
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1147 is 1152
9999 mem: location 1152 is 1170
9999 mem: location 1149 is 1155
9999 mem: decrementing refcount of 1170: 6 -> 5
9999 mem: storing 1170 in location 1155
9999 mem: incrementing refcount of 1170: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1142 is 1008
9999 mem: location 1145 is 1151
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1240
9999 mem: storing 28 in location 1241
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1244
9999 mem: incrementing refcount of 1151: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1244 is 1151
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1245
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1243 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1199
 105 run: return {height: "number"}
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1246
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1247
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1248
9999 mem: incrementing refcount of 1170: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1170
9999 mem: storing 1170 in location 1249
9999 mem: incrementing refcount of 1170: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 9 -> 8
9999 mem: storing 1191 in location 1248
9999 mem: incrementing refcount of 1191: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1250
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1251
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1253
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1254
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1255
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 1
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1191
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 0
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 1 in location 1258
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1170
9999 mem: location 1255 is 1155
9999 mem: decrementing refcount of 1170: 8 -> 7
9999 mem: storing 1170 in location 1155
9999 mem: incrementing refcount of 1170: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1248 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 97
9999 mem: storing 97 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1270
9999 mem: storing 10 in location 1271
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 97
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 97
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 97
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 97
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1282
9999 mem: storing 25 in location 1283
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 97
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 97
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 10
9999 mem: storing 1036 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 7
9999 mem: location 1304 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 97
9999 mem: location 1305 is 1036
9999 mem: storing 97 in location 1036
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1304 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1037
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 7 -> 6
9999 mem: storing 1200 in location 1248
9999 mem: incrementing refcount of 1200: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 9 -> 8
9999 mem: storing 1191 in location 1249
9999 mem: incrementing refcount of 1191: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1200
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1258
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1248 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 98
9999 mem: storing 98 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 98
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 98
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 98
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 98
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 98
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 98
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 11
9999 mem: storing 1038 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 7
9999 mem: location 1304 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 98
9999 mem: location 1305 is 1038
9999 mem: storing 98 in location 1038
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1304 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1039
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 7 -> 6
9999 mem: storing 1204 in location 1248
9999 mem: incrementing refcount of 1204: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 9 -> 8
9999 mem: storing 1200 in location 1249
9999 mem: incrementing refcount of 1200: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1204
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1258
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1248 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 99
9999 mem: storing 99 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 99
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 99
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 99
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 99
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 99
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 99
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 12
9999 mem: storing 1040 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1304 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 99
9999 mem: location 1305 is 1040
9999 mem: storing 99 in location 1040
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1304 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1041
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1204
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 7 -> 6
9999 mem: storing 1208 in location 1248
9999 mem: incrementing refcount of 1208: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 9 -> 8
9999 mem: storing 1204 in location 1249
9999 mem: incrementing refcount of 1204: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
9990 schedule: render/new-editor/scenario_editor-can-undo-ctrl-a
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1208
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1258
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1248 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 10
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 10
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 10
9999 mem: storing 1 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1252 is 3
9999 mem: location 1247 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1178
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 13
9999 mem: storing 1042 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1304 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1042
9999 mem: storing 32 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1304 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 6 -> 7
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 14
9999 mem: storing 1044 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1304 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1044
9999 mem: storing 32 in location 1044
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1304 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1045
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 13 -> 14
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 7 -> 8
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 15
9999 mem: storing 1046 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1304 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1046
9999 mem: storing 32 in location 1046
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1304 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1047
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 14 -> 13
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 14 -> 15
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 8 -> 9
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 16
9999 mem: storing 1048 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1304 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1048
9999 mem: storing 32 in location 1048
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1304 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1049
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 15 -> 14
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 15 -> 16
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 17
9999 mem: storing 1050 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1304 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1050
9999 mem: storing 32 in location 1050
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1304 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1051
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 10 -> 11
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 18
9999 mem: storing 1052 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1304 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1052
9999 mem: storing 32 in location 1052
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1304 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1053
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 11 -> 12
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 19
9999 mem: storing 1054 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1304 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1054
9999 mem: storing 32 in location 1054
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1304 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1055
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1251 is 1
9999 mem: storing 2 in location 1251
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 2
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1208
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 7 -> 6
9999 mem: storing 1212 in location 1248
9999 mem: incrementing refcount of 1212: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1204
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 9 -> 8
9999 mem: storing 1208 in location 1249
9999 mem: incrementing refcount of 1208: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1212
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1248 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 100
9999 mem: storing 100 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 100
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 100
9999 mem: storing 0 in location 1279
9990 schedule: get-color/render/new-editor/scenario_editor-can-undo-ctrl-a
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 100
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 100
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 100
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 100
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 20
9999 mem: storing 1056 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1304 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 100
9999 mem: location 1305 is 1056
9999 mem: storing 100 in location 1056
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1304 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1057
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1212
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 7 -> 6
9999 mem: storing 1216 in location 1248
9999 mem: incrementing refcount of 1216: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1208
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 9 -> 8
9999 mem: storing 1212 in location 1249
9999 mem: incrementing refcount of 1212: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1216
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1248 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 101
9999 mem: storing 101 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 101
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 101
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 101
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 101
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 21
9999 mem: storing 1058 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 101
9999 mem: location 1305 is 1058
9999 mem: storing 101 in location 1058
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 101
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1059
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1216
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 7 -> 6
9999 mem: storing 1220 in location 1248
9999 mem: incrementing refcount of 1220: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1212
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 9 -> 8
9999 mem: storing 1216 in location 1249
9999 mem: incrementing refcount of 1216: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1220
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1248 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 102
9999 mem: storing 102 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 102
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 102
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 102
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 102
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 22
9999 mem: storing 1060 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 102
9999 mem: location 1305 is 1060
9999 mem: storing 102 in location 1060
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 102
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1061
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 7 -> 6
9999 mem: storing 1224 in location 1248
9999 mem: incrementing refcount of 1224: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1216
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 9 -> 8
9999 mem: storing 1220 in location 1249
9999 mem: incrementing refcount of 1220: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1224
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1248 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 10
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 10
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 10
9999 mem: storing 1 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1252 is 3
9999 mem: location 1247 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1178
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 23 -> 24
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 15 -> 16
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 23
9999 mem: storing 1062 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1062
9999 mem: storing 32 in location 1062
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1063
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 24 -> 23
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 24 -> 25
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 16 -> 17
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 24
9999 mem: storing 1064 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 7
9999 mem: location 1304 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1064
9999 mem: storing 32 in location 1064
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1304 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1065
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 25 -> 26
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 17 -> 18
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-can-undo-ctrl-a
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 25
9999 mem: storing 1066 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 7
9999 mem: location 1304 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1066
9999 mem: storing 32 in location 1066
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1304 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1067
9999 mem: storing 7 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 26 -> 25
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 26 -> 27
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 18 -> 19
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 26
9999 mem: storing 1068 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 7
9999 mem: location 1304 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1068
9999 mem: storing 32 in location 1068
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1304 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1069
9999 mem: storing 7 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 27 -> 28
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 19 -> 20
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 27
9999 mem: storing 1070 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 7
9999 mem: location 1304 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1070
9999 mem: storing 32 in location 1070
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1304 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1071
9999 mem: storing 7 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 28 -> 27
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 28 -> 29
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 20 -> 21
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 28
9999 mem: storing 1072 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 7
9999 mem: location 1304 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1072
9999 mem: storing 32 in location 1072
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1304 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1073
9999 mem: storing 7 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 29 -> 28
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 29 -> 30
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 21 -> 22
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 29
9999 mem: storing 1074 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 7
9999 mem: location 1304 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1074
9999 mem: storing 32 in location 1074
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1304 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1075
9999 mem: storing 7 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 30 -> 29
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1251 is 2
9999 mem: storing 3 in location 1251
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 3
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 31 -> 30
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 30 -> 31
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 7 -> 6
9999 mem: storing 1228 in location 1248
9999 mem: incrementing refcount of 1228: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 9 -> 8
9999 mem: storing 1224 in location 1249
9999 mem: incrementing refcount of 1224: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1228
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1248 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 103
9999 mem: storing 103 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 103
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 103
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 103
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 103
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 103
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 103
  90 print-character: 103 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 103
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 22 -> 23
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 103
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 30
9999 mem: storing 1076 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1304 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 103
9999 mem: location 1305 is 1076
9999 mem: storing 103 in location 1076
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1076
9999 mem: location 1076 is 103
9999 mem: location 1077 is 7
9999 mem: location 1304 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1077
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 7 -> 6
9999 mem: storing 1232 in location 1248
9999 mem: incrementing refcount of 1232: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 9 -> 8
9999 mem: storing 1228 in location 1249
9999 mem: incrementing refcount of 1228: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1232
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1248 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 104
9999 mem: storing 104 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 104
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 104
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 104
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 104
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 104
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 104
  90 print-character: 104 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 104
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 23 -> 24
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 104
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 31
9999 mem: storing 1078 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1304 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 104
9999 mem: location 1305 is 1078
9999 mem: storing 104 in location 1078
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1078
9999 mem: location 1078 is 104
9999 mem: location 1079 is 7
9999 mem: location 1304 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1079
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 3 -> 4
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 7 -> 6
9999 mem: storing 1236 in location 1248
9999 mem: incrementing refcount of 1236: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 9 -> 8
9999 mem: storing 1232 in location 1249
9999 mem: incrementing refcount of 1232: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1236
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1248 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 105
9999 mem: storing 105 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 105
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1274
9990 schedule: get-color/render/new-editor/scenario_editor-can-undo-ctrl-a
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 105
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 105
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 105
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 105
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 105
  90 print-character: 105 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 105
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 24 -> 25
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 105
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 32
9999 mem: storing 1080 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1304 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 105
9999 mem: location 1305 is 1080
9999 mem: storing 105 in location 1080
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1080
9999 mem: location 1080 is 105
9999 mem: location 1081 is 7
9999 mem: location 1304 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1081
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1236
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1198
9999 mem: incrementing refcount of 1236: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1236
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1198 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1199
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1236: 6 -> 5
9999 mem: storing 0 in location 1248
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 9 -> 8
9999 mem: storing 1236 in location 1249
9999 mem: incrementing refcount of 1236: 6 -> 7
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1264
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 0
9999 mem: location 1264 is 1154
9999 mem: storing 0 in location 1154
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1265
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1257 is 0
9999 mem: location 1265 is 0
9999 mem: storing 0 in location 1266
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1267
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: storing 0 in location 1268
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1269
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1269 is 1158
9999 mem: storing 3 in location 1158
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1251 is 3
9999 mem: location 1252 is 3
9999 mem: location 1243 is 1008
9999 mem: location 1244 is 1151
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 3
9998 run: result 2 is 1008
9998 run: result 3 is 1151
9999 mem: decrementing refcount of 1008: 34 -> 33
9999 mem: storing 1008 in location 1142
9999 mem: incrementing refcount of 1008: 33 -> 34
9999 mem: decrementing refcount of 1151: 3 -> 2
9999 mem: storing 1151 in location 1145
9999 mem: incrementing refcount of 1151: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1145 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1150
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1150 is 1161
9999 mem: storing 1 in location 1161
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1145 is 1151
9999 mem: location 1142 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1151
9999 mem: storing 1151 in location 2
9999 mem: incrementing refcount of 1151: 3 -> 4
 102 run: editor-render {screen: ("address" "shared" "screen")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 2 is 1151
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 34 -> 35
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1120
9999 mem: incrementing refcount of 1151: 4 -> 5
 103 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1120 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1121
 103 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1120 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1122
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1151
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1240
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 35 -> 36
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1244
9999 mem: incrementing refcount of 1151: 5 -> 6
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1244 is 1151
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1245
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1243 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 36 -> 37
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1199
 105 run: return {height: "number"}
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1246
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1247
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1248
9999 mem: incrementing refcount of 1170: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1170
9999 mem: storing 1170 in location 1249
9999 mem: incrementing refcount of 1170: 9 -> 10
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 11 -> 10
9999 mem: storing 1191 in location 1248
9999 mem: incrementing refcount of 1191: 9 -> 10
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1250
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1251
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1253
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1254
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1255
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 1
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 37 -> 38
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 38 -> 37
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 37 -> 38
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1191
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 0
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 1 in location 1258
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1170
9999 mem: location 1255 is 1155
9999 mem: decrementing refcount of 1170: 10 -> 9
9999 mem: storing 1170 in location 1155
9999 mem: incrementing refcount of 1170: 9 -> 10
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1248 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 97
9999 mem: storing 97 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 97
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 97
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 97
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 97
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 97
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 25 -> 26
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 97
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 10
9999 mem: storing 1036 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1304 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 97
9999 mem: location 1305 is 1036
9999 mem: storing 97 in location 1036
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1304 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1037
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 11 -> 10
9999 mem: storing 1200 in location 1248
9999 mem: incrementing refcount of 1200: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 11 -> 10
9999 mem: storing 1191 in location 1249
9999 mem: incrementing refcount of 1191: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1200
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1258
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1248 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 98
9999 mem: storing 98 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 98
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 98
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 98
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 98
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 39 -> 40
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 98
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 26 -> 27
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 98
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 11
9999 mem: storing 1038 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1304 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 98
9999 mem: location 1305 is 1038
9999 mem: storing 98 in location 1038
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1304 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1039
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 11 -> 10
9999 mem: storing 1204 in location 1248
9999 mem: incrementing refcount of 1204: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 13 -> 12
9999 mem: storing 1200 in location 1249
9999 mem: incrementing refcount of 1200: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1204
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1258
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1248 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 99
9999 mem: storing 99 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 99
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 99
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 99
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 99
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 40 -> 41
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 99
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 27 -> 28
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 99
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 12
9999 mem: storing 1040 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1304 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 99
9999 mem: location 1305 is 1040
9999 mem: storing 99 in location 1040
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1304 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1041
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1204
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 11 -> 10
9999 mem: storing 1208 in location 1248
9999 mem: incrementing refcount of 1208: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1200
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 13 -> 12
9999 mem: storing 1204 in location 1249
9999 mem: incrementing refcount of 1204: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1208
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
9990 schedule: render/editor-render/scenario_editor-can-undo-ctrl-a
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1258
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1248 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 10
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 10
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 10
9999 mem: storing 1 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1252 is 3
9999 mem: location 1247 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 41 -> 42
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1178
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 42 -> 43
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 28 -> 29
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 13
9999 mem: storing 1042 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1304 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1042
9999 mem: storing 32 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1304 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 43 -> 42
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 42 -> 43
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 43 -> 44
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 29 -> 30
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 14
9999 mem: storing 1044 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1304 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1044
9999 mem: storing 32 in location 1044
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1304 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1045
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 43 -> 44
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 44 -> 45
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 30 -> 31
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 15
9999 mem: storing 1046 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1304 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1046
9999 mem: storing 32 in location 1046
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1304 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1047
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 44 -> 45
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 31 -> 32
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 16
9999 mem: storing 1048 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1304 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1048
9999 mem: storing 32 in location 1048
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1304 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1049
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 45 -> 46
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 46 -> 47
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 32 -> 33
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 17
9999 mem: storing 1050 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1304 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1050
9999 mem: storing 32 in location 1050
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1304 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1051
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 46 -> 47
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 47 -> 48
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 33 -> 34
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 18
9999 mem: storing 1052 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1304 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1052
9999 mem: storing 32 in location 1052
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1304 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1053
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 48 -> 47
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 47 -> 48
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 48 -> 49
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 34 -> 35
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 19
9999 mem: storing 1054 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1304 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1054
9999 mem: storing 32 in location 1054
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1304 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1055
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 49 -> 48
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 48 -> 49
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1251 is 1
9999 mem: storing 2 in location 1251
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 2
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 49 -> 50
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 50 -> 49
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 49 -> 50
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1208
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 11 -> 10
9999 mem: storing 1212 in location 1248
9999 mem: incrementing refcount of 1212: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1204
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 13 -> 12
9999 mem: storing 1208 in location 1249
9999 mem: incrementing refcount of 1208: 11 -> 12
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1212
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1248 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 100
9999 mem: storing 100 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 100
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 100
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
9990 schedule: get-color/render/editor-render/scenario_editor-can-undo-ctrl-a
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 100
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 100
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 50 -> 51
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 100
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 35 -> 36
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 100
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 20
9999 mem: storing 1056 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1304 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 100
9999 mem: location 1305 is 1056
9999 mem: storing 100 in location 1056
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1304 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1057
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1212
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 11 -> 10
9999 mem: storing 1216 in location 1248
9999 mem: incrementing refcount of 1216: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1208
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 13 -> 12
9999 mem: storing 1212 in location 1249
9999 mem: incrementing refcount of 1212: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1216
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1248 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 101
9999 mem: storing 101 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 101
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 101
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 101
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 101
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 51 -> 52
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 36 -> 37
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 21
9999 mem: storing 1058 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 101
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 101
9999 mem: location 1305 is 1058
9999 mem: storing 101 in location 1058
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 101
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1059
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1216
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 11 -> 10
9999 mem: storing 1220 in location 1248
9999 mem: incrementing refcount of 1220: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1212
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 13 -> 12
9999 mem: storing 1216 in location 1249
9999 mem: incrementing refcount of 1216: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1220
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1248 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 102
9999 mem: storing 102 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 102
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 102
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 102
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 102
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 52 -> 53
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 37 -> 38
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 22
9999 mem: storing 1060 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 102
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 102
9999 mem: location 1305 is 1060
9999 mem: storing 102 in location 1060
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 102
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1061
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 11 -> 10
9999 mem: storing 1224 in location 1248
9999 mem: incrementing refcount of 1224: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1216
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 13 -> 12
9999 mem: storing 1220 in location 1249
9999 mem: incrementing refcount of 1220: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1224
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1248 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 10
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 10
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 10
9999 mem: storing 1 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1252 is 3
9999 mem: location 1247 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 53 -> 54
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1178
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 54 -> 55
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 38 -> 39
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 23
9999 mem: storing 1062 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1062
9999 mem: storing 32 in location 1062
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1063
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 54 -> 55
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 39 -> 40
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 24
9999 mem: storing 1064 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1304 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1064
9999 mem: storing 32 in location 1064
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1304 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1065
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 55 -> 56
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 40 -> 41
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
9990 schedule: print/clear-line-delimited/render/editor-render/scenario_editor-can-undo-ctrl-a
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 25
9999 mem: storing 1066 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1304 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1066
9999 mem: storing 32 in location 1066
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1304 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1067
9999 mem: storing 7 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 56 -> 57
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 41 -> 42
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 26
9999 mem: storing 1068 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1304 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1068
9999 mem: storing 32 in location 1068
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1304 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1069
9999 mem: storing 7 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 57 -> 58
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 42 -> 43
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 27
9999 mem: storing 1070 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1304 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1070
9999 mem: storing 32 in location 1070
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1304 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1071
9999 mem: storing 7 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 58 -> 59
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 59 -> 60
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 43 -> 44
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 28
9999 mem: storing 1072 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1304 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1072
9999 mem: storing 32 in location 1072
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1304 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1073
9999 mem: storing 7 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 59 -> 60
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 60 -> 61
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1299
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 44 -> 45
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 29
9999 mem: storing 1074 in location 1304
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1304 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1305
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1074
9999 mem: storing 32 in location 1074
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1304 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1306
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1075
9999 mem: storing 7 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 60 -> 61
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1251 is 2
9999 mem: storing 3 in location 1251
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 3
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 61 -> 62
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 61 -> 62
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 11 -> 10
9999 mem: storing 1228 in location 1248
9999 mem: incrementing refcount of 1228: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 13 -> 12
9999 mem: storing 1224 in location 1249
9999 mem: incrementing refcount of 1224: 11 -> 12
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1228
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1248 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 103
9999 mem: storing 103 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 103
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 103
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 103
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 103
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 103
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 62 -> 63
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 103
  90 print-character: 103 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 103
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 45 -> 46
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 103
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 30
9999 mem: storing 1076 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1076
9999 mem: location 1076 is 103
9999 mem: location 1077 is 7
9999 mem: location 1304 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 103
9999 mem: location 1305 is 1076
9999 mem: storing 103 in location 1076
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1076
9999 mem: location 1076 is 103
9999 mem: location 1077 is 7
9999 mem: location 1304 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1077
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 11 -> 10
9999 mem: storing 1232 in location 1248
9999 mem: incrementing refcount of 1232: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 13 -> 12
9999 mem: storing 1228 in location 1249
9999 mem: incrementing refcount of 1228: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1232
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1248 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 104
9999 mem: storing 104 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 104
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 104
9999 mem: storing 0 in location 1276
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 104
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 104
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 104
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 63 -> 64
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 104
  90 print-character: 104 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 104
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 46 -> 47
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 104
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 31
9999 mem: storing 1078 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1078
9999 mem: location 1078 is 104
9999 mem: location 1079 is 7
9999 mem: location 1304 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 104
9999 mem: location 1305 is 1078
9999 mem: storing 104 in location 1078
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1078
9999 mem: location 1078 is 104
9999 mem: location 1079 is 7
9999 mem: location 1304 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1079
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 7 -> 8
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 11 -> 10
9999 mem: storing 1236 in location 1248
9999 mem: incrementing refcount of 1236: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 13 -> 12
9999 mem: storing 1232 in location 1249
9999 mem: incrementing refcount of 1232: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1236
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1248 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 105
9999 mem: storing 105 in location 1259
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 105
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1273
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1274
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1273 is 7
9999 mem: storing 1 in location 1275
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1274 is 105
9999 mem: storing 0 in location 1276
9990 schedule: get-color/render/editor-render/scenario_editor-can-undo-ctrl-a
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1277
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1274 is 105
9999 mem: storing 0 in location 1279
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1273 is 7
9999 mem: storing 0 in location 1280
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1273 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 105
9999 mem: storing 0 in location 1260
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 105
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 64 -> 65
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 105
  90 print-character: 105 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 105
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 47 -> 48
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 105
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 32
9999 mem: storing 1080 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1080
9999 mem: location 1080 is 105
9999 mem: location 1081 is 7
9999 mem: location 1304 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 105
9999 mem: location 1305 is 1080
9999 mem: storing 105 in location 1080
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1080
9999 mem: location 1080 is 105
9999 mem: location 1081 is 7
9999 mem: location 1304 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1081
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1236
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1198
9999 mem: incrementing refcount of 1236: 9 -> 10
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1236
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1198 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1199
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1236: 10 -> 9
9999 mem: storing 0 in location 1248
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 9 -> 10
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 13 -> 12
9999 mem: storing 1236 in location 1249
9999 mem: incrementing refcount of 1236: 10 -> 11
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1264
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 0
9999 mem: location 1264 is 1154
9999 mem: storing 0 in location 1154
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1257
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1265
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1257 is 0
9999 mem: location 1265 is 0
9999 mem: storing 0 in location 1266
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1267
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: storing 0 in location 1268
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1269
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1269 is 1158
9999 mem: storing 3 in location 1158
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1251 is 3
9999 mem: location 1252 is 3
9999 mem: location 1243 is 1008
9999 mem: location 1244 is 1151
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 3
9999 mem: storing 3 in location 1123
9999 mem: storing 3 in location 1124
 103 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 3
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 65 -> 66
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1178
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 66 -> 67
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 48 -> 49
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 33
9999 mem: storing 1082 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1304 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1082
9999 mem: storing 32 in location 1082
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1304 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1083
9999 mem: storing 7 in location 1083
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 66 -> 67
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 49 -> 50
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 34
9999 mem: storing 1084 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 7
9999 mem: location 1304 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1084
9999 mem: storing 32 in location 1084
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1304 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1085
9999 mem: storing 7 in location 1085
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 67 -> 68
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 68 -> 69
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 50 -> 51
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 35
9999 mem: storing 1086 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 7
9999 mem: location 1304 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1086
9999 mem: storing 32 in location 1086
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1304 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1087
9999 mem: storing 7 in location 1087
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 68 -> 69
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 69 -> 70
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 51 -> 52
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 36
9999 mem: storing 1088 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 7
9999 mem: location 1304 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1088
9999 mem: storing 32 in location 1088
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1304 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1089
9999 mem: storing 7 in location 1089
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 69 -> 70
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 70 -> 71
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 52 -> 53
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 37
9999 mem: storing 1090 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 7
9999 mem: location 1304 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1090
9999 mem: storing 32 in location 1090
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1304 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1091
9999 mem: storing 7 in location 1091
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 70 -> 71
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 71 -> 72
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 53 -> 54
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 38
9999 mem: storing 1092 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 7
9999 mem: location 1304 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1092
9999 mem: storing 32 in location 1092
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1304 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1093
9999 mem: storing 7 in location 1093
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 71 -> 72
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 72 -> 73
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 54 -> 55
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 39
9999 mem: storing 1094 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 7
9999 mem: location 1304 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1094
9999 mem: storing 32 in location 1094
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1304 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1095
9999 mem: storing 7 in location 1095
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
9990 schedule: print/clear-line-delimited/editor-render/scenario_editor-can-undo-ctrl-a
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 72 -> 73
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 3
9999 mem: storing 4 in location 1123
 103 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 4
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1309
9999 mem: storing 12 in location 1310
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 73 -> 74
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1313
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1314
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1315
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1316
9999 mem: storing 1 in location 1317
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1317 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1318
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1320
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1313 is 4
9999 mem: location 1314 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 74 -> 75
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 75 -> 74
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 74 -> 75
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 0
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 75 -> 76
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 55 -> 56
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 40
9999 mem: storing 1096 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 7
9999 mem: location 1304 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1096
9999 mem: storing 9480 in location 1096
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1096
9999 mem: location 1096 is 9480
9999 mem: location 1097 is 7
9999 mem: location 1304 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1097
9999 mem: storing 245 in location 1097
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 0
9999 mem: storing 1 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 1
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 56 -> 57
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 41
9999 mem: storing 1098 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 7
9999 mem: location 1304 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1098
9999 mem: storing 9480 in location 1098
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1098
9999 mem: location 1098 is 9480
9999 mem: location 1099 is 7
9999 mem: location 1304 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1099
9999 mem: storing 245 in location 1099
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 1
9999 mem: storing 2 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 2
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 77 -> 78
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 57 -> 58
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 42
9999 mem: storing 1100 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 7
9999 mem: location 1304 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1100
9999 mem: storing 9480 in location 1100
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 7
9999 mem: location 1304 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1101
9999 mem: storing 245 in location 1101
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 2
9999 mem: storing 3 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 3
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 78 -> 79
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 58 -> 59
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 43
9999 mem: storing 1102 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 7
9999 mem: location 1304 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1102
9999 mem: storing 9480 in location 1102
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 7
9999 mem: location 1304 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1103
9999 mem: storing 245 in location 1103
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 3
9999 mem: storing 4 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 4
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 79 -> 80
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 59 -> 60
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 44
9999 mem: storing 1104 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 7
9999 mem: location 1304 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1104
9999 mem: storing 9480 in location 1104
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 7
9999 mem: location 1304 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1105
9999 mem: storing 245 in location 1105
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 4
9999 mem: storing 5 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 5
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 80 -> 81
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 60 -> 61
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 45
9999 mem: storing 1106 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 7
9999 mem: location 1304 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1106
9999 mem: storing 9480 in location 1106
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 7
9999 mem: location 1304 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1107
9999 mem: storing 245 in location 1107
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 5
9999 mem: storing 6 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 6
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 81 -> 82
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 61 -> 62
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 46
9999 mem: storing 1108 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 7
9999 mem: location 1304 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1108
9999 mem: storing 9480 in location 1108
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 7
9999 mem: location 1304 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1109
9999 mem: storing 245 in location 1109
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 6
9999 mem: storing 7 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 7
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 62 -> 63
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 47
9999 mem: storing 1110 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 7
9999 mem: location 1304 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1110
9999 mem: storing 9480 in location 1110
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 7
9999 mem: location 1304 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1111
9999 mem: storing 245 in location 1111
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 7
9999 mem: storing 8 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 8
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 83 -> 84
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-can-undo-ctrl-a
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 63 -> 64
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 48
9999 mem: storing 1112 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 7
9999 mem: location 1304 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1112
9999 mem: storing 9480 in location 1112
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 7
9999 mem: location 1304 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1113
9999 mem: storing 245 in location 1113
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 8
9999 mem: storing 9 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 9
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 84 -> 85
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1299
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 64 -> 65
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 49
9999 mem: storing 1114 in location 1304
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 7
9999 mem: location 1304 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1305
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1114
9999 mem: storing 9480 in location 1114
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 7
9999 mem: location 1304 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1306
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1115
9999 mem: storing 245 in location 1115
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 9
9999 mem: storing 10 in location 1314
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 10
9999 mem: location 1315 is 9
9999 mem: storing 0 in location 1322
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1312 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 4
9999 mem: storing 5 in location 1123
 103 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 5
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 85 -> 86
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 104 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1323
9999 mem: storing 6 in location 1324
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1327
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1328
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1326 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1329
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1327 is 5
9999 mem: location 1329 is 1011
9999 mem: storing 5 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1330
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1328 is 0
9999 mem: location 1330 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1326 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 86 -> 87
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 87 -> 88
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1178
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 0
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 89 -> 88
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 88 -> 89
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 0
9999 mem: storing 1 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 1
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 90 -> 89
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 89 -> 90
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 1
9999 mem: storing 2 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 2
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 90 -> 91
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 90 -> 91
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 2
9999 mem: storing 3 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 91 -> 92
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 92 -> 91
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 91 -> 92
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 92 -> 93
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 93 -> 92
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 92 -> 93
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 93 -> 94
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 94 -> 95
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 95 -> 94
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 94 -> 95
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 95 -> 96
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 95 -> 96
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 96 -> 97
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 97 -> 98
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 98 -> 97
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 97 -> 98
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1331
9999 mem: storing 7 in location 1332
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 98 -> 99
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1335
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1336
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1337
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1335 is 5
9999 mem: storing 6 in location 1335
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1335 is 6
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1323
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 99 -> 100
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1327
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1328
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1326 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1329
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1327 is 6
9999 mem: location 1329 is 1011
9999 mem: storing 6 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1330
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1328 is 0
9999 mem: location 1330 is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1326 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 99 -> 100
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1199
 106 run: return {height: "number"}
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1338
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1335 is 6
9999 mem: location 1338 is 5
9999 mem: storing 1 in location 1339
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1334 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1151
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    left-click 2, 1\n    press ctrl-a\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {1: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {1: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-a: ()}
9992 load: after rewriting: press {ctrl-a: ()}
9999 mem: storing 'left-click' event starting at 1342
9999 mem: storing 'press' event starting at 1346
9999 mem: storing console in 1350
9999 mem: storing console data in 1352
 102 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1350
9999 mem: location 2 is 1151
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1353
9999 mem: storing 14 in location 1354
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 101 -> 102
 103 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1357
9999 mem: incrementing refcount of 1350: 0 -> 1
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 6 -> 7
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1359
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1360
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 1
9999 mem: location 1360 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 102 -> 103
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 103 -> 102
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 102 -> 103
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1350
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1312
9999 mem: incrementing refcount of 1350: 1 -> 2
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1350
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1351
9999 mem: storing 1351 in location 1313
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1352
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1352 is 1340
9999 mem: storing 1340 in location 1314
9999 mem: incrementing refcount of 1340: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 2 in location 1315
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 0
9999 mem: location 1315 is 2
9999 mem: storing 0 in location 1316
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9998 run: base address is 1341
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 0
9998 run: address to copy is 1342
9998 run: its type is event
9999 mem: location 1342 is 2
9999 mem: location 1343 is 65513
9999 mem: location 1344 is 2
9999 mem: location 1345 is 1
9999 mem: storing 2 in location 1318
9999 mem: storing 65513 in location 1319
9999 mem: storing 2 in location 1320
9999 mem: storing 1 in location 1321
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 0
9999 mem: location 1313 is 1351
9999 mem: storing 1 in location 1351
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1318 is 2
9999 mem: location 1319 is 65513
9999 mem: location 1320 is 2
9999 mem: location 1321 is 1
9999 mem: location 1312 is 1350
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [2, 65513, 2, 1]
9998 run: result 1 is 1350
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1361
9999 mem: storing 65513 in location 1362
9999 mem: storing 2 in location 1363
9999 mem: storing 1 in location 1364
9999 mem: decrementing refcount of 1350: 2 -> 1
9999 mem: storing 1350 in location 1357
9999 mem: incrementing refcount of 1350: 1 -> 2
9999 mem: storing 1 in location 1365
9999 mem: storing 0 in location 1366
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1361 is 2
9999 mem: location 1362 is 65513
9999 mem: location 1363 is 2
9999 mem: location 1364 is 1
9999 mem: storing 1362 in location 1367
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 1362
9998 run: jump-unless fell through
 103 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1356 is 1008
9999 mem: location 1358 is 1151
9999 mem: location 1367 is 1362
9999 mem: location 1362 is 65513
9999 mem: location 1363 is 2
9999 mem: location 1364 is 1
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1369
9999 mem: storing 27 in location 1370
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1372
9999 mem: incrementing refcount of 1008: 103 -> 104
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1373
9999 mem: incrementing refcount of 1151: 7 -> 8
 104 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1374
9999 mem: storing 2 in location 1375
9999 mem: storing 1 in location 1376
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1373 is 1151
9998 run: jumping to instruction 6
 104 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1374 is 65513
9999 mem: location 1375 is 2
9999 mem: location 1376 is 1
9998 run: address to copy is 1375
9998 run: its type is "number"
9999 mem: location 1375 is 2
9999 mem: storing 2 in location 1377
 104 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1377 is 2
9998 run: jumping to instruction 9
 104 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1374 is 65513
9999 mem: location 1375 is 2
9999 mem: location 1376 is 1
9998 run: address to copy is 1376
9998 run: its type is "number"
9999 mem: location 1376 is 1
9999 mem: storing 1 in location 1378
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1379
 104 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1379 is 0
9999 mem: storing 0 in location 1380
 104 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 14
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1381
 104 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1381 is 9
9999 mem: storing 0 in location 1382
 104 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 18
 104 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1383
 104 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1384
 104 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1385
9999 mem: incrementing refcount of 1170: 10 -> 11
 104 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1372 is 1008
9999 mem: location 1373 is 1151
9999 mem: location 1377 is 2
9999 mem: location 1378 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1398
9999 mem: storing 26 in location 1399
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/scenario_editor-can-undo-ctrl-a
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1401
9999 mem: incrementing refcount of 1008: 104 -> 105
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1402
9999 mem: incrementing refcount of 1151: 8 -> 9
 105 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1403
 105 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1404
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1402 is 1151
9998 run: jumping to instruction 7
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1405
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1406
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1401 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1199
 106 run: return {height: "number"}
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1407
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1408
9999 mem: incrementing refcount of 1170: 11 -> 12
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1170
9999 mem: storing 1170 in location 1409
9999 mem: incrementing refcount of 1170: 12 -> 13
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1170
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 13 -> 14
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 14 -> 13
9999 mem: storing 1191 in location 1408
9999 mem: incrementing refcount of 1191: 13 -> 14
 105 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1410
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1411
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1412
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1403 is 2
9999 mem: location 1412 is 1159
9999 mem: storing 2 in location 1159
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1413
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1404 is 1
9999 mem: location 1413 is 1160
9999 mem: storing 1 in location 1160
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1414
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1191
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 1
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1408 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 97
9999 mem: storing 97 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 97
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 0
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1191
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 15 -> 14
9999 mem: storing 1200 in location 1408
9999 mem: incrementing refcount of 1200: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1170
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 13 -> 14
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 14 -> 13
9999 mem: storing 1191 in location 1409
9999 mem: incrementing refcount of 1191: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 0
9999 mem: storing 1 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1200
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 1
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1408 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 98
9999 mem: storing 98 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 98
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 1
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1200
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 15 -> 14
9999 mem: storing 1204 in location 1408
9999 mem: incrementing refcount of 1204: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1191
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 17 -> 16
9999 mem: storing 1200 in location 1409
9999 mem: incrementing refcount of 1200: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 1
9999 mem: storing 2 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1204
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 1
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1408 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 99
9999 mem: storing 99 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 99
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 2
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1204
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 15 -> 14
9999 mem: storing 1208 in location 1408
9999 mem: incrementing refcount of 1208: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1200
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 17 -> 16
9999 mem: storing 1204 in location 1409
9999 mem: incrementing refcount of 1204: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 2
9999 mem: storing 3 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1208
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 1
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1408 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 10
9999 mem: storing 1 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 43
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1410 is 1
9999 mem: storing 2 in location 1410
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1411
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1208
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 15 -> 14
9999 mem: storing 1212 in location 1408
9999 mem: incrementing refcount of 1212: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1204
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 17 -> 16
9999 mem: storing 1208 in location 1409
9999 mem: incrementing refcount of 1208: 15 -> 16
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1212
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 2
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 0
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1417
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1408 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 100
9999 mem: storing 100 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 100
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 0
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1212
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 15 -> 14
9999 mem: storing 1216 in location 1408
9999 mem: incrementing refcount of 1216: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1208
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 17 -> 16
9999 mem: storing 1212 in location 1409
9999 mem: incrementing refcount of 1212: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 0
9999 mem: storing 1 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1216
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 2
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 1
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1417
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1212
9999 mem: location 1414 is 1155
9999 mem: decrementing refcount of 1170: 13 -> 12
9999 mem: storing 1212 in location 1155
9999 mem: incrementing refcount of 1212: 16 -> 17
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1408 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 101
9999 mem: storing 101 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 101
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 1
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1216
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 15 -> 14
9999 mem: storing 1220 in location 1408
9999 mem: incrementing refcount of 1220: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1212
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 18 -> 17
9999 mem: storing 1216 in location 1409
9999 mem: incrementing refcount of 1216: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 1
9999 mem: storing 2 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1220
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 2
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 2
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1417
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1408 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 102
9999 mem: storing 102 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 102
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 2
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1220
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 15 -> 14
9999 mem: storing 1224 in location 1408
9999 mem: incrementing refcount of 1224: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1216
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 17 -> 16
9999 mem: storing 1220 in location 1409
9999 mem: incrementing refcount of 1220: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 2
9999 mem: storing 3 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1224
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 2
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 3
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1417
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1408 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 10
9999 mem: storing 1 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 105 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 3
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1420
 105 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 0
9998 run: jumping to instruction 43
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1410 is 2
9999 mem: storing 3 in location 1410
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1411
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1224
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 15 -> 14
9999 mem: storing 1228 in location 1408
9999 mem: incrementing refcount of 1228: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1220
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 17 -> 16
9999 mem: storing 1224 in location 1409
9999 mem: incrementing refcount of 1224: 15 -> 16
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1228
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 3
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1408 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 103
9999 mem: storing 103 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 103
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 0
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1228
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 15 -> 14
9999 mem: storing 1232 in location 1408
9999 mem: incrementing refcount of 1232: 13 -> 14
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1224
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 17 -> 16
9999 mem: storing 1228 in location 1409
9999 mem: incrementing refcount of 1228: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 0
9999 mem: storing 1 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1232
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 3
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1408 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 104
9999 mem: storing 104 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 104
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 1
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1232
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 11 -> 12
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 15 -> 14
9999 mem: storing 1236 in location 1408
9999 mem: incrementing refcount of 1236: 12 -> 13
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1228
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 17 -> 16
9999 mem: storing 1232 in location 1409
9999 mem: incrementing refcount of 1232: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 1
9999 mem: storing 2 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1236
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 3
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1408 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 105
9999 mem: storing 105 in location 1418
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 105
9999 mem: storing 0 in location 1419
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 2
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1236
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1198
9999 mem: incrementing refcount of 1236: 13 -> 14
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1236
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1198 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1199
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1236: 14 -> 13
9999 mem: storing 0 in location 1408
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1232
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 13 -> 14
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 17 -> 16
9999 mem: storing 1236 in location 1409
9999 mem: incrementing refcount of 1236: 14 -> 15
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 2
9999 mem: storing 3 in location 1411
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 61
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1416
 105 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 3
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1422
 105 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1416 is 0
9999 mem: location 1422 is 0
9999 mem: storing 0 in location 1423
 105 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1424
 105 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: storing 0 in location 1425
 105 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 72
 105 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1402 is 1151
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 9 -> 8
9999 mem: storing 1151 in location 1373
9999 mem: incrementing refcount of 1151: 8 -> 9
 104 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1386
 104 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1387
 104 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1388
 104 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1389
9999 mem: incrementing refcount of 1170: 12 -> 13
 104 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 44
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
9999 mem: storing 1270 in location 1391
9999 mem: incrementing refcount of 1270: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1383 is 1
9999 mem: location 1384 is 0
9999 mem: location 1385 is 1170
9999 mem: location 1387 is 2
9999 mem: location 1388 is 1
9999 mem: location 1389 is 1170
9999 mem: location 1386 is 0
9999 mem: location 1391 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1391 is 1270
9999 mem: skipping refcount at 1270
9999 mem: storing 1 in location 1271
9999 mem: storing 1 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 1170 in location 1274
9999 mem: storing 2 in location 1275
9999 mem: storing 1 in location 1276
9999 mem: storing 1170 in location 1277
9999 mem: storing 0 in location 1278
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1373 is 1151
9999 mem: location 1391 is 1270
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1187
9999 mem: incrementing refcount of 1151: 9 -> 10
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1188
9999 mem: incrementing refcount of 1270: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1189
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1188 is 1270
9999 mem: location 1189 is 1162
9999 mem: location 1162 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1164
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1167
9999 mem: incrementing refcount of 1270: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1168
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1426
9999 mem: storing 1426 in location 1169
9999 mem: incrementing refcount of 1426: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1270
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1426
9999 mem: skipping refcount at 1426
9999 mem: location 1169 is 1426
9999 mem: skipping refcount at 1426
9999 mem: storing 1270 in location 1427
9999 mem: storing 0 in location 1428
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1426
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1426
9999 mem: location 1189 is 1162
9999 mem: storing 1426 in location 1162
9999 mem: incrementing refcount of 1426: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1190 is 1163
9999 mem: storing 0 in location 1163
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1187 is 1151
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 10 -> 9
9999 mem: storing 1151 in location 1373
9999 mem: incrementing refcount of 1151: 9 -> 10
 104 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1373 is 1151
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 3
 103 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1360
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 1
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 106 -> 107
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 107 -> 106
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 106 -> 107
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1350
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1312
9999 mem: incrementing refcount of 1350: 2 -> 3
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1350
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 1
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1351
9999 mem: storing 1351 in location 1313
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 1
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1352
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1352 is 1340
9999 mem: storing 1340 in location 1314
9999 mem: incrementing refcount of 1340: 2 -> 3
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 2 in location 1315
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 1
9999 mem: location 1315 is 2
9999 mem: storing 0 in location 1316
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9998 run: base address is 1341
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 1
9998 run: address to copy is 1346
9998 run: its type is event
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1318
9999 mem: storing 1 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 1
9999 mem: location 1313 is 1351
9999 mem: storing 2 in location 1351
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 1
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1312 is 1350
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 1, 0, 0]
9998 run: result 1 is 1350
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1361
9999 mem: storing 1 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1350: 3 -> 2
9999 mem: storing 1350 in location 1357
9999 mem: incrementing refcount of 1350: 2 -> 3
9999 mem: storing 1 in location 1365
9999 mem: storing 0 in location 1366
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1361 is 0
9999 mem: location 1362 is 1
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 mem: storing 0 in location 1367
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1356 is 1008
9999 mem: location 1358 is 1151
9999 mem: location 1361 is 0
9999 mem: location 1362 is 1
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1429
9999 mem: storing 85 in location 1430
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1432
9999 mem: incrementing refcount of 1008: 107 -> 108
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 10 -> 11
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1434
9999 mem: storing 1 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1438
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1433 is 1151
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 108 -> 109
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1199
 105 run: return {width: "number"}
9999 mem: location 1199 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1439
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 109 -> 110
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1199
 105 run: return {height: "number"}
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1440
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1441
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1442
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1444
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1445
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1444 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1446
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1445 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1447
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1434 is 0
9999 mem: location 1435 is 1
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: storing 1435 in location 1448
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1448 is 1435
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 1
9999 mem: storing 0 in location 1449
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 1
9999 mem: storing 0 in location 1460
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 108
9990 schedule: handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-ctrl-a
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 1
9999 mem: storing 0 in location 1465
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 1
9999 mem: storing 0 in location 1481
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 1
9999 mem: storing 0 in location 1482
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 1
9999 mem: storing 0 in location 1487
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 1
9999 mem: storing 0 in location 1488
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 1
9999 mem: storing 1 in location 1489
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1468
 104 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1469
 104 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1470
9999 mem: incrementing refcount of 1170: 13 -> 14
 104 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1433 is 1151
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1516
9999 mem: storing 9 in location 1517
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1519
9999 mem: incrementing refcount of 1151: 11 -> 12
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1520
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1521
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1520 is 0
9999 mem: location 1521 is 1160
9999 mem: storing 0 in location 1160
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1522
 105 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1170
9999 mem: storing 1170 in location 1523
9999 mem: incrementing refcount of 1170: 14 -> 15
 105 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1212
9999 mem: location 1523 is 1170
9999 mem: storing 0 in location 1524
 105 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jump-if fell through
 105 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 100
9999 mem: storing 100 in location 1525
 105 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1525 is 100
9999 mem: storing 0 in location 1526
 105 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jump-if fell through
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1212
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 16 -> 17
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1208
9999 mem: location 1522 is 1155
9999 mem: decrementing refcount of 1212: 18 -> 17
9999 mem: storing 1208 in location 1155
9999 mem: incrementing refcount of 1208: 17 -> 18
 105 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1208
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1208
9999 mem: location 1523 is 1170
9999 mem: storing 0 in location 1524
 105 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jump-if fell through
 105 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1525
 105 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1525 is 10
9999 mem: storing 1 in location 1526
 105 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 1
9998 run: jumping to instruction 16
 105 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1519 is 1151
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 4
 104 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1471
 104 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1472
 104 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1473
 104 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1474
9999 mem: incrementing refcount of 1170: 15 -> 16
 104 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 298
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1527
9999 mem: storing 1527 in location 1451
9999 mem: incrementing refcount of 1527: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1468 is 2
9999 mem: location 1469 is 1
9999 mem: location 1470 is 1170
9999 mem: location 1472 is 2
9999 mem: location 1473 is 0
9999 mem: location 1474 is 1170
9999 mem: location 1471 is 0
9999 mem: location 1451 is 1527
9999 mem: skipping refcount at 1527
9999 mem: location 1451 is 1527
9999 mem: skipping refcount at 1527
9999 mem: storing 1 in location 1528
9999 mem: storing 2 in location 1529
9999 mem: storing 1 in location 1530
9999 mem: storing 1170 in location 1531
9999 mem: storing 2 in location 1532
9999 mem: storing 0 in location 1533
9999 mem: storing 1170 in location 1534
9999 mem: storing 0 in location 1535
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1433 is 1151
9999 mem: location 1451 is 1527
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1187
9999 mem: incrementing refcount of 1151: 12 -> 13
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1527 in location 1188
9999 mem: incrementing refcount of 1527: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1189
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1188 is 1527
9999 mem: location 1189 is 1162
9999 mem: location 1162 is 1426
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1164
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1527 in location 1167
9999 mem: incrementing refcount of 1527: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1426 in location 1168
9999 mem: incrementing refcount of 1426: 2 -> 3
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1539
9999 mem: storing 1539 in location 1169
9999 mem: incrementing refcount of 1539: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1527
9999 mem: location 1168 is 1426
9999 mem: location 1169 is 1539
9999 mem: skipping refcount at 1539
9999 mem: location 1169 is 1539
9999 mem: skipping refcount at 1539
9999 mem: storing 1527 in location 1540
9999 mem: storing 1426 in location 1541
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1539
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1539
9999 mem: location 1189 is 1162
9999 mem: decrementing refcount of 1426: 3 -> 2
9999 mem: storing 1539 in location 1162
9999 mem: incrementing refcount of 1539: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1190 is 1163
9999 mem: storing 0 in location 1163
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1187 is 1151
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 13 -> 12
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 12 -> 13
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1438
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1432 is 1008
9999 mem: location 1433 is 1151
9999 mem: location 1438 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1151
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 110 -> 109
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 109 -> 110
9999 mem: decrementing refcount of 1151: 13 -> 12
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 12 -> 13
9999 mem: storing 0 in location 1368
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1360
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 110 -> 111
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 110 -> 111
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1350
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1312
9999 mem: incrementing refcount of 1350: 3 -> 4
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1350
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 2
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1351
9999 mem: storing 1351 in location 1313
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 2
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1352
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1352 is 1340
9999 mem: storing 1340 in location 1314
9999 mem: incrementing refcount of 1340: 3 -> 4
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 2 in location 1315
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 2
9999 mem: location 1315 is 2
9999 mem: storing 1 in location 1316
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 104 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
9999 mem: storing 1195 in location 1317
9999 mem: incrementing refcount of 1195: 0 -> 1
 104 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1317 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1312 is 1350
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1350
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1350: 4 -> 3
9999 mem: storing 1350 in location 1357
9999 mem: incrementing refcount of 1350: 3 -> 4
9999 mem: storing 1 in location 1365
9999 mem: storing 1 in location 1366
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 1
9998 run: jumping to instruction 28
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1356 is 1008
9999 mem: location 1357 is 1350
9999 mem: location 1358 is 1151
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'press' event starting at 1544
9999 mem: storing console in 1548
9999 mem: storing console data in 1550
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1548
9999 mem: location 2 is 1151
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1353
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 111 -> 112
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1548 in location 1357
9999 mem: incrementing refcount of 1548: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 13 -> 14
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 112 -> 113
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 113 -> 112
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 112 -> 113
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1548
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1548 in location 1312
9999 mem: incrementing refcount of 1548: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1548
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1548
9999 mem: skipping refcount at 1548
9999 mem: location 1549 is 0
9999 mem: location 1550 is 1542
9999 mem: location 1312 is 1548
9999 mem: skipping refcount at 1548
9998 run: address to copy is 1549
9999 mem: storing 1549 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1548
9999 mem: skipping refcount at 1548
9999 mem: location 1549 is 0
9999 mem: location 1550 is 1542
9999 mem: location 1312 is 1548
9999 mem: skipping refcount at 1548
9998 run: address to copy is 1550
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1550 is 1542
9999 mem: storing 1542 in location 1314
9999 mem: incrementing refcount of 1542: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1542
9999 mem: skipping refcount at 1542
9999 mem: storing 1 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1549
9999 mem: location 1549 is 0
9999 mem: location 1315 is 1
9999 mem: storing 0 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1314 is 1542
9999 mem: skipping refcount at 1542
9998 run: base address is 1543
9999 mem: location 1313 is 1549
9999 mem: location 1549 is 0
9998 run: address to copy is 1544
9998 run: its type is event
9999 mem: location 1544 is 0
9999 mem: location 1545 is 26
9999 mem: location 1546 is 0
9999 mem: location 1547 is 0
9999 mem: storing 0 in location 1318
9999 mem: storing 26 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1313 is 1549
9999 mem: location 1549 is 0
9999 mem: location 1313 is 1549
9999 mem: storing 1 in location 1549
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 26
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1312 is 1548
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1548
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1361
9999 mem: storing 26 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1548: 2 -> 1
9999 mem: storing 1548 in location 1357
9999 mem: incrementing refcount of 1548: 1 -> 2
9999 mem: storing 1 in location 1365
9999 mem: storing 0 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1361 is 0
9999 mem: location 1362 is 26
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 mem: storing 0 in location 1367
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1356 is 1008
9999 mem: location 1358 is 1151
9999 mem: location 1361 is 0
9999 mem: location 1362 is 26
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1429
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1432
9999 mem: incrementing refcount of 1008: 113 -> 114
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 14 -> 15
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1434
9999 mem: storing 26 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1438
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1433 is 1151
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1551
9999 mem: storing 3 in location 1552
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1554
9999 mem: incrementing refcount of 1008: 114 -> 115
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1554 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1554 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1554 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1555
 106 run: return {width: "number"}
9999 mem: location 1555 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1439
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1554
9999 mem: incrementing refcount of 1008: 115 -> 116
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1554 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1554 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1554 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1555
 106 run: return {height: "number"}
9999 mem: location 1555 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1440
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1441
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1442
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1444
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1445
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1444 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1446
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1445 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1447
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1434 is 0
9999 mem: location 1435 is 26
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: storing 1435 in location 1448
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1448 is 1435
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 26
9999 mem: storing 0 in location 1449
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 26
9999 mem: storing 1 in location 1460
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1539
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1452
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1539
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1539
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1539 in location 1554
9999 mem: incrementing refcount of 1539: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1554 is 1539
9999 mem: skipping refcount at 1539
9999 mem: location 1540 is 1527
9999 mem: location 1541 is 1426
9999 mem: location 1554 is 1539
9999 mem: skipping refcount at 1539
9998 run: address to copy is 1540
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1540 is 1527
9999 mem: storing 1527 in location 1555
9999 mem: incrementing refcount of 1527: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1555 is 1527
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1527
9999 mem: storing 1527 in location 1451
9999 mem: incrementing refcount of 1527: 4 -> 5
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1539
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1539 in location 1554
9999 mem: incrementing refcount of 1539: 3 -> 4
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1539
9999 mem: skipping refcount at 1539
9999 mem: location 1540 is 1527
9999 mem: location 1541 is 1426
9999 mem: location 1554 is 1539
9999 mem: skipping refcount at 1539
9998 run: address to copy is 1541
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1541 is 1426
9999 mem: storing 1426 in location 1555
9999 mem: incrementing refcount of 1426: 2 -> 3
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1555 is 1426
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1426
9999 mem: location 1452 is 1162
9999 mem: decrementing refcount of 1539: 4 -> 3
9999 mem: storing 1426 in location 1162
9999 mem: incrementing refcount of 1426: 3 -> 4
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1450
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1451 is 1527
9999 mem: location 1450 is 1163
9999 mem: location 1163 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1164
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1527 in location 1167
9999 mem: incrementing refcount of 1527: 5 -> 6
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1168
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1556
9999 mem: storing 1556 in location 1169
9999 mem: incrementing refcount of 1556: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1527
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1556
9999 mem: skipping refcount at 1556
9999 mem: location 1169 is 1556
9999 mem: skipping refcount at 1556
9999 mem: storing 1527 in location 1557
9999 mem: storing 0 in location 1558
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1556
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1556
9999 mem: location 1450 is 1163
9999 mem: storing 1556 in location 1163
9999 mem: incrementing refcount of 1556: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1451 is 1527
9999 mem: skipping refcount at 1527
9999 mem: location 1528 is 1
9999 mem: location 1529 is 2
9999 mem: location 1530 is 1
9999 mem: location 1531 is 1170
9999 mem: location 1532 is 2
9999 mem: location 1533 is 0
9999 mem: location 1534 is 1170
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1451 is 1527
9999 mem: skipping refcount at 1527
9999 mem: storing 0 in location 1453
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 86
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1451 is 1527
9999 mem: skipping refcount at 1527
9999 mem: location 1528 is 1
9999 mem: location 1529 is 2
9999 mem: location 1530 is 1
9999 mem: location 1531 is 1170
9999 mem: location 1532 is 2
9999 mem: location 1533 is 0
9999 mem: location 1534 is 1170
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1451 is 1527
9999 mem: skipping refcount at 1527
9999 mem: storing 1529 in location 1457
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1457 is 1529
9998 run: jump-unless fell through
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1456
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-row: "offset"}
9999 mem: location 1457 is 1529
9999 mem: location 1529 is 2
9999 mem: location 1530 is 1
9999 mem: location 1531 is 1170
9999 mem: location 1532 is 2
9999 mem: location 1533 is 0
9999 mem: location 1534 is 1170
9999 mem: location 1535 is 0
9999 mem: location 1457 is 1529
9998 run: address to copy is 1529
9998 run: its type is "number"
9999 mem: location 1529 is 2
9999 mem: location 1444 is 1159
9999 mem: storing 2 in location 1159
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-column: "offset"}
9999 mem: location 1457 is 1529
9999 mem: location 1529 is 2
9999 mem: location 1530 is 1
9999 mem: location 1531 is 1170
9999 mem: location 1532 is 2
9999 mem: location 1533 is 0
9999 mem: location 1534 is 1170
9999 mem: location 1535 is 0
9999 mem: location 1457 is 1529
9998 run: address to copy is 1530
9998 run: its type is "number"
9999 mem: location 1530 is 1
9999 mem: location 1445 is 1160
9999 mem: storing 1 in location 1160
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-top-of-screen: "offset"}
9999 mem: location 1457 is 1529
9999 mem: location 1529 is 2
9999 mem: location 1530 is 1
9999 mem: location 1531 is 1170
9999 mem: location 1532 is 2
9999 mem: location 1533 is 0
9999 mem: location 1534 is 1170
9999 mem: location 1535 is 0
9999 mem: location 1457 is 1529
9998 run: address to copy is 1531
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1531 is 1170
9999 mem: location 1456 is 1153
9999 mem: decrementing refcount of 1170: 16 -> 15
9999 mem: storing 1170 in location 1153
9999 mem: incrementing refcount of 1170: 15 -> 16
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1451 is 1527
9999 mem: skipping refcount at 1527
9999 mem: location 1528 is 1
9999 mem: location 1529 is 2
9999 mem: location 1530 is 1
9999 mem: location 1531 is 1170
9999 mem: location 1532 is 2
9999 mem: location 1533 is 0
9999 mem: location 1534 is 1170
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1451 is 1527
9999 mem: skipping refcount at 1527
9999 mem: storing 0 in location 1458
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 106
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1432 is 1008
9999 mem: location 1433 is 1151
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1151
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 116 -> 115
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 115 -> 116
9999 mem: decrementing refcount of 1151: 15 -> 14
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 14 -> 15
9999 mem: storing 1 in location 1368
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1356 is 1008
9999 mem: location 1358 is 1151
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 116 -> 117
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1120
9999 mem: incrementing refcount of 1151: 15 -> 16
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1120 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1120 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1151
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1240
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 117 -> 118
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1244
9999 mem: incrementing refcount of 1151: 16 -> 17
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1244 is 1151
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1245
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1243 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1554
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1554 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1554 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1554 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1555
 107 run: return {height: "number"}
9999 mem: location 1555 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1246
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1247
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1248
9999 mem: incrementing refcount of 1170: 16 -> 17
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1170
9999 mem: storing 1170 in location 1249
9999 mem: incrementing refcount of 1170: 17 -> 18
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1554
9999 mem: incrementing refcount of 1170: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1170
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1554 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1555
9999 mem: incrementing refcount of 1191: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 19 -> 18
9999 mem: storing 1191 in location 1248
9999 mem: incrementing refcount of 1191: 17 -> 18
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1250
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1251
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1253
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1254
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1255
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 1
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 120 -> 119
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 119 -> 120
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1191
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1248 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 97
9999 mem: storing 97 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1559
9999 mem: storing 10 in location 1560
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 97
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 97
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 97
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 97
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 97
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 97
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 10
9999 mem: storing 1036 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1304 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 97
9999 mem: location 1305 is 1036
9999 mem: storing 97 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1304 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1554
9999 mem: incrementing refcount of 1191: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1191
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1554 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1555
9999 mem: incrementing refcount of 1200: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 19 -> 18
9999 mem: storing 1200 in location 1248
9999 mem: incrementing refcount of 1200: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1554
9999 mem: incrementing refcount of 1170: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1170
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1554 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1555
9999 mem: incrementing refcount of 1191: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 19 -> 18
9999 mem: storing 1191 in location 1249
9999 mem: incrementing refcount of 1191: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1200
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1248 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 98
9999 mem: storing 98 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 98
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 98
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 98
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 98
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 98
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 98
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 11
9999 mem: storing 1038 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1304 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 98
9999 mem: location 1305 is 1038
9999 mem: storing 98 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1304 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1200
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-a
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1554
9999 mem: incrementing refcount of 1200: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1200
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1554 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1555
9999 mem: incrementing refcount of 1204: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 19 -> 18
9999 mem: storing 1204 in location 1248
9999 mem: incrementing refcount of 1204: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1554
9999 mem: incrementing refcount of 1191: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1191
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1554 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1555
9999 mem: incrementing refcount of 1200: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 21 -> 20
9999 mem: storing 1200 in location 1249
9999 mem: incrementing refcount of 1200: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1204
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1248 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 99
9999 mem: storing 99 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 99
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 99
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 99
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 99
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 99
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 99
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 12
9999 mem: storing 1040 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1304 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 99
9999 mem: location 1305 is 1040
9999 mem: storing 99 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1304 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1554
9999 mem: incrementing refcount of 1204: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1554 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1555
9999 mem: incrementing refcount of 1208: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 19 -> 18
9999 mem: storing 1208 in location 1248
9999 mem: incrementing refcount of 1208: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1554
9999 mem: incrementing refcount of 1200: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1200
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1554 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1555
9999 mem: incrementing refcount of 1204: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 21 -> 20
9999 mem: storing 1204 in location 1249
9999 mem: incrementing refcount of 1204: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1208
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 1
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1248 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 10
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 10
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 10
9999 mem: storing 1 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 1
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1252 is 3
9999 mem: location 1247 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1178
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 124 -> 125
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 68 -> 69
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 13
9999 mem: storing 1042 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1304 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1042
9999 mem: storing 32 in location 1042
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1304 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1043
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 125 -> 126
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 69 -> 70
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 14
9999 mem: storing 1044 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1304 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1044
9999 mem: storing 32 in location 1044
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1304 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1045
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 126 -> 127
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 70 -> 71
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 15
9999 mem: storing 1046 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1304 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1046
9999 mem: storing 32 in location 1046
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1304 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1047
9999 mem: storing 7 in location 1047
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 127 -> 126
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 127 -> 128
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 71 -> 72
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 16
9999 mem: storing 1048 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1304 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1048
9999 mem: storing 32 in location 1048
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1304 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1049
9999 mem: storing 7 in location 1049
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 128 -> 127
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 127 -> 128
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 128 -> 129
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 72 -> 73
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 17
9999 mem: storing 1050 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1304 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1050
9999 mem: storing 32 in location 1050
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1304 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1051
9999 mem: storing 7 in location 1051
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 128 -> 129
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 129 -> 130
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 73 -> 74
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 18
9999 mem: storing 1052 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1304 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1052
9999 mem: storing 32 in location 1052
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1304 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1053
9999 mem: storing 7 in location 1053
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-a
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 130 -> 129
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 129 -> 130
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 130 -> 131
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 1
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 10
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 74 -> 75
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 19
9999 mem: storing 1054 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1304 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1054
9999 mem: storing 32 in location 1054
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1304 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1055
9999 mem: storing 7 in location 1055
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 131 -> 130
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1251 is 1
9999 mem: storing 2 in location 1251
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 2
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 131 -> 132
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1554
9999 mem: incrementing refcount of 1208: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1554 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1555
9999 mem: incrementing refcount of 1212: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 21 -> 20
9999 mem: storing 1212 in location 1248
9999 mem: incrementing refcount of 1212: 18 -> 19
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1554
9999 mem: incrementing refcount of 1204: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1554 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1555
9999 mem: incrementing refcount of 1208: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 21 -> 20
9999 mem: storing 1208 in location 1249
9999 mem: incrementing refcount of 1208: 21 -> 22
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1212
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 0
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1258
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1248 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 100
9999 mem: storing 100 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 100
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 100
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 100
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 100
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 132 -> 133
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 100
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 75 -> 76
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 100
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 20
9999 mem: storing 1056 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1304 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 100
9999 mem: location 1305 is 1056
9999 mem: storing 100 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1304 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1554
9999 mem: incrementing refcount of 1212: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1554 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1555
9999 mem: incrementing refcount of 1216: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 20 -> 19
9999 mem: storing 1216 in location 1248
9999 mem: incrementing refcount of 1216: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1554
9999 mem: incrementing refcount of 1208: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1554 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1555
9999 mem: incrementing refcount of 1212: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 23 -> 22
9999 mem: storing 1212 in location 1249
9999 mem: incrementing refcount of 1212: 20 -> 21
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1216
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1258
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1212
9999 mem: location 1255 is 1155
9999 mem: decrementing refcount of 1208: 22 -> 21
9999 mem: storing 1212 in location 1155
9999 mem: incrementing refcount of 1212: 21 -> 22
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1248 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 101
9999 mem: storing 101 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 101
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 101
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 101
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 101
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 76 -> 77
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 21
9999 mem: storing 1058 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 101
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 101
9999 mem: location 1305 is 1058
9999 mem: storing 101 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 101
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1554
9999 mem: incrementing refcount of 1216: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1554 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1555
9999 mem: incrementing refcount of 1220: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 19 -> 18
9999 mem: storing 1220 in location 1248
9999 mem: incrementing refcount of 1220: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1554
9999 mem: incrementing refcount of 1212: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1554 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1555
9999 mem: incrementing refcount of 1216: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 23 -> 22
9999 mem: storing 1216 in location 1249
9999 mem: incrementing refcount of 1216: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1220
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1258
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1248 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 102
9999 mem: storing 102 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 102
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 102
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 102
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 102
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 134 -> 135
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 77 -> 78
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 22
9999 mem: storing 1060 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 102
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 102
9999 mem: location 1305 is 1060
9999 mem: storing 102 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 102
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1554
9999 mem: incrementing refcount of 1220: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1220
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1554 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1555
9999 mem: incrementing refcount of 1224: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 19 -> 18
9999 mem: storing 1224 in location 1248
9999 mem: incrementing refcount of 1224: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1554
9999 mem: incrementing refcount of 1216: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1554 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1555
9999 mem: incrementing refcount of 1220: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 21 -> 20
9999 mem: storing 1220 in location 1249
9999 mem: incrementing refcount of 1220: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1224
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 2
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1258
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1248 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 10
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 10
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 10
9999 mem: storing 1 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 2
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 1 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1261
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1252 is 3
9999 mem: location 1247 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1178
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 136 -> 137
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-a
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 78 -> 79
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 23
9999 mem: storing 1062 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1062
9999 mem: storing 32 in location 1062
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1063
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 137 -> 136
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 137 -> 138
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 79 -> 80
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 24
9999 mem: storing 1064 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1304 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1064
9999 mem: storing 32 in location 1064
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1304 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1065
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 138 -> 139
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 80 -> 81
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 25
9999 mem: storing 1066 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1304 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1066
9999 mem: storing 32 in location 1066
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1304 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1067
9999 mem: storing 7 in location 1067
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 139 -> 138
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 138 -> 139
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 139 -> 140
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 81 -> 82
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 26
9999 mem: storing 1068 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1304 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1068
9999 mem: storing 32 in location 1068
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1304 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1069
9999 mem: storing 7 in location 1069
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 139 -> 140
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 140 -> 141
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 82 -> 83
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 27
9999 mem: storing 1070 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1304 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1070
9999 mem: storing 32 in location 1070
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1304 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1071
9999 mem: storing 7 in location 1071
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 141 -> 140
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 140 -> 141
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 141 -> 142
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 83 -> 84
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 28
9999 mem: storing 1072 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1304 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1072
9999 mem: storing 32 in location 1072
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1304 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1073
9999 mem: storing 7 in location 1073
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 141 -> 142
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 142 -> 143
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1299
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 84 -> 85
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 29
9999 mem: storing 1074 in location 1304
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1304 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1305
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1074
9999 mem: storing 32 in location 1074
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1304 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1306
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1075
9999 mem: storing 7 in location 1075
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 143 -> 142
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 142 -> 143
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1251 is 2
9999 mem: storing 3 in location 1251
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1252
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1251 is 3
9999 mem: location 1252 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 143 -> 144
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 1008 in location 1243
9999 mem: incrementing refcount of 1008: 143 -> 144
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1554
9999 mem: incrementing refcount of 1224: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1224
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1554 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1555
9999 mem: incrementing refcount of 1228: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 19 -> 18
9999 mem: storing 1228 in location 1248
9999 mem: incrementing refcount of 1228: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1554
9999 mem: incrementing refcount of 1220: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1220
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1554 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1555
9999 mem: incrementing refcount of 1224: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 21 -> 20
9999 mem: storing 1224 in location 1249
9999 mem: incrementing refcount of 1224: 19 -> 20
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1228
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1248 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 103
9999 mem: storing 103 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 103
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 103
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 103
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 0
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 103
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 144 -> 145
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 103
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 85 -> 86
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 103
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 30
9999 mem: storing 1076 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1076
9999 mem: location 1076 is 103
9999 mem: location 1077 is 7
9999 mem: location 1304 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 103
9999 mem: location 1305 is 1076
9999 mem: storing 103 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1076
9999 mem: location 1076 is 103
9999 mem: location 1077 is 7
9999 mem: location 1304 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1228
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1554
9999 mem: incrementing refcount of 1228: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1228
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1554 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1555
9999 mem: incrementing refcount of 1232: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 19 -> 18
9999 mem: storing 1232 in location 1248
9999 mem: incrementing refcount of 1232: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1554
9999 mem: incrementing refcount of 1224: 20 -> 21
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-a
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1224
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1554 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1555
9999 mem: incrementing refcount of 1228: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 21 -> 20
9999 mem: storing 1228 in location 1249
9999 mem: incrementing refcount of 1228: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 0
9999 mem: storing 1 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1232
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1248 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 104
9999 mem: storing 104 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 104
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 104
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 104
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 104
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 104
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 145 -> 146
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 104
  90 print-character: 104 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 104
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 86 -> 87
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 104
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 31
9999 mem: storing 1078 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1078
9999 mem: location 1078 is 104
9999 mem: location 1079 is 7
9999 mem: location 1304 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 104
9999 mem: location 1305 is 1078
9999 mem: storing 104 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1078
9999 mem: location 1078 is 104
9999 mem: location 1079 is 7
9999 mem: location 1304 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1232
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1554
9999 mem: incrementing refcount of 1232: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1232
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1554 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1555
9999 mem: incrementing refcount of 1236: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 19 -> 18
9999 mem: storing 1236 in location 1248
9999 mem: incrementing refcount of 1236: 16 -> 17
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1228
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1554
9999 mem: incrementing refcount of 1228: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1228
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1554 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1555
9999 mem: incrementing refcount of 1232: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 21 -> 20
9999 mem: storing 1232 in location 1249
9999 mem: incrementing refcount of 1232: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 1
9999 mem: storing 2 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 1236
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1246 is 5
9999 mem: storing 0 in location 1256
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1257 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1248 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1248 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 105
9999 mem: storing 105 in location 1259
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1250 is 7
9999 mem: location 1259 is 105
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1562
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1563
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1562 is 7
9999 mem: storing 1 in location 1564
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1563 is 105
9999 mem: storing 0 in location 1565
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1566
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1563 is 105
9999 mem: storing 0 in location 1568
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1568 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1562 is 7
9999 mem: storing 0 in location 1569
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1562 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1250
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1259 is 105
9999 mem: storing 0 in location 1260
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1247 is 9
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1243 is 1008
9999 mem: location 1259 is 105
9999 mem: location 1250 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 146 -> 147
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 105
  90 print-character: 105 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 105
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 87 -> 88
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 105
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 32
9999 mem: storing 1080 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1080
9999 mem: location 1080 is 105
9999 mem: location 1081 is 7
9999 mem: location 1304 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 105
9999 mem: location 1305 is 1080
9999 mem: storing 105 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1080
9999 mem: location 1080 is 105
9999 mem: location 1081 is 7
9999 mem: location 1304 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 1236
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1554
9999 mem: incrementing refcount of 1236: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1236
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1554 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1555
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1236: 18 -> 17
9999 mem: storing 0 in location 1248
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1249 is 1232
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1554
9999 mem: incrementing refcount of 1232: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1554 is 1232
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1554 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1554 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1555
9999 mem: incrementing refcount of 1236: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1555 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 21 -> 20
9999 mem: storing 1236 in location 1249
9999 mem: incrementing refcount of 1236: 18 -> 19
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1252 is 2
9999 mem: storing 3 in location 1252
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1264
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1248 is 0
9999 mem: location 1264 is 1154
9999 mem: storing 0 in location 1154
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1257
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1252 is 3
9999 mem: location 1254 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1265
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1257 is 0
9999 mem: location 1265 is 0
9999 mem: storing 0 in location 1266
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1251 is 3
9999 mem: location 1253 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 0 in location 1267
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: storing 0 in location 1268
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1244 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1269
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1251 is 3
9999 mem: location 1269 is 1158
9999 mem: storing 3 in location 1158
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1251 is 3
9999 mem: location 1252 is 3
9999 mem: location 1243 is 1008
9999 mem: location 1244 is 1151
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 3
9999 mem: storing 3 in location 1123
9999 mem: storing 3 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 3
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 147 -> 148
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1178
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 148 -> 149
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 88 -> 89
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 33
9999 mem: storing 1082 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1304 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1082
9999 mem: storing 32 in location 1082
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1304 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1083
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 149 -> 148
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 148 -> 149
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 149 -> 150
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 89 -> 90
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 34
9999 mem: storing 1084 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1304 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1084
9999 mem: storing 32 in location 1084
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1304 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1085
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 150 -> 149
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 149 -> 150
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 150 -> 151
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 90 -> 91
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 35
9999 mem: storing 1086 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1304 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1086
9999 mem: storing 32 in location 1086
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1304 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1087
9999 mem: storing 7 in location 1087
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 151 -> 150
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 150 -> 151
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 151 -> 152
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 91 -> 92
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 36
9999 mem: storing 1088 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1304 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1088
9999 mem: storing 32 in location 1088
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1304 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1089
9999 mem: storing 7 in location 1089
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 152 -> 151
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 151 -> 152
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 152 -> 153
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-a
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 92 -> 93
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 37
9999 mem: storing 1090 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1304 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1090
9999 mem: storing 32 in location 1090
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1304 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1091
9999 mem: storing 7 in location 1091
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 152 -> 153
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 153 -> 154
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 93 -> 94
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 38
9999 mem: storing 1092 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1304 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1092
9999 mem: storing 32 in location 1092
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1304 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1093
9999 mem: storing 7 in location 1093
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 153 -> 154
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 154 -> 155
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 3
9999 mem: location 1291 is 10
9999 mem: storing 30 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 30
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 94 -> 95
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 32
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 39
9999 mem: storing 1094 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1304 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 32
9999 mem: location 1305 is 1094
9999 mem: storing 32 in location 1094
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1304 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1095
9999 mem: storing 7 in location 1095
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 154 -> 155
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 3
9999 mem: storing 4 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 4
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 155 -> 156
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1313
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1314
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1315
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1316
9999 mem: storing 1 in location 1317
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1317 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1318
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1320
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1313 is 4
9999 mem: location 1314 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 156 -> 157
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 156 -> 157
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 0
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 157 -> 158
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 95 -> 96
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 40
9999 mem: storing 1096 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1096
9999 mem: location 1096 is 9480
9999 mem: location 1097 is 245
9999 mem: location 1304 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1096
9999 mem: storing 9480 in location 1096
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1096
9999 mem: location 1096 is 9480
9999 mem: location 1097 is 245
9999 mem: location 1304 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1097
9999 mem: storing 245 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 0
9999 mem: storing 1 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 1
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 158 -> 159
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 96 -> 97
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 41
9999 mem: storing 1098 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1098
9999 mem: location 1098 is 9480
9999 mem: location 1099 is 245
9999 mem: location 1304 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1098
9999 mem: storing 9480 in location 1098
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1098
9999 mem: location 1098 is 9480
9999 mem: location 1099 is 245
9999 mem: location 1304 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1099
9999 mem: storing 245 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 1
9999 mem: storing 2 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 2
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 159 -> 160
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 97 -> 98
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 42
9999 mem: storing 1100 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 245
9999 mem: location 1304 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1100
9999 mem: storing 9480 in location 1100
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 245
9999 mem: location 1304 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1101
9999 mem: storing 245 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 2
9999 mem: storing 3 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 3
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 160 -> 161
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 98 -> 99
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 43
9999 mem: storing 1102 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 245
9999 mem: location 1304 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1102
9999 mem: storing 9480 in location 1102
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 245
9999 mem: location 1304 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1103
9999 mem: storing 245 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 3
9999 mem: storing 4 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 4
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 161 -> 162
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 99 -> 100
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 44
9999 mem: storing 1104 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 245
9999 mem: location 1304 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1104
9999 mem: storing 9480 in location 1104
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 245
9999 mem: location 1304 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1105
9999 mem: storing 245 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1295 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 4
9999 mem: storing 5 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 5
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 162 -> 163
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 100 -> 101
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 45
9999 mem: storing 1106 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 245
9999 mem: location 1304 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1106
9999 mem: storing 9480 in location 1106
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 245
9999 mem: location 1304 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1107
9999 mem: storing 245 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1295 is 1012
9999 mem: storing 6 in location 1012
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-a
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 5
9999 mem: storing 6 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 6
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 163 -> 164
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 101 -> 102
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 46
9999 mem: storing 1108 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 245
9999 mem: location 1304 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1108
9999 mem: storing 9480 in location 1108
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 245
9999 mem: location 1304 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1109
9999 mem: storing 245 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1295 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 6
9999 mem: storing 7 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 7
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 164 -> 165
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 102 -> 103
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 47
9999 mem: storing 1110 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 245
9999 mem: location 1304 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1110
9999 mem: storing 9480 in location 1110
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 245
9999 mem: location 1304 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1111
9999 mem: storing 245 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1295 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 7
9999 mem: storing 8 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 8
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 165 -> 166
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 103 -> 104
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 48
9999 mem: storing 1112 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 245
9999 mem: location 1304 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1112
9999 mem: storing 9480 in location 1112
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 245
9999 mem: location 1304 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1113
9999 mem: storing 245 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1295 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 8
9999 mem: storing 9 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 9
9999 mem: location 1315 is 9
9999 mem: storing 1 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1316 is 9480
9999 mem: location 1318 is 245
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 166 -> 167
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1287
9999 mem: storing 1 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 4
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 4
9999 mem: location 1291 is 10
9999 mem: storing 40 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 40
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 104 -> 105
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 9480
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 49
9999 mem: storing 1114 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 245
9999 mem: location 1304 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 9480
9999 mem: location 1305 is 1114
9999 mem: storing 9480 in location 1114
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 245
9999 mem: location 1304 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 245
9999 mem: location 1306 is 1115
9999 mem: storing 245 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1307 is 9
9999 mem: storing 1 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1314 is 9
9999 mem: storing 10 in location 1314
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1314 is 10
9999 mem: location 1315 is 9
9999 mem: storing 0 in location 1322
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1312 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 4
9999 mem: storing 5 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 5
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 167 -> 168
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1323
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 168 -> 169
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1327
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1328
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1326 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1329
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1327 is 5
9999 mem: location 1329 is 1011
9999 mem: storing 5 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1330
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1328 is 0
9999 mem: location 1330 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1326 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 169 -> 168
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 168 -> 169
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 169 -> 170
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1178
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1179
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1180
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1182 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1181
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 0
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 170 -> 171
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 171 -> 170
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 170 -> 171
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 0
9999 mem: storing 1 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 1
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 171 -> 172
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 171 -> 172
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 1
9999 mem: storing 2 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 2
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 172 -> 173
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 173 -> 172
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 172 -> 173
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 2
9999 mem: storing 3 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 173 -> 174
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 174 -> 173
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 173 -> 174
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 174 -> 175
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 175 -> 174
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 174 -> 175
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 175 -> 176
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 176 -> 175
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 175 -> 176
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 176 -> 177
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 177 -> 176
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 176 -> 177
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 177 -> 178
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 178 -> 177
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 177 -> 178
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 178 -> 179
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-a
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 179 -> 178
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 178 -> 179
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1179 is 9
9999 mem: storing 0 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1177 is 1008
9999 mem: location 1180 is 32
9999 mem: location 1181 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 179 -> 180
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1287
9999 mem: storing 1 in location 1288
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 1 in location 1290
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1293
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 5
9999 mem: storing 1 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 5
9999 mem: location 1292 is 5
9999 mem: storing 0 in location 1294
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 180 -> 179
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 179 -> 180
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1179 is 9
9999 mem: storing 1 in location 1183
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1177 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1331
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 180 -> 181
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1335
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1336
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1337
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1335 is 5
9999 mem: storing 6 in location 1335
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1334 is 1008
9999 mem: location 1335 is 6
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1323
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1326
9999 mem: incrementing refcount of 1008: 181 -> 182
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1327
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1328
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1326 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1329
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1327 is 6
9999 mem: location 1329 is 1011
9999 mem: storing 6 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1326 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1330
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1328 is 0
9999 mem: location 1330 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1326 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 182 -> 181
9999 mem: storing 1008 in location 1334
9999 mem: incrementing refcount of 1008: 181 -> 182
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1554
9999 mem: incrementing refcount of 1008: 182 -> 183
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1554 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1554 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1554 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1555
 108 run: return {height: "number"}
9999 mem: location 1555 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1338
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1335 is 6
9999 mem: location 1338 is 5
9999 mem: storing 1 in location 1339
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1334 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1151
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 183 -> 182
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 182 -> 183
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 183 -> 184
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 184 -> 183
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 183 -> 184
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1548
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1548 in location 1312
9999 mem: incrementing refcount of 1548: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1548
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1548
9999 mem: skipping refcount at 1548
9999 mem: location 1549 is 1
9999 mem: location 1550 is 1542
9999 mem: location 1312 is 1548
9999 mem: skipping refcount at 1548
9998 run: address to copy is 1549
9999 mem: storing 1549 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1548
9999 mem: skipping refcount at 1548
9999 mem: location 1549 is 1
9999 mem: location 1550 is 1542
9999 mem: location 1312 is 1548
9999 mem: skipping refcount at 1548
9998 run: address to copy is 1550
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1550 is 1542
9999 mem: storing 1542 in location 1314
9999 mem: incrementing refcount of 1542: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1542
9999 mem: skipping refcount at 1542
9999 mem: storing 1 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1549
9999 mem: location 1549 is 1
9999 mem: location 1315 is 1
9999 mem: storing 1 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1551
9999 mem: storing 1551 in location 1317
9999 mem: incrementing refcount of 1551: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1317 is 1551
9999 mem: skipping refcount at 1551
9999 mem: location 1552 is 0
9999 mem: location 1553 is 0
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1312 is 1548
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1548
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1548: 3 -> 2
9999 mem: storing 1548 in location 1357
9999 mem: incrementing refcount of 1548: 2 -> 3
9999 mem: storing 1 in location 1365
9999 mem: storing 1 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1356 is 1008
9999 mem: location 1357 is 1548
9999 mem: location 1358 is 1151
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 2 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 2 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 1\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console {"\n    type [1]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": "literal-string"}
9992 load: after rewriting: type {"1": "literal-string"}
9999 mem: storing 'type' event starting at 1573
9999 mem: storing 'text' tag at 1573
9999 mem: storing character 49 at 1574
9999 mem: storing console in 1577
9999 mem: storing console data in 1579
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1577
9999 mem: location 2 is 1151
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1353
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 184 -> 185
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1577 in location 1357
9999 mem: incrementing refcount of 1577: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 17 -> 18
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 185 -> 186
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 186 -> 185
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 185 -> 186
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1577
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1577 in location 1312
9999 mem: incrementing refcount of 1577: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1577
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1577
9999 mem: skipping refcount at 1577
9999 mem: location 1578 is 0
9999 mem: location 1579 is 1571
9999 mem: location 1312 is 1577
9999 mem: skipping refcount at 1577
9998 run: address to copy is 1578
9999 mem: storing 1578 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1577
9999 mem: skipping refcount at 1577
9999 mem: location 1578 is 0
9999 mem: location 1579 is 1571
9999 mem: location 1312 is 1577
9999 mem: skipping refcount at 1577
9998 run: address to copy is 1579
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1579 is 1571
9999 mem: storing 1571 in location 1314
9999 mem: incrementing refcount of 1571: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1571
9999 mem: skipping refcount at 1571
9999 mem: storing 1 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1578
9999 mem: location 1578 is 0
9999 mem: location 1315 is 1
9999 mem: storing 0 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1314 is 1571
9999 mem: skipping refcount at 1571
9998 run: base address is 1572
9999 mem: location 1313 is 1578
9999 mem: location 1578 is 0
9998 run: address to copy is 1573
9998 run: its type is event
9999 mem: location 1573 is 0
9999 mem: location 1574 is 49
9999 mem: location 1575 is 0
9999 mem: location 1576 is 0
9999 mem: storing 0 in location 1318
9999 mem: storing 49 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1313 is 1578
9999 mem: location 1578 is 0
9999 mem: location 1313 is 1578
9999 mem: storing 1 in location 1578
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 49
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1312 is 1577
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 49, 0, 0]
9998 run: result 1 is 1577
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1361
9999 mem: storing 49 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1577: 2 -> 1
9999 mem: storing 1577 in location 1357
9999 mem: incrementing refcount of 1577: 1 -> 2
9999 mem: storing 1 in location 1365
9999 mem: storing 0 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1361 is 0
9999 mem: location 1362 is 49
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 mem: storing 0 in location 1367
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1356 is 1008
9999 mem: location 1358 is 1151
9999 mem: location 1361 is 0
9999 mem: location 1362 is 49
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1429
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1432
9999 mem: incrementing refcount of 1008: 186 -> 187
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 18 -> 19
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1434
9999 mem: storing 49 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1438
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1433 is 1151
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1580
9999 mem: storing 3 in location 1581
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1583
9999 mem: incrementing refcount of 1008: 187 -> 188
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1583 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1583 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1583 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1584
 106 run: return {width: "number"}
9999 mem: location 1584 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1439
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1583
9999 mem: incrementing refcount of 1008: 188 -> 189
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1583 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1583 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1583 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1584
 106 run: return {height: "number"}
9999 mem: location 1584 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1440
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1441
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1442
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1444
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1445
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1444 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1446
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1445 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1447
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1434 is 0
9999 mem: location 1435 is 49
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: storing 1435 in location 1448
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1448 is 1435
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1449
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1460
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1465
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1481
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1482
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1487
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1488
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1489
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1490
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1494
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 0 in location 1498
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1498 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: storing 1 in location 1501
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1438
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1501 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1483
9999 mem: incrementing refcount of 1170: 18 -> 19
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1443 is 1155
9999 mem: location 1155 is 1212
9999 mem: storing 1212 in location 1495
9999 mem: incrementing refcount of 1212: 22 -> 23
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1433 is 1151
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 49
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1585
9999 mem: storing 31 in location 1586
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1588
9999 mem: incrementing refcount of 1151: 19 -> 20
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1589
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1590
9999 mem: incrementing refcount of 1008: 189 -> 190
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1212
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1591
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1589 is 49
9999 mem: location 1591 is 1155
9999 mem: location 1155 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1188
9999 mem: incrementing refcount of 1212: 23 -> 24
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1618
9999 mem: storing 1618 in location 1189
9999 mem: incrementing refcount of 1618: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1618
9999 mem: skipping refcount at 1618
9999 mem: location 1619 is 0
9999 mem: location 1620 is 0
9999 mem: location 1621 is 0
9999 mem: location 1187 is 49
9999 mem: location 1189 is 1618
9999 mem: skipping refcount at 1618
9998 run: address to copy to is 1619
9999 mem: storing 49 in location 1619
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1188 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1190
9999 mem: incrementing refcount of 1216: 20 -> 21
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1189 is 1618
9999 mem: location 1188 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy to is 1214
9999 mem: storing 1618 in location 1214
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1618
9999 mem: skipping refcount at 1618
9999 mem: location 1619 is 49
9999 mem: location 1620 is 0
9999 mem: location 1621 is 0
9999 mem: location 1188 is 1212
9999 mem: location 1189 is 1618
9999 mem: skipping refcount at 1618
9998 run: address to copy to is 1621
9999 mem: storing 1212 in location 1621
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1618
9999 mem: skipping refcount at 1618
9999 mem: location 1619 is 49
9999 mem: location 1620 is 0
9999 mem: location 1621 is 1212
9999 mem: location 1190 is 1216
9999 mem: location 1189 is 1618
9999 mem: skipping refcount at 1618
9998 run: address to copy to is 1620
9999 mem: storing 1216 in location 1620
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1216
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1189 is 1618
9999 mem: location 1190 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy to is 1219
9999 mem: storing 1618 in location 1219
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1212
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1591 is 1155
9999 mem: location 1155 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1583
9999 mem: incrementing refcount of 1212: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1583 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1583 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1618
9999 mem: location 1215 is 1208
9999 mem: location 1583 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1618
9999 mem: storing 1618 in location 1584
9999 mem: incrementing refcount of 1618: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1584 is 1618
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1618
9999 mem: location 1591 is 1155
9999 mem: decrementing refcount of 1212: 25 -> 24
9999 mem: storing 1618 in location 1155
9999 mem: incrementing refcount of 1618: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1592
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1593
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1594
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1588 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1595
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1592 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1596
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1593 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1597
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1590 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1583
9999 mem: incrementing refcount of 1008: 190 -> 191
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1583 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1583 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1583 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1584
 107 run: return {width: "number"}
9999 mem: location 1584 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1598
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1590 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1583
9999 mem: incrementing refcount of 1008: 191 -> 192
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1583 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1583 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1583 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1584
 107 run: return {height: "number"}
9999 mem: location 1584 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1599
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1595 is 9
9999 mem: storing 8 in location 1600
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1593 is 1160
9999 mem: location 1160 is 1
9999 mem: location 1600 is 8
9999 mem: storing 0 in location 1601
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1601 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1593 is 1160
9999 mem: location 1160 is 1
9999 mem: location 1593 is 1160
9999 mem: storing 2 in location 1160
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1591 is 1155
9999 mem: location 1155 is 1618
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1618 in location 1583
9999 mem: incrementing refcount of 1618: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1583 is 1618
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1583 is 1618
9999 mem: skipping refcount at 1618
9999 mem: location 1619 is 49
9999 mem: location 1620 is 1216
9999 mem: location 1621 is 1212
9999 mem: location 1583 is 1618
9999 mem: skipping refcount at 1618
9998 run: address to copy is 1620
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1620 is 1216
9999 mem: storing 1216 in location 1584
9999 mem: incrementing refcount of 1216: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1584 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1608
9999 mem: incrementing refcount of 1216: 22 -> 23
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1608 is 1216
9999 mem: storing 0 in location 1609
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1608 is 1216
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1593 is 1160
9999 mem: location 1160 is 2
9999 mem: location 1598 is 10
9999 mem: storing 0 in location 1612
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1612 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1591 is 1155
9999 mem: location 1155 is 1618
9999 mem: storing 1618 in location 1614
9999 mem: incrementing refcount of 1618: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1590 is 1008
9999 mem: location 1596 is 2
9999 mem: location 1597 is 1
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 192 -> 193
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1597 is 1
9999 mem: storing 1 in location 1615
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1607
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1615 is 1
9999 mem: location 1595 is 9
9999 mem: storing 0 in location 1612
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1612 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1614 is 1618
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1614 is 1618
9999 mem: skipping refcount at 1618
9999 mem: location 1619 is 49
9999 mem: location 1620 is 1216
9999 mem: location 1621 is 1212
9999 mem: location 1614 is 1618
9999 mem: skipping refcount at 1618
9998 run: address to copy is 1619
9998 run: its type is "character"
9999 mem: location 1619 is 49
9999 mem: storing 49 in location 1616
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1616 is 49
9999 mem: storing 0 in location 1617
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1590 is 1008
9999 mem: location 1616 is 49
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 193 -> 194
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1287
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 49
  90 print-character: 49 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 49
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 105 -> 106
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 49
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 21
9999 mem: storing 1058 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 101
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 49
9999 mem: location 1305 is 1058
9999 mem: storing 49 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 49
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1615 is 1
9999 mem: storing 2 in location 1615
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1614 is 1618
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1618 in location 1583
9999 mem: incrementing refcount of 1618: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1583 is 1618
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1583 is 1618
9999 mem: skipping refcount at 1618
9999 mem: location 1619 is 49
9999 mem: location 1620 is 1216
9999 mem: location 1621 is 1212
9999 mem: location 1583 is 1618
9999 mem: skipping refcount at 1618
9998 run: address to copy is 1620
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1620 is 1216
9999 mem: storing 1216 in location 1584
9999 mem: incrementing refcount of 1216: 23 -> 24
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1584 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1618: 6 -> 5
9999 mem: storing 1216 in location 1614
9999 mem: incrementing refcount of 1216: 24 -> 25
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1607
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1615 is 2
9999 mem: location 1595 is 9
9999 mem: storing 0 in location 1612
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1612 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1614 is 1216
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1614 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1618
9999 mem: location 1614 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 101
9999 mem: storing 101 in location 1616
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1616 is 101
9999 mem: storing 0 in location 1617
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1590 is 1008
9999 mem: location 1616 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 194 -> 195
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1287
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 106 -> 107
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 22
9999 mem: storing 1060 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 102
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 101
9999 mem: location 1305 is 1060
9999 mem: storing 101 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 101
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1615 is 2
9999 mem: storing 3 in location 1615
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1614 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1583
9999 mem: incrementing refcount of 1216: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1583 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1583 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1618
9999 mem: location 1583 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1584
9999 mem: incrementing refcount of 1220: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1584 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 26 -> 25
9999 mem: storing 1220 in location 1614
9999 mem: incrementing refcount of 1220: 21 -> 22
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1607
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1615 is 3
9999 mem: location 1595 is 9
9999 mem: storing 0 in location 1612
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1612 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1614 is 1220
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1614 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1614 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 102
9999 mem: storing 102 in location 1616
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1616 is 102
9999 mem: storing 0 in location 1617
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1590 is 1008
9999 mem: location 1616 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 195 -> 196
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1287
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 107 -> 108
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1302
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-can-undo-ctrl-a
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 23
9999 mem: storing 1062 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 102
9999 mem: location 1305 is 1062
9999 mem: storing 102 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 102
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1063
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1615 is 3
9999 mem: storing 4 in location 1615
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1614 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1583
9999 mem: incrementing refcount of 1220: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1583 is 1220
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1583 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1583 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1584
9999 mem: incrementing refcount of 1224: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1584 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 23 -> 22
9999 mem: storing 1224 in location 1614
9999 mem: incrementing refcount of 1224: 21 -> 22
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1607
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1615 is 4
9999 mem: location 1595 is 9
9999 mem: storing 0 in location 1612
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1612 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1614 is 1224
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1614 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1614 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1616
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1616 is 10
9999 mem: storing 1 in location 1617
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 1
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1607
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1588 is 1151
9999 mem: location 1590 is 1008
9999 mem: location 1607 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1151
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1151: 20 -> 19
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 19 -> 20
9999 mem: decrementing refcount of 1008: 196 -> 195
9999 mem: storing 1008 in location 1432
9999 mem: incrementing refcount of 1008: 195 -> 196
9999 mem: storing 0 in location 1438
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1485
9999 mem: incrementing refcount of 1170: 19 -> 20
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1452
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1426
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1426
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1426 in location 1583
9999 mem: incrementing refcount of 1426: 4 -> 5
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1583 is 1426
9999 mem: skipping refcount at 1426
9999 mem: location 1427 is 1270
9999 mem: location 1428 is 0
9999 mem: location 1583 is 1426
9999 mem: skipping refcount at 1426
9998 run: address to copy is 1427
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1427 is 1270
9999 mem: storing 1270 in location 1584
9999 mem: incrementing refcount of 1270: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1584 is 1270
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1270
9999 mem: storing 1270 in location 1451
9999 mem: incrementing refcount of 1270: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1451 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 1
9999 mem: location 1272 is 1
9999 mem: location 1273 is 0
9999 mem: location 1274 is 1170
9999 mem: location 1275 is 2
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1170
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1451 is 1270
9999 mem: skipping refcount at 1270
9999 mem: storing 0 in location 1458
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1495 is 1212
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1583
9999 mem: incrementing refcount of 1212: 24 -> 25
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1583 is 1212
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1583 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1618
9999 mem: location 1215 is 1208
9999 mem: location 1583 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1618
9999 mem: storing 1618 in location 1584
9999 mem: incrementing refcount of 1618: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1584 is 1618
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1618
9999 mem: storing 1618 in location 1459
9999 mem: incrementing refcount of 1618: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1459 is 1618
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1618 in location 1583
9999 mem: incrementing refcount of 1618: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1583 is 1618
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1583 is 1618
9999 mem: skipping refcount at 1618
9999 mem: location 1619 is 49
9999 mem: location 1620 is 1216
9999 mem: location 1621 is 1212
9999 mem: location 1583 is 1618
9999 mem: skipping refcount at 1618
9998 run: address to copy is 1620
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1620 is 1216
9999 mem: storing 1216 in location 1584
9999 mem: incrementing refcount of 1216: 25 -> 26
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1584 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1497
9999 mem: incrementing refcount of 1216: 26 -> 27
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1559
9999 mem: decrementing refcount of 1270: 5 -> 4
9999 mem: storing 1559 in location 1451
9999 mem: incrementing refcount of 1559: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1446 is 2
9999 mem: location 1447 is 1
9999 mem: location 1483 is 1170
9999 mem: location 1444 is 1159
9999 mem: location 1159 is 2
9999 mem: location 1445 is 1160
9999 mem: location 1160 is 2
9999 mem: location 1485 is 1170
9999 mem: location 1459 is 1618
9999 mem: location 1497 is 1216
9999 mem: location 1451 is 1559
9999 mem: skipping refcount at 1559
9999 mem: location 1451 is 1559
9999 mem: skipping refcount at 1559
9999 mem: storing 0 in location 1560
9999 mem: storing 2 in location 1561
9999 mem: storing 1 in location 1562
9999 mem: storing 1170 in location 1563
9999 mem: storing 2 in location 1564
9999 mem: storing 2 in location 1565
9999 mem: storing 1170 in location 1566
9999 mem: storing 1618 in location 1567
9999 mem: storing 1216 in location 1568
9999 mem: storing 1 in location 1569
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1433 is 1151
9999 mem: location 1451 is 1559
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1187
9999 mem: incrementing refcount of 1151: 20 -> 21
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1559 in location 1188
9999 mem: incrementing refcount of 1559: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 1556
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1189
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1188 is 1559
9999 mem: location 1189 is 1162
9999 mem: location 1162 is 1426
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1164
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1559 in location 1167
9999 mem: incrementing refcount of 1559: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1426 in location 1168
9999 mem: incrementing refcount of 1426: 5 -> 6
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1622
9999 mem: storing 1622 in location 1169
9999 mem: incrementing refcount of 1622: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1559
9999 mem: location 1168 is 1426
9999 mem: location 1169 is 1622
9999 mem: skipping refcount at 1622
9999 mem: location 1169 is 1622
9999 mem: skipping refcount at 1622
9999 mem: storing 1559 in location 1623
9999 mem: storing 1426 in location 1624
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1622
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1622
9999 mem: location 1189 is 1162
9999 mem: decrementing refcount of 1426: 6 -> 5
9999 mem: storing 1622 in location 1162
9999 mem: incrementing refcount of 1622: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1622
9999 mem: location 1163 is 1556
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1190 is 1163
9999 mem: decrementing refcount of 1556: 2 -> 1
9999 mem: storing 0 in location 1163
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1187 is 1151
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 21 -> 20
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 20 -> 21
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1432 is 1008
9999 mem: location 1433 is 1151
9999 mem: location 1438 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1151
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 196 -> 195
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 195 -> 196
9999 mem: decrementing refcount of 1151: 21 -> 20
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 20 -> 21
9999 mem: storing 0 in location 1368
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1622
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1618
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1622
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 2
9999 mem: storing 2 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 196 -> 197
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 197 -> 196
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 196 -> 197
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1577
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1577 in location 1312
9999 mem: incrementing refcount of 1577: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1577
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1577
9999 mem: skipping refcount at 1577
9999 mem: location 1578 is 1
9999 mem: location 1579 is 1571
9999 mem: location 1312 is 1577
9999 mem: skipping refcount at 1577
9998 run: address to copy is 1578
9999 mem: storing 1578 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1577
9999 mem: skipping refcount at 1577
9999 mem: location 1578 is 1
9999 mem: location 1579 is 1571
9999 mem: location 1312 is 1577
9999 mem: skipping refcount at 1577
9998 run: address to copy is 1579
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1579 is 1571
9999 mem: storing 1571 in location 1314
9999 mem: incrementing refcount of 1571: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1571
9999 mem: skipping refcount at 1571
9999 mem: storing 1 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1578
9999 mem: location 1578 is 1
9999 mem: location 1315 is 1
9999 mem: storing 1 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1580
9999 mem: storing 1580 in location 1317
9999 mem: incrementing refcount of 1580: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1317 is 1580
9999 mem: skipping refcount at 1580
9999 mem: location 1581 is 0
9999 mem: location 1582 is 0
9999 mem: location 1583 is 0
9999 mem: location 1584 is 0
9999 mem: location 1312 is 1577
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1577
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1577: 3 -> 2
9999 mem: storing 1577 in location 1357
9999 mem: incrementing refcount of 1577: 2 -> 3
9999 mem: storing 1 in location 1365
9999 mem: storing 1 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1356 is 1008
9999 mem: location 1357 is 1577
9999 mem: location 1358 is 1151
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .d1ef      .\n    .ghi       .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
