9991 parse: --- defining scenario_editor-can-undo-ctrl-f
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "screen"), "raw": ()} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\nc\nd\ne\nf": "literal-string"}
9993 parse:   product: {1: ("address" "array" "character")}
9992 load: after rewriting: {1: ("address" "array" "character")} <- new {"a\nb\nc\nd\ne\nf": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "editor-data")}
9992 load: after rewriting: {2: ("address" "editor-data")} <- new-editor {1: ("address" "array" "character")}, {screen: ("address" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-f\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-f\n  ": "literal-string"}
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .a         .\n    .b         .\n    .c         .\n    .d         .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .a         .\n    .b         .\n    .c         .\n    .d         .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-undo-ctrl-f has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- deduce types for recipe scenario_editor-can-undo-ctrl-f
9992 transform: screen => ("address" "screen")
9992 transform: screen <= ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- transform names for recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-undo-ctrl-f
9992 transform: instruction {screen: ("address" "screen"), "raw": ()} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "screen")}
9992 transform: instruction {2: ("address" "editor-data")} <- new-editor {1: ("address" "array" "character")}, {screen: ("address" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "array" "character")} {screen: ("address" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "editor-data")} {screen: ("address" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "screen")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {editor: ("address" "editor-data")}
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9992 transform: --- compute address offsets for scenario_editor-can-undo-ctrl-f
9993 transform: - compute address offsets for {screen: ("address" "screen"), "raw": ()} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 transform: - compute address offsets for {1: ("address" "array" "character")} <- new {"a\nb\nc\nd\ne\nf": "literal-string"}
9993 transform: - compute address offsets for {2: ("address" "editor-data")} <- new-editor {1: ("address" "array" "character")}, {screen: ("address" "screen"), "raw": ()}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 transform: - compute address offsets for editor-render {screen: ("address" "screen"), "raw": ()}, {2: ("address" "editor-data")}
9993 transform: - compute address offsets for assume-console {"\n    press ctrl-f\n  ": "literal-string"}
9993 transform: - compute address offsets for editor-event-loop {screen: ("address" "screen"), "raw": ()}, {console: ("address" "console"), "raw": ()}, {2: ("address" "editor-data")}
9993 transform: - compute address offsets for assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 transform: - compute address offsets for run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 transform: - compute address offsets for screen-should-contain {"\n    .          .\n    .a         .\n    .b         .\n    .c         .\n    .d         .\n  ": "literal-string"}
9993 transform: - compute address offsets for reply 
9991 transform: --- compute instruction operations for recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- transform braces for recipe scenario_editor-can-undo-ctrl-f
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- perform checks for recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- type-check calls inside recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-undo-ctrl-f
9991 transform: --- checking reply instructions against header for scenario_editor-can-undo-ctrl-f
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-undo-ctrl-f
 102 run: {screen: ("address" "screen"), "raw": ()} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 0 in location 1000
9999 mem: storing 0 in location 1001
9999 mem: storing 0 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 0 in location 1008
9999 mem: storing 0 in location 1009
9999 mem: storing 0 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 0 in location 1013
9999 mem: location 1005 is 0
9999 mem: incrementing refcount of 1008: 0 -> 1
9999 mem: storing 1008 in location 1005
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 5
9999 mem: storing 50 in location 1006
 103 run: {data: ("address" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1014
9999 mem: storing 0 in location 1014
9999 mem: storing 0 in location 1015
9999 mem: storing 0 in location 1016
9999 mem: storing 0 in location 1017
9999 mem: storing 0 in location 1018
9999 mem: storing 0 in location 1019
9999 mem: storing 0 in location 1020
9999 mem: storing 0 in location 1021
9999 mem: storing 0 in location 1022
9999 mem: storing 0 in location 1023
9999 mem: storing 0 in location 1024
9999 mem: storing 0 in location 1025
9999 mem: storing 0 in location 1026
9999 mem: storing 0 in location 1027
9999 mem: storing 0 in location 1028
9999 mem: storing 0 in location 1029
9999 mem: storing 0 in location 1030
9999 mem: storing 0 in location 1031
9999 mem: storing 0 in location 1032
9999 mem: storing 0 in location 1033
9999 mem: storing 0 in location 1034
9999 mem: storing 0 in location 1035
9999 mem: storing 0 in location 1036
9999 mem: storing 0 in location 1037
9999 mem: storing 0 in location 1038
9999 mem: storing 0 in location 1039
9999 mem: storing 0 in location 1040
9999 mem: storing 0 in location 1041
9999 mem: storing 0 in location 1042
9999 mem: storing 0 in location 1043
9999 mem: storing 0 in location 1044
9999 mem: storing 0 in location 1045
9999 mem: storing 0 in location 1046
9999 mem: storing 0 in location 1047
9999 mem: storing 0 in location 1048
9999 mem: storing 0 in location 1049
9999 mem: storing 0 in location 1050
9999 mem: storing 0 in location 1051
9999 mem: storing 0 in location 1052
9999 mem: storing 0 in location 1053
9999 mem: storing 0 in location 1054
9999 mem: storing 0 in location 1055
9999 mem: storing 0 in location 1056
9999 mem: storing 0 in location 1057
9999 mem: storing 0 in location 1058
9999 mem: storing 0 in location 1059
9999 mem: storing 0 in location 1060
9999 mem: storing 0 in location 1061
9999 mem: storing 0 in location 1062
9999 mem: storing 0 in location 1063
9999 mem: storing 0 in location 1064
9999 mem: storing 0 in location 1065
9999 mem: storing 0 in location 1066
9999 mem: storing 0 in location 1067
9999 mem: storing 0 in location 1068
9999 mem: storing 0 in location 1069
9999 mem: storing 0 in location 1070
9999 mem: storing 0 in location 1071
9999 mem: storing 0 in location 1072
9999 mem: storing 0 in location 1073
9999 mem: storing 0 in location 1074
9999 mem: storing 0 in location 1075
9999 mem: storing 0 in location 1076
9999 mem: storing 0 in location 1077
9999 mem: storing 0 in location 1078
9999 mem: storing 0 in location 1079
9999 mem: storing 0 in location 1080
9999 mem: storing 0 in location 1081
9999 mem: storing 0 in location 1082
9999 mem: storing 0 in location 1083
9999 mem: storing 0 in location 1084
9999 mem: storing 0 in location 1085
9999 mem: storing 0 in location 1086
9999 mem: storing 0 in location 1087
9999 mem: storing 0 in location 1088
9999 mem: storing 0 in location 1089
9999 mem: storing 0 in location 1090
9999 mem: storing 0 in location 1091
9999 mem: storing 0 in location 1092
9999 mem: storing 0 in location 1093
9999 mem: storing 0 in location 1094
9999 mem: storing 0 in location 1095
9999 mem: storing 0 in location 1096
9999 mem: storing 0 in location 1097
9999 mem: storing 0 in location 1098
9999 mem: storing 0 in location 1099
9999 mem: storing 0 in location 1100
9999 mem: storing 0 in location 1101
9999 mem: storing 0 in location 1102
9999 mem: storing 0 in location 1103
9999 mem: storing 0 in location 1104
9999 mem: storing 0 in location 1105
9999 mem: storing 0 in location 1106
9999 mem: storing 0 in location 1107
9999 mem: storing 0 in location 1108
9999 mem: storing 0 in location 1109
9999 mem: storing 0 in location 1110
9999 mem: storing 0 in location 1111
9999 mem: storing 0 in location 1112
9999 mem: storing 0 in location 1113
9999 mem: storing 0 in location 1114
9999 mem: storing 0 in location 1115
9999 mem: storing 50 in location 1015
9999 mem: location 1007 is 0
9999 mem: incrementing refcount of 1014: 0 -> 1
9999 mem: storing 1014 in location 1007
 103 run: {result: ("address" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "array" "screen-cell")}
9999 mem: location 1004 is 5
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 5 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "screen")} <- clear-screen {result: ("address" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1116
9999 mem: storing 0 in location 1116
9999 mem: storing 0 in location 1117
9999 mem: storing 0 in location 1118
9999 mem: storing 0 in location 1119
9999 mem: storing 0 in location 1120
9999 mem: storing 0 in location 1121
9999 mem: storing 0 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
9999 mem: storing 0 in location 1125
9999 mem: storing 8 in location 1117
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 1 -> 2
9999 mem: storing 1008 in location 1119
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1119 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1120 is 0
9999 mem: incrementing refcount of 1014: 2 -> 3
9999 mem: storing 1014 in location 1120
 104 run: {max: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1121
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 0
9998 run: address to copy to is 1016
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 1
9998 run: address to copy to is 1018
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 2
9998 run: address to copy to is 1020
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 3
9998 run: address to copy to is 1022
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 4
9998 run: address to copy to is 1024
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 5
9998 run: address to copy to is 1026
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 6
9998 run: address to copy to is 1028
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 7
9998 run: address to copy to is 1030
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 8
9998 run: address to copy to is 1032
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 9
9998 run: address to copy to is 1034
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 10
9998 run: address to copy to is 1036
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 11
9998 run: address to copy to is 1038
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 12
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 12
9998 run: address to copy to is 1040
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 13
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 13
9998 run: address to copy to is 1042
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 14
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 14
9998 run: address to copy to is 1044
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 15
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 15
9998 run: address to copy to is 1046
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 16
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 16
9998 run: address to copy to is 1048
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 17
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 17
9998 run: address to copy to is 1050
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 18
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 18
9998 run: address to copy to is 1052
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 19
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 19
9998 run: address to copy to is 1054
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 20
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 20
9998 run: address to copy to is 1056
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 21
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 21
9998 run: address to copy to is 1058
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 22
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 22
9998 run: address to copy to is 1060
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 23
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 23
9998 run: address to copy to is 1062
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 24
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 24
9998 run: address to copy to is 1064
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 25
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 25
9998 run: address to copy to is 1066
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 26
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 26
9998 run: address to copy to is 1068
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 27
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 27
9998 run: address to copy to is 1070
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 28
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 28
9998 run: address to copy to is 1072
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 29
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 29
9998 run: address to copy to is 1074
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 30
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 30
9998 run: address to copy to is 1076
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 31
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 31
9998 run: address to copy to is 1078
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 32
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 32
9998 run: address to copy to is 1080
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 33
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 33
9998 run: address to copy to is 1082
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 34
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 34
9998 run: address to copy to is 1084
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 35
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 35
9998 run: address to copy to is 1086
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 36
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 36
9998 run: address to copy to is 1088
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 37
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 37
9998 run: address to copy to is 1090
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 38
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 38
9998 run: address to copy to is 1092
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 39
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 39
9998 run: address to copy to is 1094
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 40
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 40
9998 run: address to copy to is 1096
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 40
9999 mem: storing 41 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 41
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 41
9998 run: address to copy to is 1098
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 41
9999 mem: storing 42 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 42
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 42
9998 run: address to copy to is 1100
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 42
9999 mem: storing 43 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 43
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 43
9998 run: address to copy to is 1102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 43
9999 mem: storing 44 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 44
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 44
9998 run: address to copy to is 1104
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 44
9999 mem: storing 45 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 45
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 45
9998 run: address to copy to is 1106
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 45
9999 mem: storing 46 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 46
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 46
9998 run: address to copy to is 1108
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 46
9999 mem: storing 47 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 47
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 47
9998 run: address to copy to is 1110
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 47
9999 mem: storing 48 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 48
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 48
9998 run: address to copy to is 1112
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 48
9999 mem: storing 49 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 49
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 49
9998 run: address to copy to is 1114
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 49
9999 mem: storing 50 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 50
9999 mem: location 1121 is 50
9999 mem: storing 1 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 3 -> 2
9999 mem: storing 0 in location 1120
9999 mem: clearing max:number
9999 mem: storing 0 in location 1121
9999 mem: clearing i:number
9999 mem: storing 0 in location 1122
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1123
9999 mem: clearing curr:screen-cell
9999 mem: storing 0 in location 1124
9999 mem: storing 0 in location 1125
9999 mem: clearing i
9999 mem: storing 0 in location 1122
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1005
 103 run: reply {result: ("address" "screen")}
9999 mem: location 1005 is 1008
9999 mem: clearing w:number
9999 mem: storing 0 in location 1003
9999 mem: clearing h:number
9999 mem: storing 0 in location 1004
9999 mem: clearing bufsize:number
9999 mem: storing 0 in location 1006
9999 mem: clearing data:address:array:screen-cell
9999 mem: location 1007 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1007
9999 mem: automatically abandoning 1000
9999 abandon: updating refcounts inside 1000: (array number)
9999 abandon: saving 1000 in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
 102 run: {1: ("address" "array" "character")} <- new {"a\nb\nc\nd\ne\nf": "literal-string"}
9999 mem: new string alloc: 1126
9999 mem: location 1 is 0
9999 mem: incrementing refcount of 1126: 0 -> 1
9999 mem: storing 1126 in location 1
 102 run: {2: ("address" "editor-data")} <- new-editor {1: ("address" "array" "character")}, {screen: ("address" "screen"), "raw": ()}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1126
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1139
9999 mem: storing 0 in location 1139
9999 mem: storing 0 in location 1140
9999 mem: storing 0 in location 1141
9999 mem: storing 0 in location 1142
9999 mem: storing 0 in location 1143
9999 mem: storing 0 in location 1144
9999 mem: storing 0 in location 1145
9999 mem: storing 0 in location 1146
9999 mem: storing 0 in location 1147
9999 mem: storing 7 in location 1140
 103 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1142 is 0
9999 mem: incrementing refcount of 1126: 1 -> 2
9999 mem: storing 1126 in location 1142
 103 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1143 is 0
9999 mem: incrementing refcount of 1008: 2 -> 3
9999 mem: storing 1008 in location 1143
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1144
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1145
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1145 is 10
9999 mem: storing 9 in location 1145
 103 run: {result: ("address" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1148
9999 mem: storing 0 in location 1148
9999 mem: storing 0 in location 1149
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
9999 mem: storing 0 in location 1152
9999 mem: storing 0 in location 1153
9999 mem: storing 0 in location 1154
9999 mem: storing 0 in location 1155
9999 mem: storing 0 in location 1156
9999 mem: storing 0 in location 1157
9999 mem: storing 0 in location 1158
9999 mem: storing 0 in location 1159
9999 mem: storing 0 in location 1160
9999 mem: location 1146 is 0
9999 mem: incrementing refcount of 1148: 0 -> 1
9999 mem: storing 1148 in location 1146
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {left: "offset"}, {left: "number"}
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1144 is 0
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1153
9999 mem: storing 0 in location 1153
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {right: "offset"}, {right: "number"}
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1145 is 9
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1154
9999 mem: storing 9 in location 1154
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {1: "literal", "top": ()}
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1156
9999 mem: storing 1 in location 1156
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {left: "number"}
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1144 is 0
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 103 run: {init: ("address" "duplex-list" "character")} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1161
9999 mem: storing 0 in location 1161
9999 mem: storing 0 in location 1162
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
9999 mem: storing 4 in location 1162
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1164
 104 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1165 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1165
 104 run: {result: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1167
9999 mem: storing 0 in location 1167
9999 mem: storing 0 in location 1168
9999 mem: storing 0 in location 1169
9999 mem: storing 0 in location 1170
9999 mem: location 1166 is 0
9999 mem: incrementing refcount of 1167: 0 -> 1
9999 mem: storing 1167 in location 1166
 104 run: {result: ("address" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1164 is 167
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1166 is 1167
9999 mem: skipping refcount at 1167
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 167 in location 1168
9999 mem: storing 0 in location 1169
9999 mem: storing 0 in location 1170
 104 run: jump-unless {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1165 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1166 is 1167
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1164
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1165 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1147
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {data: "offset"}, {init: ("address" "duplex-list" "character")}
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1147 is 1167
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1149
9999 mem: location 1149 is 0
9999 mem: incrementing refcount of 1167: 1 -> 2
9999 mem: storing 1167 in location 1149
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {init: ("address" "duplex-list" "character")}
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1147 is 1167
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1150
9999 mem: location 1150 is 0
9999 mem: incrementing refcount of 1167: 2 -> 3
9999 mem: storing 1167 in location 1150
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {init: ("address" "duplex-list" "character")}
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1147 is 1167
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 0
9999 mem: incrementing refcount of 1167: 3 -> 4
9999 mem: storing 1167 in location 1152
 103 run: {result: ("address" "editor-data")} <- insert-text {result: ("address" "editor-data")}, {s: ("address" "array" "character")}
9999 mem: location 1146 is 1148
9999 mem: location 1142 is 1126
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1148: 1 -> 2
9999 mem: storing 1148 in location 1119
 104 run: {text: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1120 is 0
9999 mem: incrementing refcount of 1126: 2 -> 3
9999 mem: storing 1126 in location 1120
 104 run: jump-if {text: ("address" "array" "character")}, {: "offset"}
9999 mem: location 1120 is 1126
9998 run: jumping to instruction 6
 104 run: {len: "number"} <- length {text: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9999 mem: storing 11 in location 1121
 104 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1121 is 11
9998 run: jumping to instruction 11
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1119 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1149
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1149 is 1167
9999 mem: location 1123 is 0
9999 mem: incrementing refcount of 1167: 4 -> 5
9999 mem: storing 1167 in location 1123
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 0
9998 run: address to copy is 1128
9998 run: its type is character
9999 mem: location 1128 is 97
9999 mem: storing 97 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 97
9999 mem: location 1123 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1171
9999 mem: storing 0 in location 1171
9999 mem: storing 0 in location 1172
9999 mem: storing 0 in location 1173
9999 mem: storing 0 in location 1174
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
9999 mem: storing 0 in location 1177
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1167: 5 -> 6
9999 mem: storing 1167 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1178
9999 mem: storing 0 in location 1178
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1178: 0 -> 1
9999 mem: storing 1178 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1174 is 97
9999 mem: location 1176 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy to is 1179
9999 mem: storing 97 in location 1179
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1175 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1176 is 1178
9999 mem: location 1175 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy to is 1169
9999 mem: location 1169 is 0
9999 mem: incrementing refcount of 1178: 1 -> 2
9999 mem: storing 1178 in location 1169
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1175 is 1167
9999 mem: location 1176 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy to is 1181
9999 mem: location 1181 is 0
9999 mem: incrementing refcount of 1167: 6 -> 7
9999 mem: storing 1167 in location 1181
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1167
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy to is 1180
9999 mem: location 1180 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1180
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1167
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 7 -> 6
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1182
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
9999 mem: storing 0 in location 1186
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1167: 6 -> 7
9999 mem: storing 1167 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1167
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1178: 1 -> 2
9999 mem: storing 1178 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 1
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 10
9999 mem: storing 10 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 10
9999 mem: location 1123 is 1178
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1178: 2 -> 3
9999 mem: storing 1178 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1187
9999 mem: storing 0 in location 1187
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
9999 mem: storing 0 in location 1190
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1187: 0 -> 1
9999 mem: storing 1187 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1174 is 10
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy to is 1188
9999 mem: storing 10 in location 1188
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1167
9999 mem: location 1175 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1167
9999 mem: location 1176 is 1187
9999 mem: location 1175 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy to is 1180
9999 mem: location 1180 is 0
9999 mem: incrementing refcount of 1187: 1 -> 2
9999 mem: storing 1187 in location 1180
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1175 is 1178
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy to is 1190
9999 mem: location 1190 is 0
9999 mem: incrementing refcount of 1178: 3 -> 4
9999 mem: storing 1178 in location 1190
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1178
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy to is 1189
9999 mem: location 1189 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1189
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1178
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1178
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1178: 3 -> 4
9999 mem: storing 1178 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1178
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1187: 1 -> 2
9999 mem: storing 1187 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 2
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 98
9999 mem: storing 98 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 98
9999 mem: location 1123 is 1187
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1187: 2 -> 3
9999 mem: storing 1187 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1191
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
9999 mem: storing 0 in location 1193
9999 mem: storing 0 in location 1194
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1191: 0 -> 1
9999 mem: storing 1191 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1174 is 98
9999 mem: location 1176 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy to is 1192
9999 mem: storing 98 in location 1192
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1178
9999 mem: location 1175 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1178
9999 mem: location 1176 is 1191
9999 mem: location 1175 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy to is 1189
9999 mem: location 1189 is 0
9999 mem: incrementing refcount of 1191: 1 -> 2
9999 mem: storing 1191 in location 1189
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1175 is 1187
9999 mem: location 1176 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy to is 1194
9999 mem: location 1194 is 0
9999 mem: incrementing refcount of 1187: 3 -> 4
9999 mem: storing 1187 in location 1194
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1187
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy to is 1193
9999 mem: location 1193 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1193
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1187
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1187
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1187: 3 -> 4
9999 mem: storing 1187 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1187
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1191: 1 -> 2
9999 mem: storing 1191 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 3
9998 run: address to copy is 1131
9998 run: its type is character
9999 mem: location 1131 is 10
9999 mem: storing 10 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 10
9999 mem: location 1123 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1191: 2 -> 3
9999 mem: storing 1191 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1195
9999 mem: storing 0 in location 1195
9999 mem: storing 0 in location 1196
9999 mem: storing 0 in location 1197
9999 mem: storing 0 in location 1198
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1195: 0 -> 1
9999 mem: storing 1195 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1174 is 10
9999 mem: location 1176 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy to is 1196
9999 mem: storing 10 in location 1196
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1187
9999 mem: location 1175 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1187
9999 mem: location 1176 is 1195
9999 mem: location 1175 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy to is 1193
9999 mem: location 1193 is 0
9999 mem: incrementing refcount of 1195: 1 -> 2
9999 mem: storing 1195 in location 1193
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1175 is 1191
9999 mem: location 1176 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy to is 1198
9999 mem: location 1198 is 0
9999 mem: incrementing refcount of 1191: 3 -> 4
9999 mem: storing 1191 in location 1198
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1191
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy to is 1197
9999 mem: location 1197 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1197
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1191
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1191: 3 -> 4
9999 mem: storing 1191 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1191
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 1 -> 2
9999 mem: storing 1195 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 4
9998 run: address to copy is 1132
9998 run: its type is character
9999 mem: location 1132 is 99
9999 mem: storing 99 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 99
9999 mem: location 1123 is 1195
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1195: 2 -> 3
9999 mem: storing 1195 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1199
9999 mem: storing 0 in location 1199
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1199: 0 -> 1
9999 mem: storing 1199 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1174 is 99
9999 mem: location 1176 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy to is 1200
9999 mem: storing 99 in location 1200
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1191
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 0
9999 mem: location 1198 is 1191
9999 mem: location 1176 is 1199
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy to is 1197
9999 mem: location 1197 is 0
9999 mem: incrementing refcount of 1199: 1 -> 2
9999 mem: storing 1199 in location 1197
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1175 is 1195
9999 mem: location 1176 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy to is 1202
9999 mem: location 1202 is 0
9999 mem: incrementing refcount of 1195: 3 -> 4
9999 mem: storing 1195 in location 1202
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy to is 1201
9999 mem: location 1201 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1201
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1195
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1195
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1195: 3 -> 4
9999 mem: storing 1195 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1195
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 1 -> 2
9999 mem: storing 1199 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 5
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 10
9999 mem: storing 10 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 10
9999 mem: location 1123 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1174
9990 schedule: insert_3/insert-text/new-editor/scenario_editor-can-undo-ctrl-f
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1199: 2 -> 3
9999 mem: storing 1199 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1203
9999 mem: storing 0 in location 1203
9999 mem: storing 0 in location 1204
9999 mem: storing 0 in location 1205
9999 mem: storing 0 in location 1206
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1203: 0 -> 1
9999 mem: storing 1203 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1174 is 10
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy to is 1204
9999 mem: storing 10 in location 1204
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1195
9999 mem: location 1176 is 1203
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy to is 1201
9999 mem: location 1201 is 0
9999 mem: incrementing refcount of 1203: 1 -> 2
9999 mem: storing 1203 in location 1201
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1175 is 1199
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy to is 1206
9999 mem: location 1206 is 0
9999 mem: incrementing refcount of 1199: 3 -> 4
9999 mem: storing 1199 in location 1206
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy to is 1205
9999 mem: location 1205 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1205
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1199
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 3 -> 4
9999 mem: storing 1199 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 1 -> 2
9999 mem: storing 1203 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 6
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 100
9999 mem: storing 100 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 100
9999 mem: location 1123 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1203: 2 -> 3
9999 mem: storing 1203 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1207
9999 mem: storing 0 in location 1207
9999 mem: storing 0 in location 1208
9999 mem: storing 0 in location 1209
9999 mem: storing 0 in location 1210
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1207: 0 -> 1
9999 mem: storing 1207 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1174 is 100
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy to is 1208
9999 mem: storing 100 in location 1208
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1176 is 1207
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy to is 1205
9999 mem: location 1205 is 0
9999 mem: incrementing refcount of 1207: 1 -> 2
9999 mem: storing 1207 in location 1205
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1175 is 1203
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy to is 1210
9999 mem: location 1210 is 0
9999 mem: incrementing refcount of 1203: 3 -> 4
9999 mem: storing 1203 in location 1210
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy to is 1209
9999 mem: location 1209 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1209
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1203
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 3 -> 4
9999 mem: storing 1203 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 1 -> 2
9999 mem: storing 1207 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 7
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 10
9999 mem: storing 10 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 10
9999 mem: location 1123 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1207: 2 -> 3
9999 mem: storing 1207 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1211
9999 mem: storing 0 in location 1211
9999 mem: storing 0 in location 1212
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1211: 0 -> 1
9999 mem: storing 1211 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1174 is 10
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1212
9999 mem: storing 10 in location 1212
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1176 is 1211
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy to is 1209
9999 mem: location 1209 is 0
9999 mem: incrementing refcount of 1211: 1 -> 2
9999 mem: storing 1211 in location 1209
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1175 is 1207
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1214
9999 mem: location 1214 is 0
9999 mem: incrementing refcount of 1207: 3 -> 4
9999 mem: storing 1207 in location 1214
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1213
9999 mem: location 1213 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1213
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1207
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 3 -> 4
9999 mem: storing 1207 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 1 -> 2
9999 mem: storing 1211 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 8
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 101
9999 mem: storing 101 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 101
9999 mem: location 1123 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1211: 2 -> 3
9999 mem: storing 1211 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1215
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1215: 0 -> 1
9999 mem: storing 1215 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1174 is 101
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1216
9999 mem: storing 101 in location 1216
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1176 is 1215
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1213
9999 mem: location 1213 is 0
9999 mem: incrementing refcount of 1215: 1 -> 2
9999 mem: storing 1215 in location 1213
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1175 is 1211
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1218
9999 mem: location 1218 is 0
9999 mem: incrementing refcount of 1211: 3 -> 4
9999 mem: storing 1211 in location 1218
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1217
9999 mem: location 1217 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1217
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1211
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 3 -> 4
9999 mem: storing 1211 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1215: 1 -> 2
9999 mem: storing 1215 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1215
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 9
9998 run: address to copy is 1137
9998 run: its type is character
9999 mem: location 1137 is 10
9999 mem: storing 10 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 10
9999 mem: location 1123 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1215: 2 -> 3
9999 mem: storing 1215 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1219
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 0 in location 1222
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1219: 0 -> 1
9999 mem: storing 1219 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 0
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1174 is 10
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy to is 1220
9999 mem: storing 10 in location 1220
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1217 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1176 is 1219
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1217
9999 mem: location 1217 is 0
9999 mem: incrementing refcount of 1219: 1 -> 2
9999 mem: storing 1219 in location 1217
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 10
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1175 is 1215
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy to is 1222
9999 mem: location 1222 is 0
9999 mem: incrementing refcount of 1215: 3 -> 4
9999 mem: storing 1215 in location 1222
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 10
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy to is 1221
9999 mem: location 1221 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1221
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1215
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 mem: decrementing refcount of 1219: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1215: 3 -> 4
9999 mem: storing 1215 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1215
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1219: 1 -> 2
9999 mem: storing 1219 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1219
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 11
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 10
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 102
9999 mem: storing 102 in location 1125
 104 run: insert_3 {c: "character"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1125 is 102
9999 mem: location 1123 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1174
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1219: 2 -> 3
9999 mem: storing 1219 in location 1175
 105 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1223
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
9999 mem: storing 0 in location 1226
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1223: 0 -> 1
9999 mem: storing 1223 in location 1176
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1174 is 102
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy to is 1224
9999 mem: storing 102 in location 1224
 105 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 10
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1221 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 10
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1176 is 1223
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy to is 1221
9999 mem: location 1221 is 0
9999 mem: incrementing refcount of 1223: 1 -> 2
9999 mem: storing 1223 in location 1221
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1175 is 1219
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy to is 1226
9999 mem: location 1226 is 0
9999 mem: incrementing refcount of 1219: 3 -> 4
9999 mem: storing 1219 in location 1226
 105 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1177 is 0
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy to is 1225
9999 mem: location 1225 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1225
 105 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 105 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1219
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9999 mem: decrementing refcount of 1219: 4 -> 3
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 mem: decrementing refcount of 1223: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1123 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1219: 3 -> 4
9999 mem: storing 1219 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1219
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 10
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1223: 1 -> 2
9999 mem: storing 1223 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1223
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: decrementing refcount of 1219: 4 -> 3
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: storing 1223 in location 1123
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 15
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 11
9999 mem: storing 1 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 1
9998 run: jumping to instruction 22
 104 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1119 is 1148
9999 mem: clearing text:address:array:character
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9999 mem: decrementing refcount of 1126: 3 -> 2
9999 mem: storing 0 in location 1120
9999 mem: clearing len:number
9999 mem: storing 0 in location 1121
9999 mem: clearing idx:number
9999 mem: storing 0 in location 1122
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1123 is 1223
9999 mem: skipping refcount at 1223
9999 mem: decrementing refcount of 1223: 2 -> 1
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing c:character
9999 mem: storing 0 in location 1125
9999 mem: clearing curr
9999 mem: location 1123 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1123
9999 mem: clearing idx
9999 mem: storing 0 in location 1122
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1148
9999 mem: storing 1148 in location 1146
 103 run: _, _, {screen: ("address" "screen")}, {result: ("address" "editor-data")} <- render {screen: ("address" "screen")}, {result: ("address" "editor-data")}
9999 mem: location 1143 is 1008
9999 mem: location 1146 is 1148
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1227
9999 mem: storing 0 in location 1227
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
9999 mem: storing 0 in location 1236
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
9999 mem: storing 0 in location 1241
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 26 in location 1228
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1230 is 0
9999 mem: incrementing refcount of 1008: 3 -> 4
9999 mem: storing 1008 in location 1230
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1231 is 0
9999 mem: incrementing refcount of 1148: 2 -> 3
9999 mem: storing 1148 in location 1231
 104 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1231 is 1148
9998 run: jumping to instruction 6
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1232
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1230 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 4 -> 5
9999 mem: storing 1008 in location 1185
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1186
 105 run: return {height: "number"}
9999 mem: location 1186 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1233
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1234
 104 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1235 is 0
9999 mem: incrementing refcount of 1167: 6 -> 7
9999 mem: storing 1167 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1167
9999 mem: location 1236 is 0
9999 mem: incrementing refcount of 1167: 7 -> 8
9999 mem: storing 1167 in location 1236
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1167: 8 -> 9
9999 mem: storing 1167 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1167
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1178: 3 -> 4
9999 mem: storing 1178 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1235
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1240
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1241
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1167
9999 mem: location 1242 is 0
9999 mem: incrementing refcount of 1167: 8 -> 9
9999 mem: storing 1167 in location 1242
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 1
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 4 -> 5
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1178
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1241 is 0
9999 mem: storing 1 in location 1245
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1167
9999 mem: location 1242 is 1167
9999 mem: skipping refcount at 1167
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1167 in location 1242
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1235 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1179
9998 run: its type is "character"
9999 mem: location 1179 is 97
9999 mem: storing 97 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1255
9999 mem: storing 0 in location 1255
9999 mem: storing 0 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
9999 mem: storing 0 in location 1266
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 97
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 97
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 97
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 1267
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 5 -> 6
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 97
  90 print-character: 97
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 97
9999 mem: storing 0 in location 1281
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 0
9999 mem: storing 10 in location 1284
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 97
9999 mem: storing 0 in location 1287
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 97
9999 mem: location 1272 is 7
9999 mem: storing 97 in location 1289
9999 mem: storing 7 in location 1290
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 10
9998 run: address to copy to is 1036
9999 mem: location 1289 is 97
9999 mem: location 1290 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 6 -> 5
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1178
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1178: 4 -> 5
9999 mem: storing 1178 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1178
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1187: 3 -> 4
9999 mem: storing 1187 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1167: 9 -> 10
9999 mem: storing 1167 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1167
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1178: 4 -> 5
9999 mem: storing 1178 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1236
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1187
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1245
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1235 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1188
9998 run: its type is "character"
9999 mem: location 1188 is 10
9999 mem: storing 10 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1248
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 46
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 5 -> 6
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 6 -> 7
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 6 -> 7
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 1
9999 mem: storing 11 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 11
9998 run: address to copy to is 1038
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 7 -> 8
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 2
9999 mem: storing 12 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 12
9998 run: address to copy to is 1040
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
9990 schedule: print/clear-line-until/render/new-editor/scenario_editor-can-undo-ctrl-f
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 8 -> 9
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 3
9999 mem: storing 13 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 13
9998 run: address to copy to is 1042
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 9 -> 10
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 4
9999 mem: storing 14 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 14
9998 run: address to copy to is 1044
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 10 -> 11
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 5
9999 mem: storing 15 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 15
9998 run: address to copy to is 1046
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 11 -> 12
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 6
9999 mem: storing 16 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 16
9998 run: address to copy to is 1048
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 12 -> 13
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 7
9999 mem: storing 17 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 17
9998 run: address to copy to is 1050
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 13 -> 14
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 8
9999 mem: storing 18 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 18
9998 run: address to copy to is 1052
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 14 -> 15
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 9
9999 mem: storing 19 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 19
9998 run: address to copy to is 1054
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 15 -> 14
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 2 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 2
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 14 -> 15
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1187
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1187: 4 -> 5
9999 mem: storing 1187 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1187
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1191: 3 -> 4
9999 mem: storing 1191 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1178
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1178: 5 -> 6
9999 mem: storing 1178 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1178
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1187: 4 -> 5
9999 mem: storing 1187 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1236
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1191
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1235 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 98
9999 mem: storing 98 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 98
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 98
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
9990 schedule: render/new-editor/scenario_editor-can-undo-ctrl-f
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 98
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 15 -> 16
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 98
  90 print-character: 98
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 98
9999 mem: storing 0 in location 1281
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 0
9999 mem: storing 20 in location 1284
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 98
9999 mem: storing 0 in location 1287
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 98
9999 mem: location 1272 is 7
9999 mem: storing 98 in location 1289
9999 mem: storing 7 in location 1290
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 20
9998 run: address to copy to is 1056
9999 mem: location 1289 is 98
9999 mem: location 1290 is 7
9999 mem: storing 98 in location 1056
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1191: 4 -> 5
9999 mem: storing 1191 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1191
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 3 -> 4
9999 mem: storing 1195 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1187
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1187: 5 -> 6
9999 mem: storing 1187 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1187
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1191: 4 -> 5
9999 mem: storing 1191 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1236
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1195
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1235 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is "character"
9999 mem: location 1196 is 10
9999 mem: storing 10 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 15 -> 16
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 16 -> 17
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 2
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 16 -> 17
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1
9999 mem: storing 21 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 21
9998 run: address to copy to is 1058
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 17 -> 18
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 2
9999 mem: storing 22 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 22
9998 run: address to copy to is 1060
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 18 -> 19
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 3
9999 mem: storing 23 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 23
9998 run: address to copy to is 1062
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 19 -> 20
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 4
9999 mem: storing 24 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 24
9998 run: address to copy to is 1064
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 20 -> 21
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 5
9999 mem: storing 25 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 25
9998 run: address to copy to is 1066
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 21 -> 22
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 6
9999 mem: storing 26 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 26
9998 run: address to copy to is 1068
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
9990 schedule: print/clear-line-until/render/new-editor/scenario_editor-can-undo-ctrl-f
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 22 -> 23
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 7
9999 mem: storing 27 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 27
9998 run: address to copy to is 1070
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 23 -> 24
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 8
9999 mem: storing 28 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 28
9998 run: address to copy to is 1072
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 24 -> 25
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 9
9999 mem: storing 29 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 29
9998 run: address to copy to is 1074
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 2
9999 mem: storing 3 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 3
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 24 -> 25
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 3
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1195
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1195: 4 -> 5
9999 mem: storing 1195 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1195
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 3 -> 4
9999 mem: storing 1199 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1191: 5 -> 6
9999 mem: storing 1191 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1191
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 4 -> 5
9999 mem: storing 1195 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1236
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1199
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1235 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 99
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 99
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 99
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 25 -> 26
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 99
  90 print-character: 99
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 99
9999 mem: storing 0 in location 1281
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 0
9999 mem: storing 30 in location 1284
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 99
9999 mem: storing 0 in location 1287
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 99
9999 mem: location 1272 is 7
9999 mem: storing 99 in location 1289
9999 mem: storing 7 in location 1290
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 30
9998 run: address to copy to is 1076
9999 mem: location 1289 is 99
9999 mem: location 1290 is 7
9999 mem: storing 99 in location 1076
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 26 -> 25
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 4 -> 5
9999 mem: storing 1199 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 3 -> 4
9999 mem: storing 1203 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1195
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1195: 5 -> 6
9999 mem: storing 1195 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1195
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 4 -> 5
9999 mem: storing 1199 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1236
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1203
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1235 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 10
9999 mem: storing 10 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 25 -> 26
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 26 -> 27
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 26 -> 27
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 1
9999 mem: storing 31 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 31
9998 run: address to copy to is 1078
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 27 -> 28
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
9990 schedule: print/clear-line-until/render/new-editor/scenario_editor-can-undo-ctrl-f
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 2
9999 mem: storing 32 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 32
9998 run: address to copy to is 1080
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 28 -> 29
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 3
9999 mem: storing 33 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 33
9998 run: address to copy to is 1082
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 29 -> 30
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 4
9999 mem: storing 34 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 34
9998 run: address to copy to is 1084
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 30 -> 31
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 5
9999 mem: storing 35 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 35
9998 run: address to copy to is 1086
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 31 -> 32
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 6
9999 mem: storing 36 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 36
9998 run: address to copy to is 1088
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 32 -> 33
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 7
9999 mem: storing 37 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 37
9998 run: address to copy to is 1090
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 33 -> 34
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 8
9999 mem: storing 38 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 38
9998 run: address to copy to is 1092
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 34 -> 35
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 9
9999 mem: storing 39 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 39
9998 run: address to copy to is 1094
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 35 -> 34
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 3
9999 mem: storing 4 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 4
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 34 -> 35
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 4
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 4 -> 5
9999 mem: storing 1203 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 3 -> 4
9999 mem: storing 1207 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 5 -> 6
9999 mem: storing 1199 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 4 -> 5
9999 mem: storing 1203 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1236
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1207
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1235 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 100
9999 mem: storing 100 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 100
9999 mem: storing 0 in location 1261
9990 schedule: get-color/render/new-editor/scenario_editor-can-undo-ctrl-f
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 100
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 100
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 35 -> 36
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 100
  90 print-character: 100
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1281
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 0
9999 mem: storing 40 in location 1284
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1287
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 100
9999 mem: location 1272 is 7
9999 mem: storing 100 in location 1289
9999 mem: storing 7 in location 1290
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 40
9998 run: address to copy to is 1096
9999 mem: location 1289 is 100
9999 mem: location 1290 is 7
9999 mem: storing 100 in location 1096
9999 mem: storing 7 in location 1097
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 36 -> 35
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 4 -> 5
9999 mem: storing 1207 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 3 -> 4
9999 mem: storing 1211 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 5 -> 6
9999 mem: storing 1203 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 4 -> 5
9999 mem: storing 1207 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1236
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1211
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1235 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 35 -> 36
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 36 -> 37
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 4
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 37 -> 36
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 36 -> 37
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 1
9999 mem: storing 41 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 41
9998 run: address to copy to is 1098
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 37 -> 38
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 2
9999 mem: storing 42 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 42
9998 run: address to copy to is 1100
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 38 -> 39
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 3
9999 mem: storing 43 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 43
9998 run: address to copy to is 1102
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 39 -> 40
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 4
9999 mem: storing 44 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 44
9998 run: address to copy to is 1104
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 40 -> 41
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 5
9999 mem: storing 45 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 45
9998 run: address to copy to is 1106
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 41 -> 42
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
9990 schedule: print/clear-line-until/render/new-editor/scenario_editor-can-undo-ctrl-f
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 6
9999 mem: storing 46 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 46
9998 run: address to copy to is 1108
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 42 -> 43
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 7
9999 mem: storing 47 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 47
9998 run: address to copy to is 1110
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 43 -> 44
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 8
9999 mem: storing 48 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 48
9998 run: address to copy to is 1112
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 44 -> 45
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 9
9999 mem: storing 49 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 49
9998 run: address to copy to is 1114
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 4
9999 mem: storing 5 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 5
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 44 -> 45
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 5
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 4 -> 5
9999 mem: storing 1211 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1215: 3 -> 4
9999 mem: storing 1215 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1215
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 5 -> 6
9999 mem: storing 1207 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 4 -> 5
9999 mem: storing 1211 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1236
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1215
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1233 is 5
9999 mem: storing 1 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 70
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1235 is 1215
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1151
9999 mem: location 1151 is 0
9999 mem: incrementing refcount of 1215: 4 -> 5
9999 mem: storing 1215 in location 1151
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1241 is 0
9999 mem: storing 1 in location 1251
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1244 is 0
9999 mem: location 1251 is 1
9999 mem: storing 0 in location 1252
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1253
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: storing 0 in location 1254
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 82
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1238 is 5
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1155
9999 mem: storing 5 in location 1155
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1240 is 1
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1156
9999 mem: storing 1 in location 1156
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1241 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1242 is 1167
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1167
9999 mem: skipping refcount at 1167
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1167 in location 1152
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1238 is 5
9999 mem: location 1239 is 0
9999 mem: location 1230 is 1008
9999 mem: location 1231 is 1148
9999 mem: clearing left:number
9999 mem: storing 0 in location 1232
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1233
9999 mem: clearing right:number
9999 mem: storing 0 in location 1234
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1235 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 5 -> 4
9999 mem: storing 0 in location 1235
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1236 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 5 -> 4
9999 mem: storing 0 in location 1236
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing color:number
9999 mem: storing 0 in location 1237
9999 mem: clearing row:number
9999 mem: storing 0 in location 1238
9999 mem: clearing column:number
9999 mem: storing 0 in location 1239
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1242 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 9 -> 8
9999 mem: storing 0 in location 1242
9999 mem: clearing off-screen?:boolean
9999 mem: storing 0 in location 1243
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing at-cursor?:boolean
9999 mem: storing 0 in location 1245
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: clearing c:character
9999 mem: storing 0 in location 1246
9999 mem: clearing color
9999 mem: storing 0 in location 1237
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1247
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing left-of-cursor?:boolean
9999 mem: storing 0 in location 1248
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: clearing row
9999 mem: storing 0 in location 1238
9999 mem: clearing column
9999 mem: storing 0 in location 1239
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev
9999 mem: location 1236 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1236
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1249
9999 mem: clearing wrap-icon:character
9999 mem: storing 0 in location 1250
9999 mem: clearing column
9999 mem: storing 0 in location 1239
9999 mem: clearing row
9999 mem: storing 0 in location 1238
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev
9999 mem: location 1236 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1236
9999 mem: clearing column
9999 mem: storing 0 in location 1239
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing cursor-outside-line?:boolean
9999 mem: storing 0 in location 1251
9999 mem: clearing before-cursor-on-same-line?:boolean
9999 mem: storing 0 in location 1252
9999 mem: clearing above-cursor-row?:boolean
9999 mem: storing 0 in location 1253
9999 mem: clearing before-cursor?:boolean
9999 mem: storing 0 in location 1254
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: automatically abandoning 1227
9999 abandon: updating refcounts inside 1227: (array number)
9999 abandon: saving 1227 in free-list of size 28
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 5
9998 run: result 1 is 0
9998 run: result 2 is 1008
9998 run: result 3 is 1148
9999 mem: storing 1008 in location 1143
9999 mem: storing 1148 in location 1146
 103 run: {result: ("address" "editor-data"), "lookup": ()} <- put {result: ("address" "editor-data"), "lookup": ()}, {indent?: "offset"}, {1: "literal", "true": ()}
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1146 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1158
9999 mem: storing 1 in location 1158
 103 run: reply {result: ("address" "editor-data")}, {screen: ("address" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1146 is 1148
9999 mem: location 1143 is 1008
9999 mem: clearing s:address:array:character
9999 mem: location 1142 is 1126
9999 mem: skipping refcount at 1126
9999 mem: decrementing refcount of 1126: 2 -> 1
9999 mem: storing 0 in location 1142
9999 mem: clearing screen:address:screen
9999 mem: location 1143 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 0 in location 1143
9999 mem: clearing left:number
9999 mem: storing 0 in location 1144
9999 mem: clearing right:number
9999 mem: storing 0 in location 1145
9999 mem: clearing right
9999 mem: storing 0 in location 1145
9999 mem: clearing init:address:duplex-list:character
9999 mem: location 1147 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 8 -> 7
9999 mem: storing 0 in location 1147
9999 mem: clearing _
9999 mem: clearing _
9999 mem: clearing screen
9999 mem: location 1143 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1143
9999 mem: automatically abandoning 1139
9999 abandon: updating refcounts inside 1139: (array number)
9999 abandon: saving 1139 in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1148
9999 mem: storing 1148 in location 2
 102 run: editor-render {screen: ("address" "screen"), "raw": ()}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 2 is 1148
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1139
9999 mem: storing 7 in location 1140
 103 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1142 is 0
9999 mem: incrementing refcount of 1008: 44 -> 45
9999 mem: storing 1008 in location 1142
 103 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1143 is 0
9999 mem: incrementing refcount of 1148: 3 -> 4
9999 mem: storing 1148 in location 1143
 103 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1144
 103 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1145
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1142 is 1008
9999 mem: location 1143 is 1148
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1227
9999 mem: storing 26 in location 1228
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1230 is 0
9999 mem: incrementing refcount of 1008: 45 -> 46
9999 mem: storing 1008 in location 1230
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1231 is 0
9999 mem: incrementing refcount of 1148: 4 -> 5
9999 mem: storing 1148 in location 1231
 104 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1231 is 1148
9998 run: jumping to instruction 6
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1232
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1230 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 46 -> 47
9999 mem: storing 1008 in location 1185
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1186
 105 run: return {height: "number"}
9999 mem: location 1186 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1233
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1234
 104 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1235 is 0
9999 mem: incrementing refcount of 1167: 7 -> 8
9999 mem: storing 1167 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1167
9999 mem: location 1236 is 0
9999 mem: incrementing refcount of 1167: 8 -> 9
9999 mem: storing 1167 in location 1236
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1167: 9 -> 10
9999 mem: storing 1167 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1167
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1178: 5 -> 6
9999 mem: storing 1178 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1235
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1240
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1241
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1167
9999 mem: location 1242 is 0
9999 mem: incrementing refcount of 1167: 9 -> 10
9999 mem: storing 1167 in location 1242
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 1
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 46 -> 47
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1178
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1241 is 0
9999 mem: storing 1 in location 1245
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1167
9999 mem: location 1242 is 1167
9999 mem: skipping refcount at 1167
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1167 in location 1242
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1235 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1179
9998 run: its type is "character"
9999 mem: location 1179 is 97
9999 mem: storing 97 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 97
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 97
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 97
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 47 -> 48
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 97
  90 print-character: 97
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 97
9999 mem: storing 0 in location 1281
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 0
9999 mem: storing 10 in location 1284
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 97
9999 mem: storing 0 in location 1287
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 97
9999 mem: location 1272 is 7
9999 mem: storing 97 in location 1289
9999 mem: storing 7 in location 1290
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 10
9998 run: address to copy to is 1036
9999 mem: location 1289 is 97
9999 mem: location 1290 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 48 -> 47
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1178
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1178: 6 -> 7
9999 mem: storing 1178 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1178
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1187: 5 -> 6
9999 mem: storing 1187 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1167: 10 -> 11
9999 mem: storing 1167 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1167
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1178: 6 -> 7
9999 mem: storing 1178 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 11 -> 10
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1236
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1187
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1245
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1235 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1188
9998 run: its type is "character"
9999 mem: location 1188 is 10
9999 mem: storing 10 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1248
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 46
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 47 -> 48
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 48 -> 49
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 49 -> 48
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
9990 schedule: clear-line-until/render/editor-render/scenario_editor-can-undo-ctrl-f
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 48 -> 49
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 1
9999 mem: storing 11 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 11
9998 run: address to copy to is 1038
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 49 -> 50
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 2
9999 mem: storing 12 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 12
9998 run: address to copy to is 1040
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 50 -> 51
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 3
9999 mem: storing 13 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 13
9998 run: address to copy to is 1042
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 51 -> 52
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 4
9999 mem: storing 14 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 14
9998 run: address to copy to is 1044
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 52 -> 53
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 5
9999 mem: storing 15 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 15
9998 run: address to copy to is 1046
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 53 -> 54
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 6
9999 mem: storing 16 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 16
9998 run: address to copy to is 1048
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 54 -> 55
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 7
9999 mem: storing 17 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 17
9998 run: address to copy to is 1050
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 55 -> 56
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 8
9999 mem: storing 18 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 18
9998 run: address to copy to is 1052
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 56 -> 57
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
9990 schedule: print/clear-line-until/render/editor-render/scenario_editor-can-undo-ctrl-f
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 9
9999 mem: storing 19 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 19
9998 run: address to copy to is 1054
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 2 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 2
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 56 -> 57
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1187
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1187: 6 -> 7
9999 mem: storing 1187 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1187
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1191: 5 -> 6
9999 mem: storing 1191 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1178
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1178: 7 -> 8
9999 mem: storing 1178 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1178
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1187: 6 -> 7
9999 mem: storing 1187 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1236
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1191
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1235 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 98
9999 mem: storing 98 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 98
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 98
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 98
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 57 -> 58
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 98
  90 print-character: 98
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 98
9999 mem: storing 0 in location 1281
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 0
9999 mem: storing 20 in location 1284
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 98
9999 mem: storing 0 in location 1287
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 98
9999 mem: location 1272 is 7
9999 mem: storing 98 in location 1289
9999 mem: storing 7 in location 1290
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 20
9998 run: address to copy to is 1056
9999 mem: location 1289 is 98
9999 mem: location 1290 is 7
9999 mem: storing 98 in location 1056
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1191: 6 -> 7
9999 mem: storing 1191 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1191
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 5 -> 6
9999 mem: storing 1195 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1187
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1187: 7 -> 8
9999 mem: storing 1187 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1187
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1191: 6 -> 7
9999 mem: storing 1191 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1236
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1195
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1235 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is "character"
9999 mem: location 1196 is 10
9999 mem: storing 10 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 57 -> 58
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 58 -> 59
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 2
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 58 -> 59
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1
9999 mem: storing 21 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 21
9998 run: address to copy to is 1058
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 59 -> 60
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 2
9999 mem: storing 22 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 22
9998 run: address to copy to is 1060
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 60 -> 61
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 3
9999 mem: storing 23 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 23
9998 run: address to copy to is 1062
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 61 -> 62
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 4
9999 mem: storing 24 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 24
9998 run: address to copy to is 1064
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
9990 schedule: print/clear-line-until/render/editor-render/scenario_editor-can-undo-ctrl-f
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 62 -> 63
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 5
9999 mem: storing 25 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 25
9998 run: address to copy to is 1066
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 63 -> 64
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 6
9999 mem: storing 26 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 26
9998 run: address to copy to is 1068
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 64 -> 65
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 7
9999 mem: storing 27 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 27
9998 run: address to copy to is 1070
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 8
9999 mem: storing 28 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 28
9998 run: address to copy to is 1072
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 66 -> 67
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 9
9999 mem: storing 29 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 29
9998 run: address to copy to is 1074
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 2
9999 mem: storing 3 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 3
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 66 -> 67
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 3
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1195
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1195: 6 -> 7
9999 mem: storing 1195 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1195
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 5 -> 6
9999 mem: storing 1199 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1191
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1191: 7 -> 8
9999 mem: storing 1191 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1191
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 6 -> 7
9999 mem: storing 1195 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1236
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1199
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1235 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 99
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 99
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 99
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 67 -> 68
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 99
  90 print-character: 99
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 99
9999 mem: storing 0 in location 1281
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 0
9999 mem: storing 30 in location 1284
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 99
9999 mem: storing 0 in location 1287
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 99
9999 mem: location 1272 is 7
9999 mem: storing 99 in location 1289
9999 mem: storing 7 in location 1290
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 30
9998 run: address to copy to is 1076
9999 mem: location 1289 is 99
9999 mem: location 1290 is 7
9999 mem: storing 99 in location 1076
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 6 -> 7
9999 mem: storing 1199 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 5 -> 6
9999 mem: storing 1203 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1195
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1195: 7 -> 8
9999 mem: storing 1195 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1195
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 6 -> 7
9999 mem: storing 1199 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1236
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1203
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1235 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 10
9999 mem: storing 10 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 4
9990 schedule: clear-line-until/render/editor-render/scenario_editor-can-undo-ctrl-f
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 67 -> 68
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 68 -> 69
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 68 -> 69
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 1
9999 mem: storing 31 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 31
9998 run: address to copy to is 1078
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 69 -> 70
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 2
9999 mem: storing 32 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 32
9998 run: address to copy to is 1080
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 70 -> 71
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 3
9999 mem: storing 33 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 33
9998 run: address to copy to is 1082
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 71 -> 72
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 4
9999 mem: storing 34 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 34
9998 run: address to copy to is 1084
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 72 -> 73
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 5
9999 mem: storing 35 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 35
9998 run: address to copy to is 1086
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 73 -> 74
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 6
9999 mem: storing 36 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 36
9998 run: address to copy to is 1088
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 74 -> 75
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 7
9999 mem: storing 37 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 37
9998 run: address to copy to is 1090
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 75 -> 76
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 8
9999 mem: storing 38 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 38
9998 run: address to copy to is 1092
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
9990 schedule: print/clear-line-until/render/editor-render/scenario_editor-can-undo-ctrl-f
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 76 -> 77
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 9
9999 mem: storing 39 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 39
9998 run: address to copy to is 1094
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 3
9999 mem: storing 4 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 4
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 76 -> 77
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 4
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 6 -> 7
9999 mem: storing 1203 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 5 -> 6
9999 mem: storing 1207 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 7 -> 8
9999 mem: storing 1199 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 6 -> 7
9999 mem: storing 1203 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1236
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1207
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1235 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 100
9999 mem: storing 100 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 100
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 100
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 104 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 100
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 77 -> 78
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 100
  90 print-character: 100
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1281
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 0
9999 mem: storing 40 in location 1284
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1287
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 100
9999 mem: location 1272 is 7
9999 mem: storing 100 in location 1289
9999 mem: storing 7 in location 1290
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 40
9998 run: address to copy to is 1096
9999 mem: location 1289 is 100
9999 mem: location 1290 is 7
9999 mem: storing 100 in location 1096
9999 mem: storing 7 in location 1097
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 78 -> 77
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 6 -> 7
9999 mem: storing 1207 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 4 -> 5
9999 mem: storing 1211 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 7 -> 8
9999 mem: storing 1203 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 6 -> 7
9999 mem: storing 1207 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1236
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1211
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 104 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1235 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1246
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: storing 10 in location 1256
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1258
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1259
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1258 is 7
9999 mem: storing 1 in location 1260
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1261
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1262
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1259 is 10
9999 mem: storing 0 in location 1264
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1258 is 7
9999 mem: storing 0 in location 1265
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1258 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1259
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1260
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1261
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1262
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1263
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1264
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1265
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1266
9999 mem: automatically abandoning 1255
9999 abandon: updating refcounts inside 1255: (array number)
9999 abandon: saving 1255 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 77 -> 78
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 78 -> 79
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 4
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 78 -> 79
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 1
9999 mem: storing 41 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 41
9998 run: address to copy to is 1098
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 79 -> 80
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 2
9999 mem: storing 42 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 42
9998 run: address to copy to is 1100
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 80 -> 81
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 3
9999 mem: storing 43 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 43
9998 run: address to copy to is 1102
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 81 -> 82
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
9990 schedule: print/clear-line-until/render/editor-render/scenario_editor-can-undo-ctrl-f
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 4
9999 mem: storing 44 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 44
9998 run: address to copy to is 1104
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 82 -> 83
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 5
9999 mem: storing 45 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 45
9998 run: address to copy to is 1106
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 83 -> 84
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 6
9999 mem: storing 46 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 46
9998 run: address to copy to is 1108
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 84 -> 85
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 7
9999 mem: storing 47 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 47
9998 run: address to copy to is 1110
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 85 -> 86
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 8
9999 mem: storing 48 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 48
9998 run: address to copy to is 1112
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 86 -> 87
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 9
9999 mem: storing 49 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 49
9998 run: address to copy to is 1114
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 4
9999 mem: storing 5 in location 1238
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 5
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 86 -> 87
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 5
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 104 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 5 -> 6
9999 mem: storing 1211 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1215: 4 -> 5
9999 mem: storing 1215 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1215
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1235
 104 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 7 -> 8
9999 mem: storing 1207 in location 1185
 105 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 105 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 5 -> 6
9999 mem: storing 1211 in location 1186
 105 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1236
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 104 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1215
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1233 is 5
9999 mem: storing 1 in location 1243
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 70
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1235 is 1215
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1151
9999 mem: location 1151 is 1215
9999 mem: skipping refcount at 1215
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1215 in location 1151
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1241 is 0
9999 mem: storing 1 in location 1251
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1244 is 0
9999 mem: location 1251 is 1
9999 mem: storing 0 in location 1252
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1253
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: storing 0 in location 1254
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 82
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1238 is 5
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1155
9999 mem: storing 5 in location 1155
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1240 is 1
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1156
9999 mem: storing 1 in location 1156
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1241 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 104 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1242 is 1167
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1167
9999 mem: skipping refcount at 1167
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1167 in location 1152
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1238 is 5
9999 mem: location 1239 is 0
9999 mem: location 1230 is 1008
9999 mem: location 1231 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 0 in location 1230
9999 mem: clearing editor:address:editor-data
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 5 -> 4
9999 mem: storing 0 in location 1231
9999 mem: clearing left:number
9999 mem: storing 0 in location 1232
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1233
9999 mem: clearing right:number
9999 mem: storing 0 in location 1234
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1235 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 5 -> 4
9999 mem: storing 0 in location 1235
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1236 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 6 -> 5
9999 mem: storing 0 in location 1236
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing color:number
9999 mem: storing 0 in location 1237
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1242 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 10 -> 9
9999 mem: storing 0 in location 1242
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing off-screen?:boolean
9999 mem: storing 0 in location 1243
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing at-cursor?:boolean
9999 mem: storing 0 in location 1245
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: clearing c:character
9999 mem: storing 0 in location 1246
9999 mem: clearing color
9999 mem: storing 0 in location 1237
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1247
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing left-of-cursor?:boolean
9999 mem: storing 0 in location 1248
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev
9999 mem: location 1236 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1236
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1249
9999 mem: clearing wrap-icon:character
9999 mem: storing 0 in location 1250
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev
9999 mem: location 1236 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1236
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing cursor-outside-line?:boolean
9999 mem: storing 0 in location 1251
9999 mem: clearing before-cursor-on-same-line?:boolean
9999 mem: storing 0 in location 1252
9999 mem: clearing above-cursor-row?:boolean
9999 mem: storing 0 in location 1253
9999 mem: clearing before-cursor?:boolean
9999 mem: storing 0 in location 1254
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: automatically abandoning 1227
9999 abandon: updating refcounts inside 1227: (array number)
9999 abandon: saving 1227 in free-list of size 28
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 5
9998 run: result 1 is 0
9999 mem: storing 5 in location 1146
9999 mem: storing 0 in location 1147
 103 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1142 is 1008
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 86 -> 87
9999 mem: storing 1008 in location 1119
 104 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 104 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 87 -> 88
9999 mem: storing 1008 in location 1164
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1165
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1166
 105 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 5
9999 mem: location 1166 is 0
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 88 -> 87
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9998 run: result 1 is 0
9999 mem: storing 0 in location 1121
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 0
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 87 -> 88
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 88 -> 89
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 89 -> 90
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 90 -> 91
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
9990 schedule: print/clear-line-until/editor-render/scenario_editor-can-undo-ctrl-f
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 91 -> 92
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 92 -> 93
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 93 -> 94
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 94 -> 95
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 95 -> 96
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 96 -> 97
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1146 is 5
9999 mem: storing 6 in location 1146
 103 run: draw-horizontal {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1142 is 1008
9999 mem: location 1146 is 6
9999 mem: location 1144 is 0
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1293
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 12 in location 1294
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1008: 96 -> 97
9999 mem: storing 1008 in location 1296
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1297
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1298
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1299
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1300
9999 mem: storing 1 in location 1301
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1302
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1304
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1297 is 6
9999 mem: location 1298 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 97 -> 98
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 6
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1296
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 0
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 0
9999 mem: storing 1 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 2 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 3 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 4 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 5 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 6 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 7 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 7
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 7
9999 mem: storing 8 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 8
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 8
9999 mem: storing 9 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
9990 schedule: draw-horizontal/editor-render/scenario_editor-can-undo-ctrl-f
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 9
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1270
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 9
9999 mem: storing 10 in location 1298
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 10
9999 mem: location 1299 is 9
9999 mem: storing 0 in location 1306
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1296 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1296 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 98 -> 97
9999 mem: storing 0 in location 1296
9999 mem: clearing row:number
9999 mem: storing 0 in location 1297
9999 mem: clearing x:number
9999 mem: storing 0 in location 1298
9999 mem: clearing right:number
9999 mem: storing 0 in location 1299
9999 mem: clearing style:character
9999 mem: storing 0 in location 1300
9999 mem: clearing style-found?:boolean
9999 mem: storing 0 in location 1301
9999 mem: clearing style
9999 mem: storing 0 in location 1300
9999 mem: clearing color:number
9999 mem: storing 0 in location 1302
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1303
9999 mem: clearing color
9999 mem: storing 0 in location 1302
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1304
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1305
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1304
9999 mem: clearing screen
9999 mem: location 1296 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1296
9999 mem: clearing continue?:boolean
9999 mem: storing 0 in location 1306
9999 mem: clearing x
9999 mem: storing 0 in location 1298
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1146 is 6
9999 mem: storing 7 in location 1146
 103 run: clear-screen-from {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1142 is 1008
9999 mem: location 1146 is 7
9999 mem: location 1144 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
9999 mem: storing 6 in location 1001
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1003 is 0
9999 mem: incrementing refcount of 1008: 97 -> 98
9999 mem: storing 1008 in location 1003
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1004
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 104 run: jump-if {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 7
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 7
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1003
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 99 -> 100
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 100 -> 101
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 7
9999 mem: location 1166 is 0
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9998 run: result 1 is 0
9999 mem: storing 0 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 0
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 100 -> 101
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 101 -> 102
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 102 -> 103
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 103 -> 104
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 104 -> 105
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 105 -> 106
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 106 -> 107
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 107 -> 108
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 108 -> 109
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 109 -> 110
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 110 -> 109
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1307
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: storing 7 in location 1308
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1310 is 0
9999 mem: incrementing refcount of 1008: 109 -> 110
9999 mem: storing 1008 in location 1310
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1311
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1313
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1311 is 7
9999 mem: storing 8 in location 1311
 105 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 8
9999 mem: location 1312 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 110 -> 111
9999 mem: storing 1008 in location 1164
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1165
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 8
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1310
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 111 -> 112
9999 mem: storing 1008 in location 1185
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1186
 106 run: return {height: "number"}
9999 mem: location 1186 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1314
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1311 is 8
9999 mem: location 1314 is 5
9999 mem: storing 1 in location 1315
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1310 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1310 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 0 in location 1310
9999 mem: clearing row:number
9999 mem: storing 0 in location 1311
9999 mem: clearing left:number
9999 mem: storing 0 in location 1312
9999 mem: clearing right:number
9999 mem: storing 0 in location 1313
9999 mem: clearing row
9999 mem: storing 0 in location 1311
9999 mem: clearing screen
9999 mem: location 1310 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1310
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1314
9999 mem: clearing at-bottom-of-screen?:boolean
9999 mem: storing 0 in location 1315
9999 mem: clearing screen
9999 mem: location 1310 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1310
9999 mem: clearing row
9999 mem: storing 0 in location 1311
9999 mem: automatically abandoning 1307
9999 abandon: updating refcounts inside 1307: (array number)
9999 abandon: saving 1307 in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 110 -> 109
9999 mem: storing 0 in location 1003
9999 mem: clearing row:number
9999 mem: storing 0 in location 1004
9999 mem: clearing column:number
9999 mem: storing 0 in location 1005
9999 mem: clearing left:number
9999 mem: storing 0 in location 1006
9999 mem: clearing right:number
9999 mem: storing 0 in location 1007
9999 mem: clearing screen
9999 mem: location 1003 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1003
9999 mem: automatically abandoning 1000
9999 abandon: updating refcounts inside 1000: (array number)
9999 abandon: saving 1000 in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1142 is 1008
9999 mem: location 1143 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1142 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 109 -> 108
9999 mem: storing 0 in location 1142
9999 mem: clearing editor:address:editor-data
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 4 -> 3
9999 mem: storing 0 in location 1143
9999 mem: clearing left:number
9999 mem: storing 0 in location 1144
9999 mem: clearing right:number
9999 mem: storing 0 in location 1145
9999 mem: clearing row:number
9999 mem: storing 0 in location 1146
9999 mem: clearing column:number
9999 mem: storing 0 in location 1147
9999 mem: clearing row
9999 mem: storing 0 in location 1146
9999 mem: clearing row
9999 mem: storing 0 in location 1146
9999 mem: automatically abandoning 1139
9999 abandon: updating refcounts inside 1139: (array number)
9999 abandon: saving 1139 in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    press ctrl-f\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-f: ()}
9992 load: after rewriting: press {ctrl-f: ()}
9999 mem: storing 'press' event starting at 1318
9999 mem: storing console in 1322
9999 mem: storing console data in 1324
 102 run: editor-event-loop {screen: ("address" "screen"), "raw": ()}, {console: ("address" "console"), "raw": ()}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1322
9999 mem: location 2 is 1148
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1325
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 17 in location 1326
 103 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1328 is 0
9999 mem: incrementing refcount of 1008: 108 -> 109
9999 mem: storing 1008 in location 1328
 103 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1329 is 0
9999 mem: incrementing refcount of 1322: 1 -> 2
9999 mem: storing 1322 in location 1329
 103 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1330 is 0
9999 mem: incrementing refcount of 1148: 3 -> 4
9999 mem: storing 1148 in location 1330
 103 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1331
 103 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1332
 103 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 1
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 109 -> 110
9999 mem: storing 1008 in location 1164
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1328
 103 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1329 is 1322
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
9999 mem: storing 12 in location 1294
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1322: 2 -> 3
9999 mem: storing 1322 in location 1296
 104 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1322
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1316
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is "number"
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1297
 104 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1316
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1324
9998 run: its type is ("address" "array" "event")
9999 mem: location 1324 is 1316
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1316: 1 -> 2
9999 mem: storing 1316 in location 1298
 104 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: storing 1 in location 1299
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 0
9999 mem: location 1299 is 1
9999 mem: storing 0 in location 1300
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9998 run: base address is 1317
9999 mem: location 1297 is 0
9998 run: address to copy is 1318
9998 run: its type is event
9999 mem: location 1318 is 0
9999 mem: location 1319 is 6
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 6 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 104 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 0
9999 mem: storing 1 in location 1297
 104 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1316
9999 mem: location 1297 is 1
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy to is 1323
9999 mem: storing 1 in location 1323
 104 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 0
9999 mem: location 1303 is 6
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1322
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: decrementing refcount of 1316: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing dummy:address:event
9999 mem: location 1301 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1301
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 6, 0, 0]
9998 run: result 1 is 1322
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1333
9999 mem: storing 6 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 1322 in location 1329
9999 mem: storing 1 in location 1337
9999 mem: storing 0 in location 1338
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event
 103 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1333 is 0
9999 mem: location 1334 is 6
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1342
 103 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1148
9999 mem: location 1333 is 0
9999 mem: location 1334 is 6
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 mem: new alloc: 1344
9999 mem: storing 0 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: storing 0 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
9999 mem: storing 0 in location 1358
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: storing 0 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: storing 0 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: storing 0 in location 1379
9999 mem: storing 0 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
9999 mem: storing 0 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: storing 0 in location 1406
9999 mem: storing 0 in location 1407
9999 mem: storing 0 in location 1408
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: storing 0 in location 1419
9999 mem: storing 0 in location 1420
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: storing 0 in location 1441
9999 mem: storing 0 in location 1442
9999 mem: storing 0 in location 1443
9999 mem: storing 0 in location 1444
9999 mem: storing 0 in location 1445
9999 mem: storing 0 in location 1446
9999 mem: storing 0 in location 1447
9999 mem: storing 102 in location 1345
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1347 is 0
9999 mem: incrementing refcount of 1008: 110 -> 111
9999 mem: storing 1008 in location 1347
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1348 is 0
9999 mem: incrementing refcount of 1148: 4 -> 5
9999 mem: storing 1148 in location 1348
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1349
9999 mem: storing 6 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1353
 104 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1348 is 1148
9998 run: jumping to instruction 8
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1347 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 111 -> 112
9999 mem: storing 1008 in location 1185
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1186
 105 run: return {width: "number"}
9999 mem: location 1186 is 10
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1354
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1347 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 111 -> 112
9999 mem: storing 1008 in location 1185
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1186
 105 run: return {height: "number"}
9999 mem: location 1186 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1355
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1356
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1357
 104 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1167
9999 mem: location 1358 is 0
9999 mem: incrementing refcount of 1167: 9 -> 10
9999 mem: storing 1167 in location 1358
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1360
 104 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1359 is 1
9999 mem: storing 1 in location 1361
 104 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1362
 104 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1349 is 0
9999 mem: location 1350 is 6
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 1 in location 1364
9999 mem: storing 6 in location 1363
 104 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 1
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character
 104 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1363 is 6
9999 mem: storing 0 in location 1365
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 73
 104 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1363 is 6
9999 mem: storing 0 in location 1403
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 128
 104 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1363 is 6
9999 mem: storing 0 in location 1407
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 167
9990 schedule: handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-ctrl-f
 104 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1418
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 104 run: {old-top: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1408 is 0
9999 mem: incrementing refcount of 1167: 10 -> 11
9999 mem: storing 1167 in location 1408
 104 run: {cursor-row-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1409
 104 run: {cursor-column-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1410
 104 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1411 is 0
9999 mem: incrementing refcount of 1167: 11 -> 12
9999 mem: storing 1167 in location 1411
 104 run: page-down {editor: ("address" "editor-data")}
9999 mem: location 1348 is 1148
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
9999 mem: storing 6 in location 1001
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1003 is 0
9999 mem: incrementing refcount of 1148: 5 -> 6
9999 mem: storing 1148 in location 1003
 105 run: {bottom-of-screen: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1151
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1151 is 1215
9999 mem: location 1004 is 0
9999 mem: incrementing refcount of 1215: 4 -> 5
9999 mem: storing 1215 in location 1004
 105 run: jump-if {bottom-of-screen: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1004 is 1215
9998 run: jumping to instruction 6
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1167
9999 mem: location 1005 is 0
9999 mem: incrementing refcount of 1167: 12 -> 13
9999 mem: storing 1167 in location 1005
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- prev_2 {bottom-of-screen: ("address" "duplex-list" "character")}
9999 mem: location 1004 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1215: 5 -> 6
9999 mem: storing 1215 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1215
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1218
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1218 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 5 -> 6
9999 mem: storing 1211 in location 1186
 106 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1005
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1005 is 1211
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 13 -> 12
9999 mem: incrementing refcount of 1211: 6 -> 7
9999 mem: storing 1211 in location 1152
 105 run: {last: "character"} <- get {before-cursor: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1005 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1006
 105 run: {newline?: "boolean"} <- equal {last: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1006 is 10
9999 mem: storing 1 in location 1007
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1005 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 7 -> 8
9999 mem: storing 1211 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1214
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1214 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 7 -> 8
9999 mem: storing 1207 in location 1186
 106 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1005
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1005 is 1207
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 7 -> 6
9999 mem: incrementing refcount of 1207: 8 -> 9
9999 mem: storing 1207 in location 1152
 105 run: move-to-start-of-line {editor: ("address" "editor-data")}
9999 mem: location 1003 is 1148
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1448
9999 mem: storing 0 in location 1448
9999 mem: storing 0 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
9999 mem: storing 0 in location 1453
9999 mem: storing 0 in location 1454
9999 mem: storing 0 in location 1455
9999 mem: storing 0 in location 1456
9999 mem: storing 0 in location 1457
9999 mem: storing 0 in location 1458
9999 mem: storing 9 in location 1449
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1451 is 0
9999 mem: incrementing refcount of 1148: 6 -> 7
9999 mem: storing 1148 in location 1451
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1207
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1452
 106 run: {cursor-column: "number"} <- copy {left: "number"}
9999 mem: location 1452 is 0
9999 mem: storing 0 in location 1453
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1207
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1453 is 0
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1207
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1207
9999 mem: location 1454 is 0
9999 mem: incrementing refcount of 1207: 9 -> 10
9999 mem: storing 1207 in location 1454
 106 run: {init: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1207
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1149
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1149 is 1167
9999 mem: location 1455 is 0
9999 mem: incrementing refcount of 1167: 12 -> 13
9999 mem: storing 1167 in location 1455
 106 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "duplex-list" "character")}, {init: ("address" "duplex-list" "character")}
9999 mem: location 1454 is 1207
9999 mem: location 1455 is 1167
9999 mem: storing 0 in location 1456
 106 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1456 is 0
9998 run: jump-if fell through
 106 run: {prev: "character"} <- get {before-cursor: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1454 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1454 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 100
9999 mem: storing 100 in location 1457
 106 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1457 is 100
9999 mem: storing 0 in location 1458
 106 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1454 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 10 -> 11
9999 mem: storing 1207 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1210
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1210 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 7 -> 8
9999 mem: storing 1203 in location 1186
 107 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 11 -> 10
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1454
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1207
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1454 is 1203
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 10 -> 9
9999 mem: incrementing refcount of 1203: 8 -> 9
9999 mem: storing 1203 in location 1152
 106 run: assert {before-cursor: ("address" "duplex-list" "character")}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1454 is 1203
 106 run: jump {: "offset"}
9998 run: jumping to instruction 8
 106 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "duplex-list" "character")}, {init: ("address" "duplex-list" "character")}
9999 mem: location 1454 is 1203
9999 mem: location 1455 is 1167
9999 mem: storing 0 in location 1456
 106 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1456 is 0
9998 run: jump-if fell through
 106 run: {prev: "character"} <- get {before-cursor: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1454 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1454 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 10
9999 mem: storing 10 in location 1457
 106 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1457 is 10
9999 mem: storing 1 in location 1458
 106 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1458 is 1
9998 run: jumping to instruction 17
 106 run: reply {editor: ("address" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1451 is 1148
9999 mem: clearing editor:address:editor-data
9999 mem: location 1451 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 7 -> 6
9999 mem: storing 0 in location 1451
9999 mem: clearing left:number
9999 mem: storing 0 in location 1452
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1453
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1454 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 9 -> 8
9999 mem: storing 0 in location 1454
9999 mem: clearing init:address:duplex-list:character
9999 mem: location 1455 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 13 -> 12
9999 mem: storing 0 in location 1455
9999 mem: clearing at-start-of-text?:boolean
9999 mem: storing 0 in location 1456
9999 mem: clearing prev:character
9999 mem: storing 0 in location 1457
9999 mem: clearing at-start-of-line?:boolean
9999 mem: storing 0 in location 1458
9999 mem: clearing before-cursor
9999 mem: location 1454 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1454
9999 mem: automatically abandoning 1448
9999 abandon: updating refcounts inside 1448: (array number)
9999 abandon: saving 1448 in free-list of size 11
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1203
9999 mem: location 1005 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 9 -> 8
9999 mem: incrementing refcount of 1203: 8 -> 9
9999 mem: storing 1203 in location 1005
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1005 is 1203
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1150
9999 mem: location 1150 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 12 -> 11
9999 mem: incrementing refcount of 1203: 9 -> 10
9999 mem: storing 1203 in location 1150
 105 run: reply {editor: ("address" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1148
9999 mem: clearing editor:address:editor-data
9999 mem: location 1003 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 6 -> 5
9999 mem: storing 0 in location 1003
9999 mem: clearing bottom-of-screen:address:duplex-list:character
9999 mem: location 1004 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 5 -> 4
9999 mem: storing 0 in location 1004
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1005 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 10 -> 9
9999 mem: storing 0 in location 1005
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1005 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1005
9999 mem: clearing last:character
9999 mem: storing 0 in location 1006
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1007
9999 mem: clearing before-cursor
9999 mem: location 1005 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1005
9999 mem: clearing before-cursor
9999 mem: location 1005 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1005
9999 mem: automatically abandoning 1000
9999 abandon: updating refcounts inside 1000: (array number)
9999 abandon: saving 1000 in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1412
 104 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1203
9999 mem: location 1413 is 0
9999 mem: incrementing refcount of 1203: 9 -> 10
9999 mem: storing 1203 in location 1413
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1360
 104 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 196
 104 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: location 1367 is 0
9999 mem: incrementing refcount of 1255: 0 -> 1
9999 mem: storing 1255 in location 1367
 104 run: {op: ("address" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1409 is 1
9999 mem: location 1410 is 0
9999 mem: location 1411 is 1167
9999 mem: location 1359 is 1
9999 mem: location 1360 is 0
9999 mem: location 1413 is 1203
9999 mem: location 1412 is 0
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: incrementing refcount of 1167: 11 -> 12
9999 mem: incrementing refcount of 1203: 10 -> 11
9999 mem: storing 1 in location 1256
9999 mem: storing 1 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: storing 1167 in location 1259
9999 mem: storing 1 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 1203 in location 1262
9999 mem: storing 0 in location 1263
 104 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1348 is 1148
9999 mem: location 1367 is 1255
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
9999 mem: storing 5 in location 1172
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1174 is 0
9999 mem: incrementing refcount of 1148: 5 -> 6
9999 mem: storing 1148 in location 1174
 105 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1255: 1 -> 2
9999 mem: storing 1255 in location 1175
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1159 is 0
9999 mem: location 1176 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1176
 105 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1175 is 1255
9999 mem: location 1176 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1255: 2 -> 3
9999 mem: storing 1255 in location 1164
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1165 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1165
 106 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1459
9999 mem: storing 0 in location 1459
9999 mem: storing 0 in location 1460
9999 mem: storing 0 in location 1461
9999 mem: location 1166 is 0
9999 mem: incrementing refcount of 1459: 0 -> 1
9999 mem: storing 1459 in location 1166
 106 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1255
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1459
9999 mem: skipping refcount at 1459
9999 mem: location 1166 is 1459
9999 mem: skipping refcount at 1459
9999 mem: incrementing refcount of 1255: 3 -> 4
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1255 in location 1460
9999 mem: storing 0 in location 1461
 106 run: reply {result: ("address" "list" "address" "operation")}
9999 mem: location 1166 is 1459
9999 mem: clearing x:_elem
9999 mem: location 1164 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 4 -> 3
9999 mem: storing 0 in location 1164
9999 mem: clearing in:address:list:_elem
9999 mem: location 1165 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1459
9999 mem: storing 1459 in location 1176
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1176 is 1459
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1159
9999 mem: location 1159 is 0
9999 mem: incrementing refcount of 1459: 1 -> 2
9999 mem: storing 1459 in location 1159
 105 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1160
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1160 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1177 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1160
9999 mem: location 1160 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1160
 105 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1174 is 1148
9999 mem: clearing op:address:operation
9999 mem: location 1175 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 3 -> 2
9999 mem: storing 0 in location 1175
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1176 is 1459
9999 mem: skipping refcount at 1459
9999 mem: decrementing refcount of 1459: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing undo
9999 mem: location 1176 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1176
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: clearing redo
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1148
9999 mem: storing 1148 in location 1348
 104 run: {top-of-screen: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1203
9999 mem: location 1416 is 0
9999 mem: incrementing refcount of 1203: 11 -> 12
9999 mem: storing 1203 in location 1416
 104 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "duplex-list" "character")}, {old-top: ("address" "duplex-list" "character")}
9999 mem: location 1416 is 1203
9999 mem: location 1408 is 1167
9999 mem: storing 0 in location 1417
 104 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1353
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1347 is 1008
9999 mem: location 1348 is 1148
9999 mem: location 1353 is 1
9999 mem: clearing e:event
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: clearing screen-width:number
9999 mem: storing 0 in location 1354
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1355
9999 mem: clearing left:number
9999 mem: storing 0 in location 1356
9999 mem: clearing right:number
9999 mem: storing 0 in location 1357
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 12 -> 11
9999 mem: storing 0 in location 1358
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing save-row:number
9999 mem: storing 0 in location 1361
9999 mem: clearing save-column:number
9999 mem: storing 0 in location 1362
9999 mem: clearing c:character
9999 mem: storing 0 in location 1363
9999 mem: clearing is-unicode?:boolean
9999 mem: storing 0 in location 1364
9999 mem: clearing redo?:boolean
9999 mem: storing 0 in location 1365
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 2 -> 1
9999 mem: storing 0 in location 1367
9999 mem: clearing redo
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing undo
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1379
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1380 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1380
9999 mem: clearing end:address:duplex-list:character
9999 mem: location 1381 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1381
9999 mem: clearing data:address:duplex-list:character
9999 mem: location 1382 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1382
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1401
9999 mem: clearing before-cursor
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1402 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1402
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing undo?:boolean
9999 mem: storing 0 in location 1403
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing undo
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing redo
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1379
9999 mem: clearing anchor:address:duplex-list:character
9999 mem: location 1404 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1404
9999 mem: clearing deleted:address:duplex-list:character
9999 mem: location 1405 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1405
9999 mem: clearing old-cursor:address:duplex-list:character
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing before-cursor
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1401
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1380 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1380
9999 mem: clearing end:address:duplex-list:character
9999 mem: location 1381 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1381
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing page-up?:boolean
9999 mem: storing 0 in location 1407
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1408 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 11 -> 10
9999 mem: storing 0 in location 1408
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 10 -> 9
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 12 -> 11
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1416 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 11 -> 10
9999 mem: storing 0 in location 1416
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1417
9999 mem: clearing page-down?:boolean
9999 mem: storing 0 in location 1418
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1416 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1416
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1417
9999 mem: clearing delete-to-end-of-line?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing deleted-cells:address:duplex-list:character
9999 mem: location 1420 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1420
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing delete-to-start-of-line?:boolean
9999 mem: storing 0 in location 1422
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing deleted-cells:address:duplex-list:character
9999 mem: location 1420 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1420
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing move-to-end-of-line?:boolean
9999 mem: storing 0 in location 1423
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-start-of-line?:boolean
9999 mem: storing 0 in location 1424
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing delete-previous-character?:boolean
9999 mem: storing 0 in location 1425
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing backspaced-cell:address:duplex-list:character
9999 mem: location 1426 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1426
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1379
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing backspaced-so-far:address:duplex-list:character
9999 mem: location 1427 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1427
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing tab?:boolean
9999 mem: storing 0 in location 1428
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1429 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1429
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1401
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing insert-until:address:duplex-list:character
9999 mem: location 1430 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1430
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1402 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1402
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1431 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1431
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1432
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1429 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1429
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1402 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1402
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1431 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1431
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing regular-character?:boolean
9999 mem: storing 0 in location 1433
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1429 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1429
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1401
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing insert-until:address:duplex-list:character
9999 mem: location 1430 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1430
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1402 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1402
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1431 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1431
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing k:number
9999 mem: storing 0 in location 1434
9999 mem: clearing is-keycode?:boolean
9999 mem: storing 0 in location 1435
9999 mem: clearing page-up?:boolean
9999 mem: storing 0 in location 1407
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1416 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1416
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1417
9999 mem: clearing page-down?:boolean
9999 mem: storing 0 in location 1418
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1416 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1416
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1417
9999 mem: clearing move-to-end-of-line?:boolean
9999 mem: storing 0 in location 1423
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-start-of-line?:boolean
9999 mem: storing 0 in location 1424
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-next-line?:boolean
9999 mem: storing 0 in location 1436
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-previous-line?:boolean
9999 mem: storing 0 in location 1437
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-previous-character?:boolean
9999 mem: storing 0 in location 1438
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1439 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1439
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing before-cursor
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-next-character?:boolean
9999 mem: storing 0 in location 1440
9999 mem: clearing next-cursor:address:duplex-list:character
9999 mem: location 1441 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1441
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing before-cursor
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing delete-next-character?:boolean
9999 mem: storing 0 in location 1442
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing deleted-cell:address:duplex-list:character
9999 mem: location 1443 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1443
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1379
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing delete-until:address:duplex-list:character
9999 mem: location 1444 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1444
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deleted-so-far:address:duplex-list:character
9999 mem: location 1445 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1445
9999 mem: clearing deleted-so-far
9999 mem: location 1445 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1445
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing paste-end?:boolean
9999 mem: storing 0 in location 1446
9999 mem: clearing paste-start?:boolean
9999 mem: storing 0 in location 1447
9999 mem: automatically abandoning 1344
9999 abandon: updating refcounts inside 1344: (array number)
9999 abandon: saving 1344 in free-list of size 104
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1148
9998 run: result 2 is 1
9999 mem: storing 1008 in location 1328
9999 mem: storing 1148 in location 1330
9999 mem: storing 1 in location 1343
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 103 run: {screen: ("address" "screen")} <- editor-render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1148
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1139
9999 mem: storing 7 in location 1140
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1142 is 0
9999 mem: incrementing refcount of 1008: 111 -> 112
9999 mem: storing 1008 in location 1142
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1143 is 0
9999 mem: incrementing refcount of 1148: 6 -> 7
9999 mem: storing 1148 in location 1143
 104 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1144
 104 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1145
 104 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1142 is 1008
9999 mem: location 1143 is 1148
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1227
9999 mem: storing 26 in location 1228
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1230 is 0
9999 mem: incrementing refcount of 1008: 112 -> 113
9999 mem: storing 1008 in location 1230
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1231 is 0
9999 mem: incrementing refcount of 1148: 7 -> 8
9999 mem: storing 1148 in location 1231
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1231 is 1148
9998 run: jumping to instruction 6
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1232
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1230 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 113 -> 114
9999 mem: storing 1008 in location 1185
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1186
 106 run: return {height: "number"}
9999 mem: location 1186 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1233
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1234
 105 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1203
9999 mem: location 1235 is 0
9999 mem: incrementing refcount of 1203: 10 -> 11
9999 mem: storing 1203 in location 1235
 105 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1203
9999 mem: location 1236 is 0
9999 mem: incrementing refcount of 1203: 11 -> 12
9999 mem: storing 1203 in location 1236
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1203
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 12 -> 13
9999 mem: storing 1203 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 8 -> 9
9999 mem: storing 1207 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1235
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 105 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1238
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1240
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1241
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1203
9999 mem: location 1242 is 0
9999 mem: incrementing refcount of 1203: 12 -> 13
9999 mem: storing 1203 in location 1242
 105 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 1
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 113 -> 114
9999 mem: storing 1008 in location 1164
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1207
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1241 is 0
9999 mem: storing 1 in location 1245
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1203
9999 mem: location 1242 is 1203
9999 mem: skipping refcount at 1203
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1203 in location 1242
 105 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1235 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 100
9999 mem: storing 100 in location 1246
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 100
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1462
9999 mem: storing 0 in location 1462
9999 mem: storing 0 in location 1463
9999 mem: storing 0 in location 1464
9999 mem: storing 0 in location 1465
9999 mem: storing 0 in location 1466
9999 mem: storing 0 in location 1467
9999 mem: storing 0 in location 1468
9999 mem: storing 0 in location 1469
9999 mem: storing 0 in location 1470
9999 mem: storing 0 in location 1471
9999 mem: storing 0 in location 1472
9999 mem: storing 0 in location 1473
9999 mem: storing 10 in location 1463
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1466
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 100
9999 mem: storing 0 in location 1468
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 100
9999 mem: storing 0 in location 1471
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1247
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 100
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 114 -> 115
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 100
  90 print-character: 100
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 0
9999 mem: storing 10 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 100
9999 mem: location 1272 is 7
9999 mem: storing 100 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 10
9998 run: address to copy to is 1036
9999 mem: location 1289 is 100
9999 mem: location 1290 is 7
9999 mem: storing 100 in location 1036
9999 mem: storing 7 in location 1037
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 115 -> 114
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1207
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 9 -> 10
9999 mem: storing 1207 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 6 -> 7
9999 mem: storing 1211 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1235
 105 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1203
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 13 -> 14
9999 mem: storing 1203 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 9 -> 10
9999 mem: storing 1207 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 14 -> 13
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1236
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1211
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1245
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 32
 105 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1235 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1246
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1466
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1468
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1471
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 105 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1248
 105 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 46
 105 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 114 -> 115
9999 mem: storing 1008 in location 1119
 106 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 106 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 115 -> 116
9999 mem: storing 1008 in location 1164
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1165
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 116 -> 115
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 115 -> 116
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 1
9999 mem: storing 11 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 11
9998 run: address to copy to is 1038
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 116 -> 117
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 2
9999 mem: storing 12 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 12
9998 run: address to copy to is 1040
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 117 -> 118
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
9990 schedule: print/clear-line-until/render/editor-render/editor-event-loop/scenario_editor-can-undo-ctrl-f
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 3
9999 mem: storing 13 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 13
9998 run: address to copy to is 1042
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 118 -> 119
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 4
9999 mem: storing 14 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 14
9998 run: address to copy to is 1044
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 119 -> 120
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 5
9999 mem: storing 15 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 15
9998 run: address to copy to is 1046
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 120 -> 121
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 6
9999 mem: storing 16 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 16
9998 run: address to copy to is 1048
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 121 -> 122
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 7
9999 mem: storing 17 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 17
9998 run: address to copy to is 1050
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 122 -> 123
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 8
9999 mem: storing 18 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 18
9998 run: address to copy to is 1052
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 123 -> 124
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 9
9999 mem: storing 19 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 19
9998 run: address to copy to is 1054
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 2 in location 1238
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 105 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 2
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 123 -> 124
9999 mem: storing 1008 in location 1164
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 7 -> 8
9999 mem: storing 1211 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1215: 4 -> 5
9999 mem: storing 1215 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1215
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 8 -> 7
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1235
 105 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1207
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 10 -> 11
9999 mem: storing 1207 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 7 -> 8
9999 mem: storing 1211 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 11 -> 10
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1236
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1215
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 105 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1235 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 101
9999 mem: storing 101 in location 1246
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 101
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1466
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 101
9999 mem: storing 0 in location 1468
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 101
9999 mem: storing 0 in location 1471
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1247
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 101
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 124 -> 125
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 101
  90 print-character: 101
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
9990 schedule: print/render/editor-render/editor-event-loop/scenario_editor-can-undo-ctrl-f
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 101
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 0
9999 mem: storing 20 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 101
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 101
9999 mem: location 1272 is 7
9999 mem: storing 101 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 20
9998 run: address to copy to is 1056
9999 mem: location 1289 is 101
9999 mem: location 1290 is 7
9999 mem: storing 101 in location 1056
9999 mem: storing 7 in location 1057
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1215: 5 -> 6
9999 mem: storing 1215 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1215
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1219: 3 -> 4
9999 mem: storing 1219 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1219
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1235
 105 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 8 -> 9
9999 mem: storing 1211 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1215: 5 -> 6
9999 mem: storing 1215 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1215
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1236
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1219
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 105 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 10
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1235 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is "character"
9999 mem: location 1220 is 10
9999 mem: storing 10 in location 1246
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1466
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1468
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1471
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 105 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 124 -> 125
9999 mem: storing 1008 in location 1119
 106 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 106 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 125 -> 126
9999 mem: storing 1008 in location 1164
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1165
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 2
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 125 -> 126
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1
9999 mem: storing 21 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 21
9998 run: address to copy to is 1058
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 126 -> 127
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 2
9999 mem: storing 22 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 22
9998 run: address to copy to is 1060
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 127 -> 128
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 3
9999 mem: storing 23 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 23
9998 run: address to copy to is 1062
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 128 -> 129
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 4
9999 mem: storing 24 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 24
9998 run: address to copy to is 1064
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 129 -> 130
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 5
9999 mem: storing 25 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 25
9998 run: address to copy to is 1066
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 130 -> 131
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 6
9999 mem: storing 26 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 26
9998 run: address to copy to is 1068
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 131 -> 132
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
9990 schedule: print/clear-line-until/render/editor-render/editor-event-loop/scenario_editor-can-undo-ctrl-f
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 7
9999 mem: storing 27 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 27
9998 run: address to copy to is 1070
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 132 -> 133
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 8
9999 mem: storing 28 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 28
9998 run: address to copy to is 1072
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 133 -> 134
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 9
9999 mem: storing 29 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 29
9998 run: address to copy to is 1074
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 134 -> 133
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 2
9999 mem: storing 3 in location 1238
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 105 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 3
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 133 -> 134
9999 mem: storing 1008 in location 1164
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1165
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 3
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1219
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1219: 4 -> 5
9999 mem: storing 1219 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1219
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 10
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1223: 1 -> 2
9999 mem: storing 1223 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1223
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: decrementing refcount of 1219: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1223
9999 mem: storing 1223 in location 1235
 105 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1215: 6 -> 7
9999 mem: storing 1215 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1215
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 101
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1219: 4 -> 5
9999 mem: storing 1219 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1219
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 7 -> 6
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1236
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1223
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 105 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1235 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1246
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 102
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1466
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 102
9999 mem: storing 0 in location 1468
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 102
9999 mem: storing 0 in location 1471
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1247
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 102
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 134 -> 135
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 102
  90 print-character: 102
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 102
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 0
9999 mem: storing 30 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 102
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 102
9999 mem: location 1272 is 7
9999 mem: storing 102 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 30
9998 run: address to copy to is 1076
9999 mem: location 1289 is 102
9999 mem: location 1290 is 7
9999 mem: storing 102 in location 1076
9999 mem: storing 7 in location 1077
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 135 -> 134
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1223
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1223: 2 -> 3
9999 mem: storing 1223 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1223
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1185 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1225 is 0
9999 mem: location 1186 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 0
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1223
9999 mem: skipping refcount at 1223
9999 mem: decrementing refcount of 1223: 3 -> 2
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1235
 105 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1219
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1219: 5 -> 6
9999 mem: storing 1219 in location 1185
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1219
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 10
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1223: 2 -> 3
9999 mem: storing 1223 in location 1186
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1223
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: decrementing refcount of 1219: 6 -> 5
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1223
9999 mem: storing 1223 in location 1236
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jumping to instruction 70
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1235 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1151
9999 mem: location 1151 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 6 -> 5
9999 mem: storing 0 in location 1151
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 105 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1251
 105 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1244 is 0
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1252
 105 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1253
 105 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: storing 0 in location 1254
 105 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 82
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1238 is 3
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1155
9999 mem: storing 3 in location 1155
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1240 is 1
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1156
9999 mem: storing 1 in location 1156
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1241 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1242 is 1203
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1203
9999 mem: skipping refcount at 1203
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1203 in location 1152
 105 run: return {row: "number"}, {column: "number"}, {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1238 is 3
9999 mem: location 1239 is 1
9999 mem: location 1230 is 1008
9999 mem: location 1231 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 134 -> 133
9999 mem: storing 0 in location 1230
9999 mem: clearing editor:address:editor-data
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 8 -> 7
9999 mem: storing 0 in location 1231
9999 mem: clearing left:number
9999 mem: storing 0 in location 1232
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1233
9999 mem: clearing right:number
9999 mem: storing 0 in location 1234
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1236 is 1223
9999 mem: skipping refcount at 1223
9999 mem: decrementing refcount of 1223: 3 -> 2
9999 mem: storing 0 in location 1236
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing color:number
9999 mem: storing 0 in location 1237
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1242 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 0 in location 1242
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing off-screen?:boolean
9999 mem: storing 0 in location 1243
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing at-cursor?:boolean
9999 mem: storing 0 in location 1245
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: clearing c:character
9999 mem: storing 0 in location 1246
9999 mem: clearing color
9999 mem: storing 0 in location 1237
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1247
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing left-of-cursor?:boolean
9999 mem: storing 0 in location 1248
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev
9999 mem: location 1236 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1236
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1249
9999 mem: clearing wrap-icon:character
9999 mem: storing 0 in location 1250
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev
9999 mem: location 1236 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1236
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing cursor-outside-line?:boolean
9999 mem: storing 0 in location 1251
9999 mem: clearing before-cursor-on-same-line?:boolean
9999 mem: storing 0 in location 1252
9999 mem: clearing above-cursor-row?:boolean
9999 mem: storing 0 in location 1253
9999 mem: clearing before-cursor?:boolean
9999 mem: storing 0 in location 1254
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: automatically abandoning 1227
9999 abandon: updating refcounts inside 1227: (array number)
9999 abandon: saving 1227 in free-list of size 28
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 3 in location 1146
9999 mem: storing 1 in location 1147
 104 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1142 is 1008
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 133 -> 134
9999 mem: storing 1008 in location 1119
 105 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 105 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 134 -> 135
9999 mem: storing 1008 in location 1164
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1165
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 106 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 135 -> 134
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 134 -> 135
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 1
9999 mem: storing 31 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 31
9998 run: address to copy to is 1078
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 135 -> 136
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 2
9999 mem: storing 32 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 32
9998 run: address to copy to is 1080
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 136 -> 137
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
9990 schedule: print/clear-line-until/editor-render/editor-event-loop/scenario_editor-can-undo-ctrl-f
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 3
9999 mem: storing 33 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 33
9998 run: address to copy to is 1082
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 137 -> 138
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 4
9999 mem: storing 34 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 34
9998 run: address to copy to is 1084
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 138 -> 139
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 5
9999 mem: storing 35 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 35
9998 run: address to copy to is 1086
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 139 -> 140
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 6
9999 mem: storing 36 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 36
9998 run: address to copy to is 1088
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 140 -> 141
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 7
9999 mem: storing 37 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 37
9998 run: address to copy to is 1090
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 141 -> 142
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 8
9999 mem: storing 38 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 38
9998 run: address to copy to is 1092
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 142 -> 143
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 9
9999 mem: storing 39 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 39
9998 run: address to copy to is 1094
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 143 -> 142
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1146 is 3
9999 mem: storing 4 in location 1146
 104 run: draw-horizontal {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1142 is 1008
9999 mem: location 1146 is 4
9999 mem: location 1144 is 0
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
9999 mem: storing 12 in location 1294
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1008: 142 -> 143
9999 mem: storing 1008 in location 1296
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1297
 105 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1298
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1299
 105 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1300
9999 mem: storing 1 in location 1301
 105 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 1
9998 run: jumping to instruction 9
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1302
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1304
 105 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1297 is 4
9999 mem: location 1298 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 143 -> 144
9999 mem: storing 1008 in location 1164
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1165
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 4
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1296
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 0
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 0
9999 mem: storing 40 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 40
9998 run: address to copy to is 1096
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1096
9999 mem: storing 245 in location 1097
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 0
9999 mem: storing 1 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/scenario_editor-can-undo-ctrl-f
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 1
9999 mem: storing 41 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 41
9998 run: address to copy to is 1098
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1098
9999 mem: storing 245 in location 1099
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 2 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 2
9999 mem: storing 42 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 42
9998 run: address to copy to is 1100
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1100
9999 mem: storing 245 in location 1101
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 3 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 3
9999 mem: storing 43 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 43
9998 run: address to copy to is 1102
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1102
9999 mem: storing 245 in location 1103
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 4 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 4
9999 mem: storing 44 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 44
9998 run: address to copy to is 1104
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1104
9999 mem: storing 245 in location 1105
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 5 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 5
9999 mem: storing 45 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 45
9998 run: address to copy to is 1106
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1106
9999 mem: storing 245 in location 1107
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 6 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 6
9999 mem: storing 46 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 46
9998 run: address to copy to is 1108
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1108
9999 mem: storing 245 in location 1109
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 7 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 7
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 7
9999 mem: storing 47 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 47
9998 run: address to copy to is 1110
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1110
9999 mem: storing 245 in location 1111
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 7
9999 mem: storing 8 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 8
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 8
9999 mem: storing 48 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 48
9998 run: address to copy to is 1112
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1112
9999 mem: storing 245 in location 1113
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 8
9999 mem: storing 9 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 9
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1270
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/scenario_editor-can-undo-ctrl-f
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1281
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 9
9999 mem: storing 49 in location 1284
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 9480
9999 mem: storing 0 in location 1287
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 9480
9999 mem: location 1272 is 245
9999 mem: storing 9480 in location 1289
9999 mem: storing 245 in location 1290
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 49
9998 run: address to copy to is 1114
9999 mem: location 1289 is 9480
9999 mem: location 1290 is 245
9999 mem: storing 9480 in location 1114
9999 mem: storing 245 in location 1115
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 9
9999 mem: storing 10 in location 1298
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 10
9999 mem: location 1299 is 9
9999 mem: storing 0 in location 1306
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 27
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1296 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1296 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 0 in location 1296
9999 mem: clearing row:number
9999 mem: storing 0 in location 1297
9999 mem: clearing x:number
9999 mem: storing 0 in location 1298
9999 mem: clearing right:number
9999 mem: storing 0 in location 1299
9999 mem: clearing style:character
9999 mem: storing 0 in location 1300
9999 mem: clearing style-found?:boolean
9999 mem: storing 0 in location 1301
9999 mem: clearing style
9999 mem: storing 0 in location 1300
9999 mem: clearing color:number
9999 mem: storing 0 in location 1302
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1303
9999 mem: clearing color
9999 mem: storing 0 in location 1302
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1304
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1305
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1304
9999 mem: clearing screen
9999 mem: location 1296 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1296
9999 mem: clearing continue?:boolean
9999 mem: storing 0 in location 1306
9999 mem: clearing x
9999 mem: storing 0 in location 1298
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1146 is 4
9999 mem: storing 5 in location 1146
 104 run: clear-screen-from {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1142 is 1008
9999 mem: location 1146 is 5
9999 mem: location 1144 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
9999 mem: storing 6 in location 1001
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1003 is 0
9999 mem: incrementing refcount of 1008: 143 -> 144
9999 mem: storing 1008 in location 1003
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 105 run: jump-if {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 105 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1164
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1165
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 5
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1003
 105 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 145 -> 146
9999 mem: storing 1008 in location 1119
 106 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 106 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 146 -> 147
9999 mem: storing 1008 in location 1164
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1165
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1166
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 5
9999 mem: location 1166 is 0
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 147 -> 146
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9998 run: result 1 is 0
9999 mem: storing 0 in location 1121
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 0
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 146 -> 147
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 147 -> 148
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 148 -> 149
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 149 -> 150
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 150 -> 151
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 151 -> 152
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 152 -> 153
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 153 -> 154
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 154 -> 155
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 155 -> 156
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 156 -> 155
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: clear-rest-of-screen {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1307
9999 mem: storing 7 in location 1308
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1310 is 0
9999 mem: incrementing refcount of 1008: 155 -> 156
9999 mem: storing 1008 in location 1310
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1311
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1313
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1311 is 5
9999 mem: storing 6 in location 1311
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 6
9999 mem: location 1312 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 156 -> 157
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 6
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1310
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: storing 3 in location 1183
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 157 -> 158
9999 mem: storing 1008 in location 1185
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1186
 107 run: return {height: "number"}
9999 mem: location 1186 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1314
 106 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1311 is 6
9999 mem: location 1314 is 5
9999 mem: storing 1 in location 1315
 106 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 1
9998 run: jumping to instruction 15
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1310 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1310 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 0 in location 1310
9999 mem: clearing row:number
9999 mem: storing 0 in location 1311
9999 mem: clearing left:number
9999 mem: storing 0 in location 1312
9999 mem: clearing right:number
9999 mem: storing 0 in location 1313
9999 mem: clearing row
9999 mem: storing 0 in location 1311
9999 mem: clearing screen
9999 mem: location 1310 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1310
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1314
9999 mem: clearing at-bottom-of-screen?:boolean
9999 mem: storing 0 in location 1315
9999 mem: clearing screen
9999 mem: location 1310 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1310
9999 mem: clearing row
9999 mem: storing 0 in location 1311
9999 mem: automatically abandoning 1307
9999 abandon: updating refcounts inside 1307: (array number)
9999 abandon: saving 1307 in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 156 -> 155
9999 mem: storing 0 in location 1003
9999 mem: clearing row:number
9999 mem: storing 0 in location 1004
9999 mem: clearing column:number
9999 mem: storing 0 in location 1005
9999 mem: clearing left:number
9999 mem: storing 0 in location 1006
9999 mem: clearing right:number
9999 mem: storing 0 in location 1007
9999 mem: clearing screen
9999 mem: location 1003 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1003
9999 mem: automatically abandoning 1000
9999 abandon: updating refcounts inside 1000: (array number)
9999 abandon: saving 1000 in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1142 is 1008
9999 mem: location 1143 is 1148
9999 mem: clearing editor:address:editor-data
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 7 -> 6
9999 mem: storing 0 in location 1143
9999 mem: clearing left:number
9999 mem: storing 0 in location 1144
9999 mem: clearing right:number
9999 mem: storing 0 in location 1145
9999 mem: clearing row:number
9999 mem: storing 0 in location 1146
9999 mem: clearing column:number
9999 mem: storing 0 in location 1147
9999 mem: clearing row
9999 mem: storing 0 in location 1146
9999 mem: clearing row
9999 mem: storing 0 in location 1146
9999 mem: automatically abandoning 1139
9999 abandon: updating refcounts inside 1139: (array number)
9999 abandon: saving 1139 in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1328
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1331
 103 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1332
 103 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 1
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 155 -> 156
9999 mem: storing 1008 in location 1164
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1328
 103 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1329 is 1322
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
9999 mem: storing 12 in location 1294
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1322: 3 -> 4
9999 mem: storing 1322 in location 1296
 104 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1322
9998 run: jump-unless fell through
 104 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 1
9999 mem: location 1324 is 1316
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1323
9998 run: its type is "number"
9999 mem: location 1323 is 1
9999 mem: storing 1 in location 1297
 104 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9999 mem: location 1323 is 1
9999 mem: location 1324 is 1316
9999 mem: location 1296 is 1322
9999 mem: skipping refcount at 1322
9998 run: address to copy is 1324
9998 run: its type is ("address" "array" "event")
9999 mem: location 1324 is 1316
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1316: 1 -> 2
9999 mem: storing 1316 in location 1298
 104 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: storing 1 in location 1299
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 1
9999 mem: location 1299 is 1
9999 mem: storing 1 in location 1300
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 104 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: location 1301 is 0
9999 mem: incrementing refcount of 1182: 0 -> 1
9999 mem: storing 1182 in location 1301
 104 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1301 is 1182
9999 mem: skipping refcount at 1182
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1296 is 1322
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: decrementing refcount of 1316: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing result
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing result:event
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1322
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 1322 in location 1329
9999 mem: storing 1 in location 1337
9999 mem: storing 1 in location 1338
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 1
9998 run: jumping to instruction 28
 103 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1328 is 1008
9999 mem: location 1329 is 1322
9999 mem: location 1330 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1328 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 156 -> 155
9999 mem: storing 0 in location 1328
9999 mem: clearing console:address:console
9999 mem: location 1329 is 1322
9999 mem: skipping refcount at 1322
9999 mem: decrementing refcount of 1322: 4 -> 3
9999 mem: storing 0 in location 1329
9999 mem: clearing editor:address:editor-data
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 6 -> 5
9999 mem: storing 0 in location 1330
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1331
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1332
9999 mem: clearing screen
9999 mem: location 1328 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1328
9999 mem: clearing e:event
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: clearing console:address:console
9999 mem: location 1329 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1329
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1337
9999 mem: clearing quit?:boolean
9999 mem: storing 0 in location 1338
9999 mem: clearing t:touch-event
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: clearing is-touch?:boolean
9999 mem: storing 0 in location 1342
9999 mem: clearing screen
9999 mem: location 1328 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1328
9999 mem: clearing editor
9999 mem: location 1330 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1330
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1343
9999 mem: clearing screen
9999 mem: location 1328 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1328
9999 mem: automatically abandoning 1325
9999 abandon: updating refcounts inside 1325: (array number)
9999 abandon: saving 1325 in free-list of size 19
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'press' event starting at 1476
9999 mem: storing console in 1480
9999 mem: storing console data in 1482
 102 run: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9992 transform: --- compute address offsets for run_1001
9993 transform: - compute address offsets for editor-event-loop {screen: ("address" "screen"), "raw": ()}, {console: ("address" "console"), "raw": ()}, {2: ("address" "editor-data")}
9993 transform: - compute address offsets for {3: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 transform: - compute address offsets for {4: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9993 transform: - compute address offsets for reply 
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "screen"), "raw": ()}, {console: ("address" "console"), "raw": ()}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1480
9999 mem: location 2 is 1148
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
9999 mem: new alloc from free list: 1325
9999 mem: storing 17 in location 1326
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1328 is 0
9999 mem: incrementing refcount of 1008: 155 -> 156
9999 mem: storing 1008 in location 1328
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1329 is 0
9999 mem: incrementing refcount of 1480: 1 -> 2
9999 mem: storing 1480 in location 1329
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1330 is 0
9999 mem: incrementing refcount of 1148: 5 -> 6
9999 mem: storing 1148 in location 1330
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1331
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1332
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 1
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 156 -> 157
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1328
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1329 is 1480
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
9999 mem: storing 12 in location 1294
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1480: 2 -> 3
9999 mem: storing 1480 in location 1296
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1480
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9999 mem: location 1481 is 0
9999 mem: location 1482 is 1474
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1481
9998 run: its type is "number"
9999 mem: location 1481 is 0
9999 mem: storing 0 in location 1297
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9999 mem: location 1481 is 0
9999 mem: location 1482 is 1474
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1482
9998 run: its type is ("address" "array" "event")
9999 mem: location 1482 is 1474
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1474: 1 -> 2
9999 mem: storing 1474 in location 1298
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1474
9999 mem: skipping refcount at 1474
9999 mem: storing 1 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 0
9999 mem: location 1299 is 1
9999 mem: storing 0 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1474
9999 mem: skipping refcount at 1474
9998 run: base address is 1475
9999 mem: location 1297 is 0
9998 run: address to copy is 1476
9998 run: its type is event
9999 mem: location 1476 is 0
9999 mem: location 1477 is 26
9999 mem: location 1478 is 0
9999 mem: location 1479 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 26 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 0
9999 mem: storing 1 in location 1297
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9999 mem: location 1481 is 0
9999 mem: location 1482 is 1474
9999 mem: location 1297 is 1
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy to is 1481
9999 mem: storing 1 in location 1481
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 0
9999 mem: location 1303 is 26
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1480
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1474
9999 mem: skipping refcount at 1474
9999 mem: decrementing refcount of 1474: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing dummy:address:event
9999 mem: location 1301 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1301
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1480
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1333
9999 mem: storing 26 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 1480 in location 1329
9999 mem: storing 1 in location 1337
9999 mem: storing 0 in location 1338
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1333 is 0
9999 mem: location 1334 is 26
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1342
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1148
9999 mem: location 1333 is 0
9999 mem: location 1334 is 26
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1344
9999 mem: storing 102 in location 1345
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1347 is 0
9999 mem: incrementing refcount of 1008: 157 -> 158
9999 mem: storing 1008 in location 1347
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1348 is 0
9999 mem: incrementing refcount of 1148: 6 -> 7
9999 mem: storing 1148 in location 1348
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1349
9999 mem: storing 26 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1353
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1348 is 1148
9998 run: jumping to instruction 8
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1347 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1483
9999 mem: storing 0 in location 1483
9999 mem: storing 0 in location 1484
9999 mem: storing 0 in location 1485
9999 mem: storing 0 in location 1486
9999 mem: storing 0 in location 1487
9999 mem: storing 3 in location 1484
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1008: 158 -> 159
9999 mem: storing 1008 in location 1486
9990 schedule: screen-width/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1486 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1487
 106 run: return {width: "number"}
9999 mem: location 1487 is 10
9999 mem: clearing screen:address:screen
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 159 -> 158
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1354
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1347 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1008: 158 -> 159
9999 mem: storing 1008 in location 1486
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1486 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1487
 106 run: return {height: "number"}
9999 mem: location 1487 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 159 -> 158
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1355
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1356
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1357
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1203
9999 mem: location 1358 is 0
9999 mem: incrementing refcount of 1203: 12 -> 13
9999 mem: storing 1203 in location 1358
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1359
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1360
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1359 is 1
9999 mem: storing 1 in location 1361
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1362
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1349 is 0
9999 mem: location 1350 is 26
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 1 in location 1364
9999 mem: storing 26 in location 1363
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1363 is 26
9999 mem: storing 0 in location 1365
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 73
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1363 is 26
9999 mem: storing 1 in location 1403
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1159 is 1459
9999 mem: location 1368 is 0
9999 mem: incrementing refcount of 1459: 1 -> 2
9999 mem: storing 1459 in location 1368
 105 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1368 is 1459
9998 run: jump-unless fell through
 105 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1368 is 1459
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1459: 2 -> 3
9999 mem: storing 1459 in location 1486
 106 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1486 is 1459
9999 mem: skipping refcount at 1459
9999 mem: location 1460 is 1255
9999 mem: location 1461 is 0
9999 mem: location 1486 is 1459
9999 mem: skipping refcount at 1459
9998 run: address to copy is 1460
9998 run: its type is ("address" "operation")
9999 mem: location 1460 is 1255
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1255: 1 -> 2
9999 mem: storing 1255 in location 1487
 106 run: reply {result: ("address" "operation")}
9999 mem: location 1487 is 1255
9999 mem: clearing in:address:list:_elem
9999 mem: location 1486 is 1459
9999 mem: skipping refcount at 1459
9999 mem: decrementing refcount of 1459: 3 -> 2
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1255
9999 mem: storing 1255 in location 1367
 105 run: {undo: ("address" "list" "address" "operation")} <- rest_2 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1368 is 1459
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1459: 2 -> 3
9999 mem: storing 1459 in location 1486
 106 run: {result: ("address" "list" "address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1459
9999 mem: skipping refcount at 1459
9999 mem: location 1460 is 1255
9999 mem: location 1461 is 0
9999 mem: location 1486 is 1459
9999 mem: skipping refcount at 1459
9998 run: address to copy is 1461
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1461 is 0
9999 mem: location 1487 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1487
 106 run: reply {result: ("address" "list" "address" "operation"), "contained-in": "in"}
9999 mem: location 1487 is 0
9999 mem: clearing in:address:list:_elem
9999 mem: location 1486 is 1459
9999 mem: skipping refcount at 1459
9999 mem: decrementing refcount of 1459: 3 -> 2
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1368
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1459
9999 mem: location 1160 is 0
9999 mem: location 1368 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1159
9999 mem: location 1159 is 1459
9999 mem: skipping refcount at 1459
9999 mem: decrementing refcount of 1459: 2 -> 1
9999 mem: storing 0 in location 1159
 105 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1160
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1160 is 0
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
 105 run: {redo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1367 is 1255
9999 mem: location 1366 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 106 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1255: 2 -> 3
9999 mem: storing 1255 in location 1164
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1165 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1165
 106 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1488
9999 mem: storing 0 in location 1488
9999 mem: storing 0 in location 1489
9999 mem: storing 0 in location 1490
9999 mem: location 1166 is 0
9999 mem: incrementing refcount of 1488: 0 -> 1
9999 mem: storing 1488 in location 1166
 106 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1255
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1488
9999 mem: skipping refcount at 1488
9999 mem: location 1166 is 1488
9999 mem: skipping refcount at 1488
9999 mem: incrementing refcount of 1255: 3 -> 4
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1255 in location 1489
9999 mem: storing 0 in location 1490
 106 run: reply {result: ("address" "list" "address" "operation")}
9999 mem: location 1166 is 1488
9999 mem: clearing x:_elem
9999 mem: location 1164 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 4 -> 3
9999 mem: storing 0 in location 1164
9999 mem: clearing in:address:list:_elem
9999 mem: location 1165 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1488
9999 mem: storing 1488 in location 1366
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1366 is 1488
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1160
9999 mem: location 1160 is 0
9999 mem: incrementing refcount of 1488: 1 -> 2
9999 mem: storing 1488 in location 1160
 105 run: {deletion: "delete-operation"}, {is-delete?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1167
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 1203
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: storing 0 in location 1379
 105 run: jump-unless {is-delete?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 101
 105 run: {move: "move-operation"}, {is-move?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1167
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 1203
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: storing 1 in location 1391
9999 mem: incrementing refcount of 1167: 9 -> 10
9999 mem: incrementing refcount of 1203: 13 -> 14
9999 mem: storing 1 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 1167 in location 1386
9999 mem: storing 1 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 1203 in location 1389
9999 mem: storing 0 in location 1390
 105 run: jump-unless {is-move?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row: "number"} <- get {move: "move-operation"}, {before-row: "offset"}
9999 mem: location 1384 is 1
9999 mem: location 1385 is 0
9999 mem: location 1386 is 1167
9999 mem: location 1387 is 1
9999 mem: location 1388 is 0
9999 mem: location 1389 is 1203
9999 mem: location 1390 is 0
9998 run: address to copy is 1384
9998 run: its type is "number"
9999 mem: location 1384 is 1
9999 mem: storing 1 in location 1359
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1359 is 1
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1156
9999 mem: storing 1 in location 1156
 105 run: {cursor-column: "number"} <- get {move: "move-operation"}, {before-column: "offset"}
9999 mem: location 1384 is 1
9999 mem: location 1385 is 0
9999 mem: location 1386 is 1167
9999 mem: location 1387 is 1
9999 mem: location 1388 is 0
9999 mem: location 1389 is 1203
9999 mem: location 1390 is 0
9998 run: address to copy is 1385
9998 run: its type is "number"
9999 mem: location 1385 is 0
9999 mem: storing 0 in location 1360
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1360 is 0
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 105 run: {top: ("address" "duplex-list" "character")} <- get {move: "move-operation"}, {before-top-of-screen: "offset"}
9999 mem: location 1384 is 1
9999 mem: location 1385 is 0
9999 mem: location 1386 is 1167
9999 mem: location 1387 is 1
9999 mem: location 1388 is 0
9999 mem: location 1389 is 1203
9999 mem: location 1390 is 0
9998 run: address to copy is 1386
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1386 is 1167
9999 mem: location 1383 is 0
9999 mem: incrementing refcount of 1167: 10 -> 11
9999 mem: storing 1167 in location 1383
 105 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {top: ("address" "duplex-list" "character")}
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1203
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1383 is 1167
9999 mem: location 1348 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1150
9999 mem: location 1150 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 14 -> 13
9999 mem: incrementing refcount of 1167: 11 -> 12
9999 mem: storing 1167 in location 1150
 105 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1167
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 1203
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: storing 0 in location 1401
 105 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jumping to instruction 126
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1347 is 1008
9999 mem: location 1348 is 1148
9999 mem: clearing e:event
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing screen-width:number
9999 mem: storing 0 in location 1354
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1355
9999 mem: clearing left:number
9999 mem: storing 0 in location 1356
9999 mem: clearing right:number
9999 mem: storing 0 in location 1357
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 0 in location 1358
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing save-row:number
9999 mem: storing 0 in location 1361
9999 mem: clearing save-column:number
9999 mem: storing 0 in location 1362
9999 mem: clearing c:character
9999 mem: storing 0 in location 1363
9999 mem: clearing is-unicode?:boolean
9999 mem: storing 0 in location 1364
9999 mem: clearing redo?:boolean
9999 mem: storing 0 in location 1365
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1366 is 1488
9999 mem: skipping refcount at 1488
9999 mem: decrementing refcount of 1488: 2 -> 1
9999 mem: storing 0 in location 1366
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 3 -> 2
9999 mem: storing 0 in location 1367
9999 mem: clearing redo
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing undo
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1379
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1380 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1380
9999 mem: clearing end:address:duplex-list:character
9999 mem: location 1381 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1381
9999 mem: clearing data:address:duplex-list:character
9999 mem: location 1382 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1382
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 12 -> 11
9999 mem: storing 0 in location 1383
9999 mem: clearing move:move-operation
9999 mem: decrementing refcount of 1167: 11 -> 10
9999 mem: decrementing refcount of 1203: 12 -> 11
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1401
9999 mem: clearing before-cursor
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1402 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1402
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing undo?:boolean
9999 mem: storing 0 in location 1403
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing undo
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing redo
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1379
9999 mem: clearing anchor:address:duplex-list:character
9999 mem: location 1404 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1404
9999 mem: clearing deleted:address:duplex-list:character
9999 mem: location 1405 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1405
9999 mem: clearing old-cursor:address:duplex-list:character
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing before-cursor
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1401
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1380 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1380
9999 mem: clearing end:address:duplex-list:character
9999 mem: location 1381 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1381
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1360
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1383 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1383
9999 mem: clearing page-up?:boolean
9999 mem: storing 0 in location 1407
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1416 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1416
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1417
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing page-down?:boolean
9999 mem: storing 0 in location 1418
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1416 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1416
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1417
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing delete-to-end-of-line?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing deleted-cells:address:duplex-list:character
9999 mem: location 1420 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1420
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing delete-to-start-of-line?:boolean
9999 mem: storing 0 in location 1422
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing deleted-cells:address:duplex-list:character
9999 mem: location 1420 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1420
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing move-to-end-of-line?:boolean
9999 mem: storing 0 in location 1423
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing move-to-start-of-line?:boolean
9999 mem: storing 0 in location 1424
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing delete-previous-character?:boolean
9999 mem: storing 0 in location 1425
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1353
9999 mem: clearing backspaced-cell:address:duplex-list:character
9999 mem: location 1426 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1426
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1379
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing backspaced-so-far:address:duplex-list:character
9999 mem: location 1427 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1427
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing tab?:boolean
9999 mem: storing 0 in location 1428
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1429 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1429
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1353
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1353
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1401
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing insert-until:address:duplex-list:character
9999 mem: location 1430 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1430
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1402 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1402
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1431 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1431
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1432
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1429 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1429
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1402 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1402
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1431 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1431
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing regular-character?:boolean
9999 mem: storing 0 in location 1433
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1429 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1429
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1353
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1401
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing insert-until:address:duplex-list:character
9999 mem: location 1430 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1430
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1402 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1402
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1431 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1431
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing k:number
9999 mem: storing 0 in location 1434
9999 mem: clearing is-keycode?:boolean
9999 mem: storing 0 in location 1435
9999 mem: clearing page-up?:boolean
9999 mem: storing 0 in location 1407
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1416 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1416
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1417
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing page-down?:boolean
9999 mem: storing 0 in location 1418
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1416 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1416
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1417
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing move-to-end-of-line?:boolean
9999 mem: storing 0 in location 1423
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing move-to-start-of-line?:boolean
9999 mem: storing 0 in location 1424
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing move-to-next-line?:boolean
9999 mem: storing 0 in location 1436
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-previous-line?:boolean
9999 mem: storing 0 in location 1437
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-previous-character?:boolean
9999 mem: storing 0 in location 1438
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1439 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1439
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing before-cursor
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move-to-next-character?:boolean
9999 mem: storing 0 in location 1440
9999 mem: clearing next-cursor:address:duplex-list:character
9999 mem: location 1441 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1441
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1409
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1410
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing before-cursor
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1353
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1412
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1391
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing delete-next-character?:boolean
9999 mem: storing 0 in location 1442
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1411 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1411
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1353
9999 mem: clearing deleted-cell:address:duplex-list:character
9999 mem: location 1443 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1443
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1413 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1413
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1358 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1358
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1379
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1414
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1415
9999 mem: clearing delete-until:address:duplex-list:character
9999 mem: location 1444 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1444
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deleted-so-far:address:duplex-list:character
9999 mem: location 1445 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1445
9999 mem: clearing deleted-so-far
9999 mem: location 1445 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1445
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: clearing op:address:operation
9999 mem: location 1367 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1367
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing paste-end?:boolean
9999 mem: storing 0 in location 1446
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing paste-start?:boolean
9999 mem: storing 0 in location 1447
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: clearing go-render?
9999 mem: storing 0 in location 1353
9999 mem: automatically abandoning 1344
9999 abandon: updating refcounts inside 1344: (array number)
9999 abandon: saving 1344 in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1148
9998 run: result 2 is 1
9999 mem: storing 1008 in location 1328
9999 mem: storing 1148 in location 1330
9999 mem: storing 1 in location 1343
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen")} <- editor-render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1328 is 1008
9999 mem: location 1330 is 1148
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1139
9999 mem: storing 7 in location 1140
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1142 is 0
9999 mem: incrementing refcount of 1008: 158 -> 159
9999 mem: storing 1008 in location 1142
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1143 is 0
9999 mem: incrementing refcount of 1148: 7 -> 8
9999 mem: storing 1148 in location 1143
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1144
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1145
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1142 is 1008
9999 mem: location 1143 is 1148
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1227
9999 mem: storing 26 in location 1228
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1230 is 0
9999 mem: incrementing refcount of 1008: 159 -> 160
9999 mem: storing 1008 in location 1230
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1231 is 0
9999 mem: incrementing refcount of 1148: 8 -> 9
9999 mem: storing 1148 in location 1231
 106 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1231 is 1148
9998 run: jumping to instruction 6
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1232
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1230 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1008: 160 -> 161
9999 mem: storing 1008 in location 1486
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1486 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1487
 107 run: return {height: "number"}
9999 mem: location 1487 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 161 -> 160
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1233
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1234
 106 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1235 is 0
9999 mem: incrementing refcount of 1167: 10 -> 11
9999 mem: storing 1167 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1167
9999 mem: location 1236 is 0
9999 mem: incrementing refcount of 1167: 11 -> 12
9999 mem: storing 1167 in location 1236
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1167: 12 -> 13
9999 mem: storing 1167 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1167
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1178: 7 -> 8
9999 mem: storing 1178 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 13 -> 12
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1235
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1238
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1240
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1241
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1203
9999 mem: location 1242 is 0
9999 mem: incrementing refcount of 1203: 11 -> 12
9999 mem: storing 1203 in location 1242
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 1
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 160 -> 161
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1178
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1241 is 0
9999 mem: storing 1 in location 1245
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1167
9999 mem: location 1242 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 12 -> 11
9999 mem: incrementing refcount of 1167: 12 -> 13
9999 mem: storing 1167 in location 1242
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1235 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1179
9998 run: its type is "character"
9999 mem: location 1179 is 97
9999 mem: storing 97 in location 1246
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1466
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 97
9999 mem: storing 0 in location 1468
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 97
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1247
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 97
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 161 -> 162
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 97
  90 print-character: 97
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 97
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 0
9999 mem: storing 10 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 97
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 97
9999 mem: location 1272 is 7
9999 mem: storing 97 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 10
9998 run: address to copy to is 1036
9999 mem: location 1289 is 97
9999 mem: location 1290 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 162 -> 161
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1178: 8 -> 9
9999 mem: storing 1178 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1178
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1486 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1187: 7 -> 8
9999 mem: storing 1187 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 9 -> 8
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1167: 13 -> 14
9999 mem: storing 1167 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1167
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1178: 8 -> 9
9999 mem: storing 1178 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 14 -> 13
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1236
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1187
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1235 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1188
9998 run: its type is "character"
9999 mem: location 1188 is 10
9999 mem: storing 10 in location 1246
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1466
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1468
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1248
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 46
 106 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 161 -> 162
9999 mem: storing 1008 in location 1119
 107 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 107 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 162 -> 163
9999 mem: storing 1008 in location 1164
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1165
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 108 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 163 -> 162
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 162 -> 163
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 1
9999 mem: storing 11 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 11
9998 run: address to copy to is 1038
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 163 -> 164
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 2
9999 mem: storing 12 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 12
9998 run: address to copy to is 1040
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 164 -> 165
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 3
9999 mem: storing 13 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 13
9998 run: address to copy to is 1042
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 165 -> 166
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
9990 schedule: print/clear-line-until/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 4
9999 mem: storing 14 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 14
9998 run: address to copy to is 1044
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 166 -> 167
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 5
9999 mem: storing 15 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 15
9998 run: address to copy to is 1046
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 167 -> 168
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 6
9999 mem: storing 16 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 16
9998 run: address to copy to is 1048
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 168 -> 169
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 7
9999 mem: storing 17 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 17
9998 run: address to copy to is 1050
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 169 -> 170
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 8
9999 mem: storing 18 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 18
9998 run: address to copy to is 1052
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 170 -> 171
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1276 is 10
9999 mem: storing 10 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 10
9999 mem: location 1280 is 9
9999 mem: storing 19 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 19
9998 run: address to copy to is 1054
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 171 -> 170
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 2 in location 1238
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 2
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 170 -> 171
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1187: 8 -> 9
9999 mem: storing 1187 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1187
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1486 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1191: 7 -> 8
9999 mem: storing 1191 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 9 -> 8
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1178: 9 -> 10
9999 mem: storing 1178 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1178
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1486 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1187: 8 -> 9
9999 mem: storing 1187 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 10 -> 9
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1236
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1191
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1235 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 98
9999 mem: storing 98 in location 1246
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1466
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 98
9999 mem: storing 0 in location 1468
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 98
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1247
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 98
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 171 -> 172
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 98
  90 print-character: 98
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 98
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 0
9999 mem: storing 20 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 98
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 98
9999 mem: location 1272 is 7
9999 mem: storing 98 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 20
9998 run: address to copy to is 1056
9999 mem: location 1289 is 98
9999 mem: location 1290 is 7
9999 mem: storing 98 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1191: 8 -> 9
9999 mem: storing 1191 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1191
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1486 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1195: 7 -> 8
9999 mem: storing 1195 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 9 -> 8
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1187
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1187: 9 -> 10
9999 mem: storing 1187 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1187
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 10
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1486 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1191: 8 -> 9
9999 mem: storing 1191 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 10 -> 9
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1236
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1195
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1235 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is "character"
9999 mem: location 1196 is 10
9999 mem: storing 10 in location 1246
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1466
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1468
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 106 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 171 -> 172
9999 mem: storing 1008 in location 1119
 107 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 107 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 172 -> 173
9999 mem: storing 1008 in location 1164
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1165
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 108 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 2
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 173 -> 172
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 2
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 172 -> 173
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1
9999 mem: storing 21 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 21
9998 run: address to copy to is 1058
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 173 -> 174
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 2
9999 mem: storing 22 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 22
9998 run: address to copy to is 1060
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 174 -> 175
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 3
9999 mem: storing 23 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 23
9998 run: address to copy to is 1062
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 175 -> 176
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 4
9999 mem: storing 24 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 24
9998 run: address to copy to is 1064
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 176 -> 177
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 5
9999 mem: storing 25 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 25
9998 run: address to copy to is 1066
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 177 -> 178
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 6
9999 mem: storing 26 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 26
9998 run: address to copy to is 1068
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 178 -> 179
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 7
9999 mem: storing 27 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 27
9998 run: address to copy to is 1070
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
9990 schedule: print/clear-line-until/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 179 -> 180
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 8
9999 mem: storing 28 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 28
9998 run: address to copy to is 1072
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 180 -> 181
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 9
9999 mem: storing 29 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 29
9998 run: address to copy to is 1074
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 181 -> 180
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 2
9999 mem: storing 3 in location 1238
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 3
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 180 -> 181
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 3
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1195: 8 -> 9
9999 mem: storing 1195 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1195
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1486 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1199: 7 -> 8
9999 mem: storing 1199 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 9 -> 8
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1191: 9 -> 10
9999 mem: storing 1191 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1191
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 98
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1486 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1195: 8 -> 9
9999 mem: storing 1195 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 10 -> 9
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1236
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1199
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1235 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1246
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1466
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 99
9999 mem: storing 0 in location 1468
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 99
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1247
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 99
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 181 -> 182
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 99
  90 print-character: 99
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 99
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 0
9999 mem: storing 30 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 99
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 99
9999 mem: location 1272 is 7
9999 mem: storing 99 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 30
9998 run: address to copy to is 1076
9999 mem: location 1289 is 99
9999 mem: location 1290 is 7
9999 mem: storing 99 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 182 -> 181
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1199: 8 -> 9
9999 mem: storing 1199 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1199
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1486 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1203: 11 -> 12
9999 mem: storing 1203 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 9 -> 8
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1195: 9 -> 10
9999 mem: storing 1195 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1195
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1486 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1199: 8 -> 9
9999 mem: storing 1199 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 10 -> 9
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1236
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1203
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1235 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 10
9999 mem: storing 10 in location 1246
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1466
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1468
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 3
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 106 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 181 -> 182
9999 mem: storing 1008 in location 1119
 107 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 107 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 182 -> 183
9999 mem: storing 1008 in location 1164
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1165
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 108 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 183 -> 182
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 182 -> 183
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 1
9999 mem: storing 31 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 31
9998 run: address to copy to is 1078
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 183 -> 184
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 2
9999 mem: storing 32 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 32
9998 run: address to copy to is 1080
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 184 -> 185
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 3
9999 mem: storing 33 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
9990 schedule: print/clear-line-until/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 33
9998 run: address to copy to is 1082
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 185 -> 186
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 4
9999 mem: storing 34 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 34
9998 run: address to copy to is 1084
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 186 -> 187
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 5
9999 mem: storing 35 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 35
9998 run: address to copy to is 1086
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 187 -> 188
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 6
9999 mem: storing 36 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 36
9998 run: address to copy to is 1088
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 188 -> 189
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 7
9999 mem: storing 37 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 37
9998 run: address to copy to is 1090
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 189 -> 190
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 8
9999 mem: storing 38 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 38
9998 run: address to copy to is 1092
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 190 -> 191
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1276 is 10
9999 mem: storing 30 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 30
9999 mem: location 1280 is 9
9999 mem: storing 39 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 39
9998 run: address to copy to is 1094
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 191 -> 190
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 3
9999 mem: storing 4 in location 1238
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 4
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 190 -> 191
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 4
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1203: 12 -> 13
9999 mem: storing 1203 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1203
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1486 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1207: 10 -> 11
9999 mem: storing 1207 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1199: 9 -> 10
9999 mem: storing 1199 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1199
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1486 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1203: 12 -> 13
9999 mem: storing 1203 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 10 -> 9
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1236
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1207
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1235 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 100
9999 mem: storing 100 in location 1246
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1466
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 100
9999 mem: storing 0 in location 1468
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 100
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1247
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1234 is 9
9999 mem: storing 0 in location 1249
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1246 is 100
9999 mem: location 1237 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 191 -> 192
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 100
  90 print-character: 100
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 0
9999 mem: storing 40 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 100
9999 mem: location 1272 is 7
9999 mem: storing 100 in location 1289
9999 mem: storing 7 in location 1290
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 40
9998 run: address to copy to is 1096
9999 mem: location 1289 is 100
9999 mem: location 1290 is 7
9999 mem: storing 100 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 192 -> 191
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1207: 11 -> 12
9999 mem: storing 1207 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1207
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1486 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1211: 8 -> 9
9999 mem: storing 1211 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 12 -> 11
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1203: 13 -> 14
9999 mem: storing 1203 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1203
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1486 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1207: 11 -> 12
9999 mem: storing 1207 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 14 -> 13
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1236
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1239 is 0
9999 mem: storing 1 in location 1239
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1211
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1233 is 5
9999 mem: storing 0 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1235 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1235 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1246
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1237 is 7
9999 mem: location 1246 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1462
9999 mem: storing 10 in location 1463
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1465
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1466
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1465 is 7
9999 mem: storing 1 in location 1467
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1468
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1469
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1466 is 10
9999 mem: storing 0 in location 1471
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1465 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1465 is 7
9999 mem: clearing c:character
9999 mem: storing 0 in location 1466
9999 mem: clearing color-is-white?:boolean
9999 mem: storing 0 in location 1467
9999 mem: clearing starting-comment?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing color-is-blue?:boolean
9999 mem: storing 0 in location 1469
9999 mem: clearing ending-comment?:boolean
9999 mem: storing 0 in location 1470
9999 mem: clearing starting-assignment?:boolean
9999 mem: storing 0 in location 1471
9999 mem: clearing color-is-red?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing ending-assignment?:boolean
9999 mem: storing 0 in location 1473
9999 mem: automatically abandoning 1462
9999 abandon: updating refcounts inside 1462: (array number)
9999 abandon: saving 1462 in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1237
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1247
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 4
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jumping to instruction 46
 106 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1234 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 191 -> 192
9999 mem: storing 1008 in location 1119
 107 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 107 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 192 -> 193
9999 mem: storing 1008 in location 1164
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1165
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1166
 108 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 4
9999 mem: location 1166 is 1
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 193 -> 192
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9998 run: result 1 is 1
9999 mem: storing 1 in location 1121
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 192 -> 193
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 1
9999 mem: storing 41 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 41
9998 run: address to copy to is 1098
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 193 -> 194
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 2
9999 mem: storing 42 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 42
9998 run: address to copy to is 1100
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 194 -> 195
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 3
9999 mem: storing 43 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 43
9998 run: address to copy to is 1102
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 195 -> 196
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 4
9999 mem: storing 44 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 44
9998 run: address to copy to is 1104
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 4
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 4
9999 mem: storing 5 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 5
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 196 -> 197
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 5
9999 mem: storing 45 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 45
9998 run: address to copy to is 1106
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 5
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 5
9999 mem: storing 6 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 6
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 197 -> 198
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 6
9999 mem: storing 46 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 46
9998 run: address to copy to is 1108
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 6
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 6
9999 mem: storing 7 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 7
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 198 -> 199
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 7
9999 mem: storing 47 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
9990 schedule: print/clear-line-until/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 47
9998 run: address to copy to is 1110
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 7
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 7
9999 mem: storing 8 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 8
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 199 -> 200
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 8
9999 mem: storing 48 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 48
9998 run: address to copy to is 1112
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 8
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 8
9999 mem: storing 9 in location 1280
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 9
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 200 -> 201
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1280
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1276 is 10
9999 mem: storing 40 in location 1284
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 40
9999 mem: location 1280 is 9
9999 mem: storing 49 in location 1284
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 32
9999 mem: storing 0 in location 1287
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 32
9999 mem: location 1272 is 7
9999 mem: storing 32 in location 1289
9999 mem: storing 7 in location 1290
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 49
9998 run: address to copy to is 1114
9999 mem: location 1289 is 32
9999 mem: location 1290 is 7
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 9
9999 mem: location 1291 is 9
9999 mem: storing 1 in location 1292
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 1
9998 run: jumping to instruction 80
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 201 -> 200
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1238 is 4
9999 mem: storing 5 in location 1238
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1239
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: location 1238 is 5
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 200 -> 201
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 5
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1230
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1235 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1211: 9 -> 10
9999 mem: storing 1211 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1211
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1486 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1215: 5 -> 6
9999 mem: storing 1215 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1215
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 10 -> 9
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1235
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1207: 12 -> 13
9999 mem: storing 1207 in location 1486
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1207
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1486 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1486 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1487 is 0
9999 mem: incrementing refcount of 1211: 9 -> 10
9999 mem: storing 1211 in location 1487
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1487 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1486 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 13 -> 12
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1236
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1235 is 1215
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1233 is 5
9999 mem: storing 1 in location 1243
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 70
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1235 is 1215
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1151
9999 mem: location 1151 is 0
9999 mem: incrementing refcount of 1215: 6 -> 7
9999 mem: storing 1215 in location 1151
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1244
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1239 is 0
9999 mem: location 1241 is 0
9999 mem: storing 1 in location 1251
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1244 is 0
9999 mem: location 1251 is 1
9999 mem: storing 0 in location 1252
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1238 is 5
9999 mem: location 1240 is 1
9999 mem: storing 0 in location 1253
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: storing 0 in location 1254
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 82
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1238 is 5
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1155
9999 mem: storing 5 in location 1155
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1240 is 1
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1156
9999 mem: storing 1 in location 1156
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1241 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1203
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1242 is 1167
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: incrementing refcount of 1167: 13 -> 14
9999 mem: storing 1167 in location 1152
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1238 is 5
9999 mem: location 1239 is 0
9999 mem: location 1230 is 1008
9999 mem: location 1231 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 201 -> 200
9999 mem: storing 0 in location 1230
9999 mem: clearing editor:address:editor-data
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 9 -> 8
9999 mem: storing 0 in location 1231
9999 mem: clearing left:number
9999 mem: storing 0 in location 1232
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1233
9999 mem: clearing right:number
9999 mem: storing 0 in location 1234
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1235 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 7 -> 6
9999 mem: storing 0 in location 1235
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1236 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 10 -> 9
9999 mem: storing 0 in location 1236
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing color:number
9999 mem: storing 0 in location 1237
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1242 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 14 -> 13
9999 mem: storing 0 in location 1242
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing off-screen?:boolean
9999 mem: storing 0 in location 1243
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing at-cursor?:boolean
9999 mem: storing 0 in location 1245
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: clearing c:character
9999 mem: storing 0 in location 1246
9999 mem: clearing color
9999 mem: storing 0 in location 1237
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1247
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing left-of-cursor?:boolean
9999 mem: storing 0 in location 1248
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev
9999 mem: location 1236 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1236
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1249
9999 mem: clearing wrap-icon:character
9999 mem: storing 0 in location 1250
9999 mem: clearing screen
9999 mem: location 1230 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1230
9999 mem: clearing curr
9999 mem: location 1235 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1235
9999 mem: clearing prev
9999 mem: location 1236 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1236
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing cursor-outside-line?:boolean
9999 mem: storing 0 in location 1251
9999 mem: clearing before-cursor-on-same-line?:boolean
9999 mem: storing 0 in location 1252
9999 mem: clearing above-cursor-row?:boolean
9999 mem: storing 0 in location 1253
9999 mem: clearing before-cursor?:boolean
9999 mem: storing 0 in location 1254
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1241
9999 mem: clearing before-cursor
9999 mem: location 1242 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1242
9999 mem: automatically abandoning 1227
9999 abandon: updating refcounts inside 1227: (array number)
9999 abandon: saving 1227 in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9998 run: result 1 is 0
9999 mem: storing 5 in location 1146
9999 mem: storing 0 in location 1147
 105 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1142 is 1008
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 200 -> 201
9999 mem: storing 1008 in location 1119
 106 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 106 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 201 -> 202
9999 mem: storing 1008 in location 1164
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1165
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1166
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 5
9999 mem: location 1166 is 0
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 202 -> 201
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9998 run: result 1 is 0
9999 mem: storing 0 in location 1121
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 0
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 201 -> 202
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 202 -> 203
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 203 -> 204
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 204 -> 205
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 205 -> 206
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 206 -> 207
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 207 -> 208
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 208 -> 209
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 209 -> 210
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 210 -> 211
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
9990 schedule: print/clear-line-until/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 211 -> 210
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1146 is 5
9999 mem: storing 6 in location 1146
 105 run: draw-horizontal {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1142 is 1008
9999 mem: location 1146 is 6
9999 mem: location 1144 is 0
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
9999 mem: storing 12 in location 1294
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1008: 210 -> 211
9999 mem: storing 1008 in location 1296
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1297
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1298
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1299
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1300
9999 mem: storing 1 in location 1301
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1302
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1304
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1297 is 6
9999 mem: location 1298 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 211 -> 212
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 6
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1296
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 0
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 0
9999 mem: storing 1 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 2 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 3 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 4 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 5 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 6 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 7 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 7
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 7
9999 mem: storing 8 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 8
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 8
9999 mem: storing 9 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 9
9999 mem: location 1299 is 9
9999 mem: storing 1 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1296 is 1008
9999 mem: location 1300 is 9480
9999 mem: location 1302 is 245
9999 mem: location 1304 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1272
9999 mem: storing 1 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 9480
  90 print-character: 9480
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 6
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 6
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1298 is 9
9999 mem: storing 10 in location 1298
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1298 is 10
9999 mem: location 1299 is 9
9999 mem: storing 0 in location 1306
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1296 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1296 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 212 -> 211
9999 mem: storing 0 in location 1296
9999 mem: clearing row:number
9999 mem: storing 0 in location 1297
9999 mem: clearing x:number
9999 mem: storing 0 in location 1298
9999 mem: clearing right:number
9999 mem: storing 0 in location 1299
9999 mem: clearing style:character
9999 mem: storing 0 in location 1300
9999 mem: clearing style-found?:boolean
9999 mem: storing 0 in location 1301
9999 mem: clearing style
9999 mem: storing 0 in location 1300
9999 mem: clearing color:number
9999 mem: storing 0 in location 1302
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1303
9999 mem: clearing color
9999 mem: storing 0 in location 1302
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1304
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1305
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1304
9999 mem: clearing screen
9999 mem: location 1296 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1296
9999 mem: clearing continue?:boolean
9999 mem: storing 0 in location 1306
9999 mem: clearing x
9999 mem: storing 0 in location 1298
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1146 is 6
9999 mem: storing 7 in location 1146
 105 run: clear-screen-from {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1142 is 1008
9999 mem: location 1146 is 7
9999 mem: location 1144 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
9999 mem: storing 6 in location 1001
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1003 is 0
9999 mem: incrementing refcount of 1008: 211 -> 212
9999 mem: storing 1008 in location 1003
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 7
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 7
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1003
 106 run: clear-line-until {screen: ("address" "screen")}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
9999 mem: storing 8 in location 1117
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1119 is 0
9999 mem: incrementing refcount of 1008: 213 -> 214
9999 mem: storing 1008 in location 1119
 107 run: {right: "number", "inclusive": ()} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 107 run: _, {column: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1119 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 214 -> 215
9999 mem: storing 1008 in location 1164
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1165
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1166
 108 run: return {row: "number"}, {column: "number"}
9999 mem: location 1165 is 7
9999 mem: location 1166 is 0
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 215 -> 214
9999 mem: storing 0 in location 1164
9999 mem: clearing row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing row
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 7
9998 run: result 1 is 0
9999 mem: storing 0 in location 1121
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 0
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 214 -> 215
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 1
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 215 -> 216
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 2
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 216 -> 217
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 3
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 217 -> 218
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
9990 schedule: print/clear-line-until/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-ctrl-f
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 4
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 218 -> 219
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 5
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 219 -> 220
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 6
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 220 -> 221
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 7
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 221 -> 222
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 7
9999 mem: storing 8 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 8
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 222 -> 223
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 8
9999 mem: storing 9 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 9
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
9999 mem: storing 24 in location 1268
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 223 -> 224
9999 mem: storing 1008 in location 1270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1271
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1272
9999 mem: storing 1 in location 1273
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 1 in location 1275
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 32
  90 print-character: 32
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1278
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 7
9999 mem: location 1277 is 5
9999 mem: storing 0 in location 1279
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1121 is 9
9999 mem: storing 10 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1121 is 10
9999 mem: location 1120 is 9
9999 mem: storing 1 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 224 -> 223
9999 mem: storing 0 in location 1119
9999 mem: clearing right:number/inclusive
9999 mem: storing 0 in location 1120
9999 mem: clearing _
9999 mem: clearing column:number
9999 mem: storing 0 in location 1121
9999 mem: clearing space:character
9999 mem: storing 0 in location 1122
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1123
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1124
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1123
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1125
9999 mem: clearing screen
9999 mem: location 1119 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1119
9999 mem: clearing column
9999 mem: storing 0 in location 1121
9999 mem: automatically abandoning 1116
9999 abandon: updating refcounts inside 1116: (array number)
9999 abandon: saving 1116 in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 7
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1307
9999 mem: storing 7 in location 1308
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1310 is 0
9999 mem: incrementing refcount of 1008: 223 -> 224
9999 mem: storing 1008 in location 1310
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1311
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1313
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1311 is 7
9999 mem: storing 8 in location 1311
 107 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 8
9999 mem: location 1312 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 224 -> 225
9999 mem: storing 1008 in location 1164
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1165
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 8
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1310
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: storing 3 in location 1484
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1486 is 0
9999 mem: incrementing refcount of 1008: 225 -> 226
9999 mem: storing 1008 in location 1486
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1486 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1487
 108 run: return {height: "number"}
9999 mem: location 1487 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1486 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 226 -> 225
9999 mem: storing 0 in location 1486
9999 mem: automatically abandoning 1483
9999 abandon: updating refcounts inside 1483: (array number)
9999 abandon: saving 1483 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1314
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1311 is 8
9999 mem: location 1314 is 5
9999 mem: storing 1 in location 1315
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1310 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1310 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 225 -> 224
9999 mem: storing 0 in location 1310
9999 mem: clearing row:number
9999 mem: storing 0 in location 1311
9999 mem: clearing left:number
9999 mem: storing 0 in location 1312
9999 mem: clearing right:number
9999 mem: storing 0 in location 1313
9999 mem: clearing row
9999 mem: storing 0 in location 1311
9999 mem: clearing screen
9999 mem: location 1310 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1310
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1314
9999 mem: clearing at-bottom-of-screen?:boolean
9999 mem: storing 0 in location 1315
9999 mem: clearing screen
9999 mem: location 1310 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1310
9999 mem: clearing row
9999 mem: storing 0 in location 1311
9999 mem: automatically abandoning 1307
9999 abandon: updating refcounts inside 1307: (array number)
9999 abandon: saving 1307 in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 224 -> 223
9999 mem: storing 0 in location 1003
9999 mem: clearing row:number
9999 mem: storing 0 in location 1004
9999 mem: clearing column:number
9999 mem: storing 0 in location 1005
9999 mem: clearing left:number
9999 mem: storing 0 in location 1006
9999 mem: clearing right:number
9999 mem: storing 0 in location 1007
9999 mem: clearing screen
9999 mem: location 1003 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1003
9999 mem: automatically abandoning 1000
9999 abandon: updating refcounts inside 1000: (array number)
9999 abandon: saving 1000 in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1142 is 1008
9999 mem: location 1143 is 1148
9999 mem: clearing editor:address:editor-data
9999 mem: location 1143 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 8 -> 7
9999 mem: storing 0 in location 1143
9999 mem: clearing left:number
9999 mem: storing 0 in location 1144
9999 mem: clearing right:number
9999 mem: storing 0 in location 1145
9999 mem: clearing row:number
9999 mem: storing 0 in location 1146
9999 mem: clearing column:number
9999 mem: storing 0 in location 1147
9999 mem: clearing row
9999 mem: storing 0 in location 1146
9999 mem: clearing row
9999 mem: storing 0 in location 1146
9999 mem: automatically abandoning 1139
9999 abandon: updating refcounts inside 1139: (array number)
9999 abandon: saving 1139 in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1328
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1331
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1332
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1331 is 1
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
9999 mem: storing 4 in location 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 223 -> 224
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1328
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1329 is 1480
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
9999 mem: storing 12 in location 1294
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1480: 3 -> 4
9999 mem: storing 1480 in location 1296
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1480
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9999 mem: location 1481 is 1
9999 mem: location 1482 is 1474
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1481
9998 run: its type is "number"
9999 mem: location 1481 is 1
9999 mem: storing 1 in location 1297
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9999 mem: location 1481 is 1
9999 mem: location 1482 is 1474
9999 mem: location 1296 is 1480
9999 mem: skipping refcount at 1480
9998 run: address to copy is 1482
9998 run: its type is ("address" "array" "event")
9999 mem: location 1482 is 1474
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1474: 1 -> 2
9999 mem: storing 1474 in location 1298
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1474
9999 mem: skipping refcount at 1474
9999 mem: storing 1 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 1
9999 mem: location 1299 is 1
9999 mem: storing 1 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1483
9999 mem: location 1301 is 0
9999 mem: incrementing refcount of 1483: 0 -> 1
9999 mem: storing 1483 in location 1301
 105 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1301 is 1483
9999 mem: skipping refcount at 1483
9999 mem: location 1484 is 0
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1487 is 0
9999 mem: location 1296 is 1480
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1474
9999 mem: skipping refcount at 1474
9999 mem: decrementing refcount of 1474: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing result
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing result:event
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1480
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 1480 in location 1329
9999 mem: storing 1 in location 1337
9999 mem: storing 1 in location 1338
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1328 is 1008
9999 mem: location 1329 is 1480
9999 mem: location 1330 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1328 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 224 -> 223
9999 mem: storing 0 in location 1328
9999 mem: clearing console:address:console
9999 mem: location 1329 is 1480
9999 mem: skipping refcount at 1480
9999 mem: decrementing refcount of 1480: 4 -> 3
9999 mem: storing 0 in location 1329
9999 mem: clearing editor:address:editor-data
9999 mem: location 1330 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 7 -> 6
9999 mem: storing 0 in location 1330
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1331
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1332
9999 mem: clearing screen
9999 mem: location 1328 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1328
9999 mem: clearing e:event
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: clearing console:address:console
9999 mem: location 1329 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1329
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1337
9999 mem: clearing quit?:boolean
9999 mem: storing 0 in location 1338
9999 mem: clearing t:touch-event
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: clearing is-touch?:boolean
9999 mem: storing 0 in location 1342
9999 mem: clearing screen
9999 mem: location 1328 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1328
9999 mem: clearing editor
9999 mem: location 1330 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1330
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1343
9999 mem: clearing screen
9999 mem: location 1328 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1328
9999 mem: automatically abandoning 1325
9999 abandon: updating refcounts inside 1325: (array number)
9999 abandon: saving 1325 in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 1215
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 5
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .a         .\n    .b         .\n    .c         .\n    .d         .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
