9991 parse: --- defining scenario_editor-can-undo-page-up
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\nc\nd\ne\nf": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"a\nb\nc\nd\ne\nf": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n    press page-up\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-down\n    press page-up\n  ": "literal-string"}
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .d         .\n    .e         .\n    .f         .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .d         .\n    .e         .\n    .f         .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-undo-page-up has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-undo-page-up
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-undo-page-up
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-undo-page-up
9991 transform: --- deduce types for recipe scenario_editor-can-undo-page-up
9992 transform: screen => ("address" "shared" "screen")
9992 transform: screen <= ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe scenario_editor-can-undo-page-up
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-undo-page-up
9991 transform: --- transform names for recipe scenario_editor-can-undo-page-up
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-undo-page-up
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")}
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe scenario_editor-can-undo-page-up
9991 transform: --- transform braces for recipe scenario_editor-can-undo-page-up
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-can-undo-page-up
9991 transform: --- perform checks for recipe scenario_editor-can-undo-page-up
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-undo-page-up
9991 transform: --- type-check calls inside recipe scenario_editor-can-undo-page-up
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-undo-page-up
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-undo-page-up
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-undo-page-up
9991 transform: --- checking reply instructions against header for scenario_editor-can-undo-page-up
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-undo-page-up
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: {width: ("address" "number")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: {width: ("address" "number"), "lookup": ()} <- copy {w: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1006 is 1014
9999 mem: storing 10 in location 1014
 103 run: {height: ("address" "number")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: {height: ("address" "number"), "lookup": ()} <- copy {h: "number"}
9999 mem: location 1004 is 5
9999 mem: location 1007 is 1013
9999 mem: storing 5 in location 1013
 103 run: {row: ("address" "number")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: {row: ("address" "number"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: {column: ("address" "number")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: {column: ("address" "number"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: {bufsize: "number"} <- multiply {width: ("address" "number"), "lookup": ()}, {height: ("address" "number"), "lookup": ()}
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 10
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 50 in location 1010
 103 run: {buf: ("address" "address" "shared" "array" "screen-cell")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: {buf: ("address" "address" "shared" "array" "screen-cell"), "lookup": ()} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1010 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1018
9999 mem: storing 50 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1120
9999 mem: storing 10 in location 1121
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1123
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1123 is 1012
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1124
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1125
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1126
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 0
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 0
9999 mem: storing 1020 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1020
9999 mem: storing 0 in location 1020
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1021
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 1
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 1
9999 mem: storing 1022 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1022
9999 mem: storing 0 in location 1022
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1023
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 1
9999 mem: storing 2 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 2
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 2
9999 mem: storing 1024 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1024
9999 mem: storing 0 in location 1024
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1025
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 2
9999 mem: storing 3 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 3
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 3
9999 mem: storing 1026 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1026
9999 mem: storing 0 in location 1026
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1027
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 3
9999 mem: storing 4 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 4
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 4
9999 mem: storing 1028 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1028
9999 mem: storing 0 in location 1028
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1029
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 4
9999 mem: storing 5 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 5
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 5
9999 mem: storing 1030 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1030
9999 mem: storing 0 in location 1030
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1031
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 5
9999 mem: storing 6 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 6
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 6
9999 mem: storing 1032 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1032
9999 mem: storing 0 in location 1032
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1033
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 6
9999 mem: storing 7 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 7
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 7
9999 mem: storing 1034 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1034
9999 mem: storing 0 in location 1034
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1035
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 7
9999 mem: storing 8 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 8
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 8
9999 mem: storing 1036 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1036
9999 mem: storing 0 in location 1036
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1037
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 8
9999 mem: storing 9 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 9
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 9
9999 mem: storing 1038 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1038
9999 mem: storing 0 in location 1038
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1039
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 9
9999 mem: storing 10 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 10
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 10
9999 mem: storing 1040 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1040
9999 mem: storing 0 in location 1040
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1041
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 10
9999 mem: storing 11 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 11
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 11
9999 mem: storing 1042 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1042
9999 mem: storing 0 in location 1042
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1043
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 11
9999 mem: storing 12 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 12
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 12
9999 mem: storing 1044 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1044
9999 mem: storing 0 in location 1044
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1045
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 12
9999 mem: storing 13 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 13
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 13
9999 mem: storing 1046 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1046
9999 mem: storing 0 in location 1046
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1047
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 13
9999 mem: storing 14 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 14
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 14
9999 mem: storing 1048 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1048
9999 mem: storing 0 in location 1048
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1049
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 14
9999 mem: storing 15 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 15
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 15
9999 mem: storing 1050 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1050
9999 mem: storing 0 in location 1050
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1051
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 15
9999 mem: storing 16 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 16
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 16
9999 mem: storing 1052 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1052
9999 mem: storing 0 in location 1052
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1053
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 16
9999 mem: storing 17 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 17
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 17
9999 mem: storing 1054 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1054
9999 mem: storing 0 in location 1054
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1055
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 17
9999 mem: storing 18 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 18
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 18
9999 mem: storing 1056 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1056
9999 mem: storing 0 in location 1056
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1057
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 18
9999 mem: storing 19 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 19
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 19
9999 mem: storing 1058 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1058
9999 mem: storing 0 in location 1058
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1059
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 19
9999 mem: storing 20 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 20
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 20
9999 mem: storing 1060 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1060
9999 mem: storing 0 in location 1060
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1061
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 20
9999 mem: storing 21 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 21
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 21
9999 mem: storing 1062 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1062
9999 mem: storing 0 in location 1062
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1063
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 21
9999 mem: storing 22 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 22
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 22
9999 mem: storing 1064 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1064
9999 mem: storing 0 in location 1064
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1065
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 22
9999 mem: storing 23 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 23
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 23
9999 mem: storing 1066 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1066
9999 mem: storing 0 in location 1066
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1067
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 23
9999 mem: storing 24 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 24
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 24
9999 mem: storing 1068 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1068
9999 mem: storing 0 in location 1068
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1069
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 24
9999 mem: storing 25 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 25
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 25
9999 mem: storing 1070 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1070
9999 mem: storing 0 in location 1070
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1071
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 25
9999 mem: storing 26 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 26
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 26
9999 mem: storing 1072 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1072
9999 mem: storing 0 in location 1072
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1073
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 26
9999 mem: storing 27 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 27
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 27
9999 mem: storing 1074 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1074
9999 mem: storing 0 in location 1074
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1075
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 27
9999 mem: storing 28 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 28
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 28
9999 mem: storing 1076 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1076
9999 mem: storing 0 in location 1076
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1077
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 28
9999 mem: storing 29 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 29
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 29
9999 mem: storing 1078 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1078
9999 mem: storing 0 in location 1078
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1079
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 29
9999 mem: storing 30 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 30
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 30
9999 mem: storing 1080 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1080
9999 mem: storing 0 in location 1080
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1081
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 30
9999 mem: storing 31 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 31
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 31
9999 mem: storing 1082 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1082
9999 mem: storing 0 in location 1082
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1083
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 31
9999 mem: storing 32 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 32
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 32
9999 mem: storing 1084 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1084
9999 mem: storing 0 in location 1084
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1085
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 32
9999 mem: storing 33 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 33
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 33
9999 mem: storing 1086 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1086
9999 mem: storing 0 in location 1086
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1087
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 33
9999 mem: storing 34 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 34
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 34
9999 mem: storing 1088 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1088
9999 mem: storing 0 in location 1088
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1089
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 34
9999 mem: storing 35 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 35
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 35
9999 mem: storing 1090 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1090
9999 mem: storing 0 in location 1090
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1091
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 35
9999 mem: storing 36 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 36
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 36
9999 mem: storing 1092 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1092
9999 mem: storing 0 in location 1092
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1093
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 36
9999 mem: storing 37 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 37
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 37
9999 mem: storing 1094 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1094
9999 mem: storing 0 in location 1094
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1095
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 37
9999 mem: storing 38 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 38
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 38
9999 mem: storing 1096 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1096
9999 mem: storing 0 in location 1096
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1097
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 38
9999 mem: storing 39 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 39
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 39
9999 mem: storing 1098 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1098
9999 mem: storing 0 in location 1098
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1099
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 39
9999 mem: storing 40 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 40
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 40
9999 mem: storing 1100 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1100
9999 mem: storing 0 in location 1100
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1101
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 40
9999 mem: storing 41 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 41
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 41
9999 mem: storing 1102 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1102
9999 mem: storing 0 in location 1102
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1103
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 41
9999 mem: storing 42 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 42
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 42
9999 mem: storing 1104 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1104
9999 mem: storing 0 in location 1104
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1105
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 42
9999 mem: storing 43 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 43
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 43
9999 mem: storing 1106 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1106
9999 mem: storing 0 in location 1106
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1107
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 43
9999 mem: storing 44 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 44
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 44
9999 mem: storing 1108 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1108
9999 mem: storing 0 in location 1108
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1109
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 44
9999 mem: storing 45 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 45
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 45
9999 mem: storing 1110 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1110
9999 mem: storing 0 in location 1110
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1111
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 45
9999 mem: storing 46 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 46
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 46
9999 mem: storing 1112 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1112
9999 mem: storing 0 in location 1112
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1113
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 46
9999 mem: storing 47 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 47
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 47
9999 mem: storing 1114 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1114
9999 mem: storing 0 in location 1114
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1115
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 47
9999 mem: storing 48 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 48
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 48
9999 mem: storing 1116 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1116
9999 mem: storing 0 in location 1116
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1117
9999 mem: storing 7 in location 1117
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 48
9999 mem: storing 49 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 49
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 49
9999 mem: storing 1118 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1118
9999 mem: storing 0 in location 1118
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1119
9999 mem: storing 7 in location 1119
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 49
9999 mem: storing 50 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 50
9999 mem: location 1125 is 50
9999 mem: storing 1 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 1
9998 run: jumping to instruction 17
 104 run: {x: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1131
 104 run: {x: ("address" "number"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1131 is 1015
9999 mem: storing 0 in location 1015
 104 run: {x: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1131
 104 run: {x: ("address" "number"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1131 is 1016
9999 mem: storing 0 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1123 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"a\nb\nc\nd\ne\nf": "literal-string"}
9999 mem: new string alloc: 1132
9999 mem: storing 1132 in location 1
9999 mem: incrementing refcount of 1132: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1132
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1145
9999 mem: storing 11 in location 1146
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1148
9999 mem: incrementing refcount of 1132: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1149
9999 mem: incrementing refcount of 1012: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1150
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1151
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1151 is 10
9999 mem: storing 9 in location 1151
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1158
9999 mem: storing 1158 in location 1152
9999 mem: incrementing refcount of 1158: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1153
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1150 is 0
9999 mem: location 1153 is 1163
9999 mem: storing 0 in location 1163
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1153
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1151 is 9
9999 mem: location 1153 is 1164
9999 mem: storing 9 in location 1164
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1153
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1153 is 1166
9999 mem: storing 1 in location 1166
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1153
9990 schedule: new-editor/scenario_editor-can-undo-page-up
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1150 is 0
9999 mem: location 1153 is 1167
9999 mem: storing 0 in location 1167
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1154
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1171
9999 mem: storing 4 in location 1172
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1174
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1175
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1177
9999 mem: storing 1177 in location 1176
9999 mem: incrementing refcount of 1177: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1174 is 167
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1176 is 1177
9999 mem: skipping refcount at 1177
9999 mem: storing 167 in location 1178
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1176 is 1177
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1177
9999 mem: location 1154 is 1159
9999 mem: storing 1177 in location 1159
9999 mem: incrementing refcount of 1177: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1155
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1154 is 1159
9999 mem: location 1159 is 1177
9999 mem: location 1155 is 1160
9999 mem: storing 1177 in location 1160
9999 mem: incrementing refcount of 1177: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1156
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1154 is 1159
9999 mem: location 1159 is 1177
9999 mem: location 1156 is 1162
9999 mem: storing 1177 in location 1162
9999 mem: incrementing refcount of 1177: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1152 is 1158
9999 mem: location 1148 is 1132
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1181
9999 mem: storing 8 in location 1182
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1184
9999 mem: incrementing refcount of 1158: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1185
9999 mem: incrementing refcount of 1132: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1185 is 1132
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9999 mem: storing 11 in location 1186
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1186 is 11
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1187
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1184 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1184 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1159 is 1177
9999 mem: storing 1177 in location 1188
9999 mem: incrementing refcount of 1177: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 0
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 0
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 97
9999 mem: storing 97 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 97
9999 mem: location 1188 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1191
9999 mem: storing 5 in location 1192
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1195
9999 mem: incrementing refcount of 1177: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1198
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1194 is 97
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1199
9999 mem: storing 97 in location 1199
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1195 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1196 is 1198
9999 mem: location 1195 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy to is 1179
9999 mem: storing 1198 in location 1179
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1195 is 1177
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1201
9999 mem: storing 1177 in location 1201
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1177
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1200
9999 mem: storing 0 in location 1200
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1177
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1202
9999 mem: storing 3 in location 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1205
9999 mem: incrementing refcount of 1177: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1177
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1198
9999 mem: location 1180 is 0
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1177: 7 -> 6
9999 mem: storing 1198 in location 1188
9999 mem: incrementing refcount of 1198: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 1
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 1
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 10
9999 mem: storing 10 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 10
9999 mem: location 1188 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1195
9999 mem: incrementing refcount of 1198: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1207
9999 mem: storing 1207 in location 1196
9999 mem: incrementing refcount of 1207: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1194 is 10
9999 mem: location 1196 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy to is 1208
9999 mem: storing 10 in location 1208
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1177
9999 mem: location 1195 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1177
9999 mem: location 1196 is 1207
9999 mem: location 1195 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1200
9999 mem: storing 1207 in location 1200
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1195 is 1198
9999 mem: location 1196 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy to is 1210
9999 mem: storing 1198 in location 1210
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1198
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy to is 1209
9999 mem: storing 0 in location 1209
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1198
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1198: 5 -> 4
9999 mem: storing 1207 in location 1188
9999 mem: incrementing refcount of 1207: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 1
9999 mem: storing 2 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 2
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 2
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 98
9999 mem: storing 98 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 98
9999 mem: location 1188 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1195
9999 mem: incrementing refcount of 1207: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1211
9999 mem: storing 1211 in location 1196
9999 mem: incrementing refcount of 1211: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1194 is 98
9999 mem: location 1196 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1212
9999 mem: storing 98 in location 1212
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1198
9999 mem: location 1195 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1198
9999 mem: location 1196 is 1211
9999 mem: location 1195 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy to is 1209
9999 mem: storing 1211 in location 1209
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1195 is 1207
9999 mem: location 1196 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1214
9999 mem: storing 1207 in location 1214
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1213
9999 mem: storing 0 in location 1213
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1207
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 5 -> 4
9999 mem: storing 1211 in location 1188
9999 mem: incrementing refcount of 1211: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 2
9999 mem: storing 3 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 3
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 3
9998 run: address to copy is 1137
9998 run: its type is character
9999 mem: location 1137 is 10
9999 mem: storing 10 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 10
9999 mem: location 1188 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1195
9999 mem: incrementing refcount of 1211: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1215
9999 mem: storing 1215 in location 1196
9999 mem: incrementing refcount of 1215: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1194 is 10
9999 mem: location 1196 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1216
9999 mem: storing 10 in location 1216
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1195 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1196 is 1215
9999 mem: location 1195 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1213
9999 mem: storing 1215 in location 1213
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1195 is 1211
9999 mem: location 1196 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1218
9999 mem: storing 1211 in location 1218
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1217
9999 mem: storing 0 in location 1217
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1211
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 5 -> 4
9999 mem: storing 1215 in location 1188
9999 mem: incrementing refcount of 1215: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 3
9999 mem: storing 4 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 4
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 4
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 99
9999 mem: storing 99 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 99
9999 mem: location 1188 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1195
9999 mem: incrementing refcount of 1215: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1219
9999 mem: storing 1219 in location 1196
9999 mem: incrementing refcount of 1219: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 0
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1194 is 99
9999 mem: location 1196 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy to is 1220
9999 mem: storing 99 in location 1220
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1195 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1196 is 1219
9999 mem: location 1195 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1217
9999 mem: storing 1219 in location 1217
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1195 is 1215
9999 mem: location 1196 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy to is 1222
9999 mem: storing 1215 in location 1222
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy to is 1221
9999 mem: storing 0 in location 1221
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1215
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 5 -> 4
9999 mem: storing 1219 in location 1188
9999 mem: incrementing refcount of 1219: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 4
9999 mem: storing 5 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 5
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 5
9998 run: address to copy is 1139
9998 run: its type is character
9999 mem: location 1139 is 10
9999 mem: storing 10 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 10
9999 mem: location 1188 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1195
9999 mem: incrementing refcount of 1219: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1223
9999 mem: storing 1223 in location 1196
9999 mem: incrementing refcount of 1223: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1194 is 10
9999 mem: location 1196 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy to is 1224
9999 mem: storing 10 in location 1224
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1195 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1196 is 1223
9999 mem: location 1195 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy to is 1221
9999 mem: storing 1223 in location 1221
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1195 is 1219
9999 mem: location 1196 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy to is 1226
9999 mem: storing 1219 in location 1226
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy to is 1225
9999 mem: storing 0 in location 1225
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1219
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1206
9999 mem: incrementing refcount of 1223: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 5 -> 4
9999 mem: storing 1223 in location 1188
9999 mem: incrementing refcount of 1223: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 5
9999 mem: storing 6 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 6
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 6
9998 run: address to copy is 1140
9998 run: its type is character
9999 mem: location 1140 is 100
9999 mem: storing 100 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 100
9999 mem: location 1188 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1195
9999 mem: incrementing refcount of 1223: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1227
9999 mem: storing 1227 in location 1196
9999 mem: incrementing refcount of 1227: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1194 is 100
9999 mem: location 1196 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy to is 1228
9999 mem: storing 100 in location 1228
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1195 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1196 is 1227
9999 mem: location 1195 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy to is 1225
9999 mem: storing 1227 in location 1225
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1195 is 1223
9999 mem: location 1196 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy to is 1230
9999 mem: storing 1223 in location 1230
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1223
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy to is 1229
9999 mem: storing 0 in location 1229
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1223
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 5 -> 4
9999 mem: storing 1227 in location 1188
9999 mem: incrementing refcount of 1227: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 6
9999 mem: storing 7 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 7
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 7
9998 run: address to copy is 1141
9998 run: its type is character
9999 mem: location 1141 is 10
9999 mem: storing 10 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 10
9999 mem: location 1188 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1195
9999 mem: incrementing refcount of 1227: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1231
9999 mem: storing 1231 in location 1196
9999 mem: incrementing refcount of 1231: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 0
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1194 is 10
9999 mem: location 1196 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy to is 1232
9999 mem: storing 10 in location 1232
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1223
9999 mem: location 1195 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1223
9999 mem: location 1196 is 1231
9999 mem: location 1195 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy to is 1229
9999 mem: storing 1231 in location 1229
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1195 is 1227
9999 mem: location 1196 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy to is 1234
9999 mem: storing 1227 in location 1234
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1227
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy to is 1233
9999 mem: storing 0 in location 1233
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1227
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 5 -> 4
9999 mem: storing 1231 in location 1188
9999 mem: incrementing refcount of 1231: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 7
9999 mem: storing 8 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 8
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 8
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 101
9999 mem: storing 101 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 101
9999 mem: location 1188 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1195
9999 mem: incrementing refcount of 1231: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1235
9999 mem: storing 1235 in location 1196
9999 mem: incrementing refcount of 1235: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 0
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1194 is 101
9999 mem: location 1196 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy to is 1236
9999 mem: storing 101 in location 1236
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1227
9999 mem: location 1195 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1227
9999 mem: location 1196 is 1235
9999 mem: location 1195 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy to is 1233
9999 mem: storing 1235 in location 1233
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1195 is 1231
9999 mem: location 1196 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy to is 1238
9999 mem: storing 1231 in location 1238
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 0
9999 mem: location 1238 is 1231
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy to is 1237
9999 mem: storing 0 in location 1237
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1231
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1205
9999 mem: incrementing refcount of 1231: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1231
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1206
9999 mem: incrementing refcount of 1235: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 5 -> 4
9999 mem: storing 1235 in location 1188
9999 mem: incrementing refcount of 1235: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 8
9999 mem: storing 9 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 9
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 9
9998 run: address to copy is 1143
9998 run: its type is character
9999 mem: location 1143 is 10
9999 mem: storing 10 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 10
9999 mem: location 1188 is 1235
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1195
9999 mem: incrementing refcount of 1235: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1239
9999 mem: storing 1239 in location 1196
9999 mem: incrementing refcount of 1239: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 0
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 mem: location 1194 is 10
9999 mem: location 1196 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy to is 1240
9999 mem: storing 10 in location 1240
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 0
9999 mem: location 1238 is 1231
9999 mem: location 1195 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 0
9999 mem: location 1238 is 1231
9999 mem: location 1196 is 1239
9999 mem: location 1195 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy to is 1237
9999 mem: storing 1239 in location 1237
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 mem: location 1195 is 1235
9999 mem: location 1196 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy to is 1242
9999 mem: storing 1235 in location 1242
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy to is 1241
9999 mem: storing 0 in location 1241
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1235
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1235
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1205
9999 mem: incrementing refcount of 1235: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1235
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1205 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1206
9999 mem: incrementing refcount of 1239: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 5 -> 4
9999 mem: storing 1239 in location 1188
9999 mem: incrementing refcount of 1239: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 9
9999 mem: storing 10 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 10
9999 mem: location 1186 is 11
9999 mem: storing 0 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1185 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1187 is 10
9998 run: address to copy is 1144
9998 run: its type is character
9999 mem: location 1144 is 102
9999 mem: storing 102 in location 1190
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 102
9999 mem: location 1188 is 1239
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1195
9999 mem: incrementing refcount of 1239: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1243
9999 mem: storing 1243 in location 1196
9999 mem: incrementing refcount of 1243: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1196 is 1243
9999 mem: skipping refcount at 1243
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: location 1246 is 0
9999 mem: location 1194 is 102
9999 mem: location 1196 is 1243
9999 mem: skipping refcount at 1243
9998 run: address to copy to is 1244
9999 mem: storing 102 in location 1244
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1195 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1195 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1196 is 1243
9999 mem: location 1195 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy to is 1241
9999 mem: storing 1243 in location 1241
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1243
9999 mem: skipping refcount at 1243
9999 mem: location 1244 is 102
9999 mem: location 1245 is 0
9999 mem: location 1246 is 0
9999 mem: location 1195 is 1239
9999 mem: location 1196 is 1243
9999 mem: skipping refcount at 1243
9998 run: address to copy to is 1246
9999 mem: storing 1239 in location 1246
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1243
9999 mem: skipping refcount at 1243
9999 mem: location 1244 is 102
9999 mem: location 1245 is 0
9999 mem: location 1246 is 1239
9999 mem: location 1197 is 0
9999 mem: location 1196 is 1243
9999 mem: skipping refcount at 1243
9998 run: address to copy to is 1245
9999 mem: storing 0 in location 1245
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1195 is 1239
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1239
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1205
9999 mem: incrementing refcount of 1239: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1239
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 1243
9999 mem: location 1242 is 1235
9999 mem: location 1205 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 1243
9999 mem: storing 1243 in location 1206
9999 mem: incrementing refcount of 1243: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1243
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1243
9999 mem: decrementing refcount of 1239: 5 -> 4
9999 mem: storing 1243 in location 1188
9999 mem: incrementing refcount of 1243: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1187 is 10
9999 mem: storing 11 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1187 is 11
9999 mem: location 1186 is 11
9999 mem: storing 1 in location 1189
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1184 is 1158
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 2 -> 1
9999 mem: storing 1158 in location 1152
9999 mem: incrementing refcount of 1158: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1156
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1154 is 1159
9999 mem: location 1159 is 1177
9999 mem: location 1156 is 1162
9999 mem: decrementing refcount of 1177: 6 -> 5
9999 mem: storing 1177 in location 1162
9999 mem: incrementing refcount of 1177: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1149 is 1012
9999 mem: location 1152 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1247
9999 mem: storing 28 in location 1248
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1251
9999 mem: incrementing refcount of 1158: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1251 is 1158
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1252
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1250 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 105 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1253
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1254
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1177
9999 mem: storing 1177 in location 1255
9999 mem: incrementing refcount of 1177: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1177
9999 mem: storing 1177 in location 1256
9999 mem: incrementing refcount of 1177: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1205
9999 mem: incrementing refcount of 1177: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1177
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1198
9999 mem: location 1180 is 0
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1177: 9 -> 8
9999 mem: storing 1198 in location 1255
9999 mem: incrementing refcount of 1198: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1260
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1261
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1262
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1277
9999 mem: storing 6 in location 1278
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1198
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 0
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1265
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1177
9999 mem: location 1262 is 1162
9999 mem: decrementing refcount of 1177: 8 -> 7
9999 mem: storing 1177 in location 1162
9999 mem: incrementing refcount of 1177: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1255 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 97
9999 mem: storing 97 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 97
9999 mem: storing 0 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 97
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1285
9999 mem: storing 25 in location 1286
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 97
9999 mem: storing 0 in location 1299
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1302
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 97
9999 mem: storing 0 in location 1305
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 10
9999 mem: storing 1040 in location 1307
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1308
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 97
9999 mem: location 1308 is 1040
9999 mem: storing 97 in location 1040
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1309
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1041
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1198: 7 -> 6
9999 mem: storing 1207 in location 1255
9999 mem: incrementing refcount of 1207: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1205
9999 mem: incrementing refcount of 1177: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1177
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1198
9999 mem: location 1180 is 0
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1177: 9 -> 8
9999 mem: storing 1198 in location 1256
9999 mem: incrementing refcount of 1198: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1207
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1265
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1255 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1268
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 8 -> 9
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-can-undo-page-up
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 9 -> 10
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 3 -> 4
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 11
9999 mem: storing 1042 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1042
9999 mem: storing 32 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 10 -> 9
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 9 -> 10
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 10 -> 11
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 4 -> 5
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 12
9999 mem: storing 1044 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1044
9999 mem: storing 32 in location 1044
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1045
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 11 -> 10
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 10 -> 11
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 13
9999 mem: storing 1046 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1046
9999 mem: storing 32 in location 1046
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1047
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 12 -> 11
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 6 -> 7
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 14
9999 mem: storing 1048 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1048
9999 mem: storing 32 in location 1048
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1049
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 13 -> 12
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 12 -> 13
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 13 -> 14
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 7 -> 8
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 15
9999 mem: storing 1050 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1050
9999 mem: storing 32 in location 1050
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1051
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 14 -> 13
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 13 -> 14
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 14 -> 15
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 8 -> 9
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 16
9999 mem: storing 1052 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1052
9999 mem: storing 32 in location 1052
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1053
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 15 -> 14
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 14 -> 15
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 15 -> 16
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 17
9999 mem: storing 1054 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1054
9999 mem: storing 32 in location 1054
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1055
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 16 -> 15
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 10 -> 11
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 18
9999 mem: storing 1056 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1056
9999 mem: storing 32 in location 1056
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1057
9999 mem: storing 7 in location 1057
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 17 -> 16
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 11 -> 12
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 19
9999 mem: storing 1058 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1058
9999 mem: storing 32 in location 1058
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1059
9999 mem: storing 7 in location 1059
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 18 -> 17
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 2
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 18 -> 19
9990 schedule: move-cursor/render/new-editor/scenario_editor-can-undo-page-up
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 2
9999 mem: location 1283 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 19 -> 18
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 18 -> 19
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 7 -> 6
9999 mem: storing 1211 in location 1255
9999 mem: incrementing refcount of 1211: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1198: 9 -> 8
9999 mem: storing 1207 in location 1256
9999 mem: incrementing refcount of 1207: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1211
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1255 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 98
9999 mem: storing 98 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 98
9999 mem: storing 0 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 98
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 98
9999 mem: storing 0 in location 1299
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1302
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 98
9999 mem: storing 0 in location 1305
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 20
9999 mem: storing 1060 in location 1307
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1308
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 98
9999 mem: location 1308 is 1060
9999 mem: storing 98 in location 1060
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 98
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1309
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1061
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 7 -> 6
9999 mem: storing 1215 in location 1255
9999 mem: incrementing refcount of 1215: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 9 -> 8
9999 mem: storing 1211 in location 1256
9999 mem: incrementing refcount of 1211: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1215
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1255 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 10
9999 mem: storing 10 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 20 -> 21
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 21 -> 22
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 13 -> 14
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 21
9999 mem: storing 1062 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1062
9999 mem: storing 32 in location 1062
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1063
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 22 -> 21
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 21 -> 22
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 22 -> 23
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 14 -> 15
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 22
9999 mem: storing 1064 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1064
9999 mem: storing 32 in location 1064
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1065
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 23 -> 22
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 22 -> 23
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 23 -> 24
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 15 -> 16
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 23
9999 mem: storing 1066 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1066
9999 mem: storing 32 in location 1066
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1067
9999 mem: storing 7 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 24 -> 23
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 24 -> 25
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 16 -> 17
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 24
9999 mem: storing 1068 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1068
9999 mem: storing 32 in location 1068
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1069
9999 mem: storing 7 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 25 -> 24
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 25 -> 26
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 17 -> 18
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 25
9999 mem: storing 1070 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1070
9999 mem: storing 32 in location 1070
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1071
9999 mem: storing 7 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 26 -> 25
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 25 -> 26
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 26 -> 27
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 18 -> 19
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-can-undo-page-up
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 26
9999 mem: storing 1072 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1072
9999 mem: storing 32 in location 1072
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1073
9999 mem: storing 7 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 27 -> 26
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 26 -> 27
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 27 -> 28
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 19 -> 20
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 27
9999 mem: storing 1074 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1074
9999 mem: storing 32 in location 1074
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1075
9999 mem: storing 7 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 28 -> 27
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 28 -> 29
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 20 -> 21
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 28
9999 mem: storing 1076 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1076
9999 mem: storing 32 in location 1076
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1077
9999 mem: storing 7 in location 1077
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 29 -> 28
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 28 -> 29
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 29 -> 30
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 21 -> 22
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 29
9999 mem: storing 1078 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1078
9999 mem: storing 32 in location 1078
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1079
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 30 -> 29
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 29 -> 30
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 30 -> 31
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 3
9999 mem: location 1283 is 1015
9999 mem: storing 3 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 31 -> 30
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 30 -> 31
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 7 -> 6
9999 mem: storing 1219 in location 1255
9999 mem: incrementing refcount of 1219: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 9 -> 8
9999 mem: storing 1215 in location 1256
9999 mem: incrementing refcount of 1215: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1219
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1255 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is "character"
9999 mem: location 1220 is 99
9999 mem: storing 99 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 99
9999 mem: storing 0 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 99
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 99
9999 mem: storing 0 in location 1299
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1302
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 22 -> 23
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 99
9999 mem: storing 0 in location 1305
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 30
9999 mem: storing 1080 in location 1307
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1308
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 99
9999 mem: location 1308 is 1080
9999 mem: storing 99 in location 1080
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 99
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1309
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1081
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1206
9999 mem: incrementing refcount of 1223: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 7 -> 6
9999 mem: storing 1223 in location 1255
9999 mem: incrementing refcount of 1223: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 9 -> 8
9999 mem: storing 1219 in location 1256
9999 mem: incrementing refcount of 1219: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1223
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1255 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 10
9999 mem: storing 10 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 32 -> 33
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 33 -> 34
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 23 -> 24
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 31
9999 mem: storing 1082 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1082
9999 mem: storing 32 in location 1082
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1083
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 34 -> 33
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 33 -> 34
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 34 -> 35
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 24 -> 25
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 32
9999 mem: storing 1084 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1084
9999 mem: storing 32 in location 1084
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1085
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 35 -> 34
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 34 -> 35
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 35 -> 36
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-can-undo-page-up
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 25 -> 26
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 33
9999 mem: storing 1086 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1086
9999 mem: storing 32 in location 1086
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1087
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 36 -> 35
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 35 -> 36
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 36 -> 37
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 26 -> 27
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 34
9999 mem: storing 1088 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1088
9999 mem: storing 32 in location 1088
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1089
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 37 -> 36
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 36 -> 37
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 37 -> 38
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 27 -> 28
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 35
9999 mem: storing 1090 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1090
9999 mem: storing 32 in location 1090
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1091
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 38 -> 37
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 37 -> 38
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 38 -> 39
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 28 -> 29
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 36
9999 mem: storing 1092 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1092
9999 mem: storing 32 in location 1092
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1093
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 39 -> 38
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 38 -> 39
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 39 -> 40
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 29 -> 30
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 37
9999 mem: storing 1094 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1094
9999 mem: storing 32 in location 1094
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1095
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 40 -> 39
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 39 -> 40
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 40 -> 41
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 30 -> 31
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 38
9999 mem: storing 1096 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1096
9999 mem: storing 32 in location 1096
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1097
9999 mem: storing 7 in location 1097
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 41 -> 40
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 40 -> 41
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 41 -> 42
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 31 -> 32
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 39
9999 mem: storing 1098 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1098
9999 mem: storing 32 in location 1098
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1099
9999 mem: storing 7 in location 1099
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 42 -> 41
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 41 -> 42
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 4
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 42 -> 43
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 4
9999 mem: location 1283 is 1015
9999 mem: storing 4 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 43 -> 42
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 42 -> 43
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 7 -> 6
9999 mem: storing 1227 in location 1255
9999 mem: incrementing refcount of 1227: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1206
9999 mem: incrementing refcount of 1223: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 9 -> 8
9999 mem: storing 1223 in location 1256
9999 mem: incrementing refcount of 1223: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1227
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 4
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is "character"
9999 mem: location 1228 is 100
9999 mem: storing 100 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 100
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 43 -> 44
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1299
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1302
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 32 -> 33
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1305
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 40
9999 mem: storing 1100 in location 1307
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 7
9999 mem: location 1307 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1308
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 100
9999 mem: location 1308 is 1100
9999 mem: storing 100 in location 1100
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 100
9999 mem: location 1101 is 7
9999 mem: location 1307 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1309
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1101
9999 mem: storing 7 in location 1101
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 7 -> 6
9999 mem: storing 1231 in location 1255
9999 mem: incrementing refcount of 1231: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
9990 schedule: next_2/render/new-editor/scenario_editor-can-undo-page-up
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 9 -> 8
9999 mem: storing 1227 in location 1256
9999 mem: incrementing refcount of 1227: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1231
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 4
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is "character"
9999 mem: location 1232 is 10
9999 mem: storing 10 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 44 -> 45
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 45 -> 46
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 33 -> 34
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 41
9999 mem: storing 1102 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 7
9999 mem: location 1307 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1102
9999 mem: storing 32 in location 1102
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1307 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1103
9999 mem: storing 7 in location 1103
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 46 -> 45
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 45 -> 46
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 46 -> 47
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 34 -> 35
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 42
9999 mem: storing 1104 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 7
9999 mem: location 1307 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1104
9999 mem: storing 32 in location 1104
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1307 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1105
9999 mem: storing 7 in location 1105
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 47 -> 46
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 46 -> 47
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 47 -> 48
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 35 -> 36
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 43
9999 mem: storing 1106 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 7
9999 mem: location 1307 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1106
9999 mem: storing 32 in location 1106
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1307 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1107
9999 mem: storing 7 in location 1107
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 48 -> 47
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 47 -> 48
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 48 -> 49
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 36 -> 37
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 44
9999 mem: storing 1108 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 7
9999 mem: location 1307 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1108
9999 mem: storing 32 in location 1108
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1307 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1109
9999 mem: storing 7 in location 1109
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 49 -> 48
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 48 -> 49
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 49 -> 50
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 37 -> 38
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 45
9999 mem: storing 1110 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 7
9999 mem: location 1307 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1110
9999 mem: storing 32 in location 1110
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1307 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1111
9999 mem: storing 7 in location 1111
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 50 -> 49
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 49 -> 50
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 50 -> 51
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 38 -> 39
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 46
9999 mem: storing 1112 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 7
9999 mem: location 1307 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1112
9999 mem: storing 32 in location 1112
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1307 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1113
9999 mem: storing 7 in location 1113
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 51 -> 50
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 50 -> 51
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 51 -> 52
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 39 -> 40
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 47
9999 mem: storing 1114 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 7
9999 mem: location 1307 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1114
9999 mem: storing 32 in location 1114
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1307 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1115
9999 mem: storing 7 in location 1115
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 52 -> 51
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 51 -> 52
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 52 -> 53
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 40 -> 41
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 48
9999 mem: storing 1116 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 7
9999 mem: location 1307 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1116
9999 mem: storing 32 in location 1116
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1307 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1117
9999 mem: storing 7 in location 1117
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 53 -> 52
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 52 -> 53
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
9990 schedule: clear-line-delimited/render/new-editor/scenario_editor-can-undo-page-up
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 53 -> 54
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 41 -> 42
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 49
9999 mem: storing 1118 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 7
9999 mem: location 1307 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1118
9999 mem: storing 32 in location 1118
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1307 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1119
9999 mem: storing 7 in location 1119
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 54 -> 53
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 53 -> 54
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 5
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 54 -> 55
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 5
9999 mem: location 1283 is 1015
9999 mem: storing 5 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 54 -> 55
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1205
9999 mem: incrementing refcount of 1231: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1231
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1206
9999 mem: incrementing refcount of 1235: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 7 -> 6
9999 mem: storing 1235 in location 1255
9999 mem: incrementing refcount of 1235: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 9 -> 8
9999 mem: storing 1231 in location 1256
9999 mem: incrementing refcount of 1231: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1235
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 5
9999 mem: location 1253 is 5
9999 mem: storing 1 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1271
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1235
9999 mem: location 1271 is 1161
9999 mem: storing 1235 in location 1161
9999 mem: incrementing refcount of 1235: 6 -> 7
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 5
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 0
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1272
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1264 is 0
9999 mem: location 1272 is 1
9999 mem: storing 0 in location 1273
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 5
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1274
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: storing 0 in location 1275
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1276
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1258 is 5
9999 mem: location 1276 is 1165
9999 mem: storing 5 in location 1165
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1258 is 5
9999 mem: location 1259 is 0
9999 mem: location 1250 is 1012
9999 mem: location 1251 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 5
9998 run: result 1 is 0
9998 run: result 2 is 1012
9998 run: result 3 is 1158
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1149
9999 mem: incrementing refcount of 1012: 54 -> 55
9999 mem: decrementing refcount of 1158: 3 -> 2
9999 mem: storing 1158 in location 1152
9999 mem: incrementing refcount of 1158: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1157
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1157 is 1168
9999 mem: storing 1 in location 1168
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1152 is 1158
9999 mem: location 1149 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 2
9999 mem: incrementing refcount of 1158: 3 -> 4
 102 run: editor-render {screen: ("address" "shared" "screen")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1312
9999 mem: storing 7 in location 1313
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 55 -> 56
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1316
9999 mem: incrementing refcount of 1158: 4 -> 5
 103 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1317
 103 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1318
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1247
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 56 -> 57
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1251
9999 mem: incrementing refcount of 1158: 5 -> 6
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1251 is 1158
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1252
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1250 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 57 -> 58
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 105 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1253
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1254
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1177
9999 mem: storing 1177 in location 1255
9999 mem: incrementing refcount of 1177: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1177
9999 mem: storing 1177 in location 1256
9999 mem: incrementing refcount of 1177: 9 -> 10
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1205
9999 mem: incrementing refcount of 1177: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1177
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1198
9999 mem: location 1180 is 0
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1177: 11 -> 10
9999 mem: storing 1198 in location 1255
9999 mem: incrementing refcount of 1198: 9 -> 10
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1260
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1261
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1262
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 58 -> 59
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 59 -> 58
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 58 -> 59
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1198
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 0
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1265
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1177
9999 mem: location 1262 is 1162
9999 mem: decrementing refcount of 1177: 10 -> 9
9999 mem: storing 1177 in location 1162
9999 mem: incrementing refcount of 1177: 9 -> 10
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1255 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 97
9999 mem: storing 97 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 97
9999 mem: storing 0 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 97
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 59 -> 60
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 97
9999 mem: storing 0 in location 1299
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1302
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 42 -> 43
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 97
9999 mem: storing 0 in location 1305
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 10
9999 mem: storing 1040 in location 1307
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1308
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 97
9999 mem: location 1308 is 1040
9999 mem: storing 97 in location 1040
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1309
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1041
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1198: 11 -> 10
9999 mem: storing 1207 in location 1255
9999 mem: incrementing refcount of 1207: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1177
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1205
9999 mem: incrementing refcount of 1177: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1177
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1198
9999 mem: location 1180 is 0
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1177: 11 -> 10
9999 mem: storing 1198 in location 1256
9999 mem: incrementing refcount of 1198: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1207
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1265
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1255 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1268
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 60 -> 61
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 61 -> 62
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 43 -> 44
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 11
9999 mem: storing 1042 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1042
9999 mem: storing 32 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 62 -> 61
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 61 -> 62
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 62 -> 63
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 44 -> 45
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 12
9999 mem: storing 1044 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1044
9999 mem: storing 32 in location 1044
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1045
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 63 -> 62
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 62 -> 63
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 63 -> 64
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 45 -> 46
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 13
9999 mem: storing 1046 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1046
9999 mem: storing 32 in location 1046
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1047
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 64 -> 63
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 63 -> 64
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 64 -> 65
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
9990 schedule: print/clear-line-delimited/render/editor-render/scenario_editor-can-undo-page-up
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 46 -> 47
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 14
9999 mem: storing 1048 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1048
9999 mem: storing 32 in location 1048
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1049
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 65 -> 64
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 64 -> 65
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 65 -> 66
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 47 -> 48
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 15
9999 mem: storing 1050 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1050
9999 mem: storing 32 in location 1050
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1051
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 66 -> 65
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 65 -> 66
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 66 -> 67
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 48 -> 49
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 16
9999 mem: storing 1052 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1052
9999 mem: storing 32 in location 1052
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1053
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 67 -> 66
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 66 -> 67
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 67 -> 68
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 49 -> 50
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 17
9999 mem: storing 1054 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1054
9999 mem: storing 32 in location 1054
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1055
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 68 -> 67
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 67 -> 68
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 68 -> 69
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 50 -> 51
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 18
9999 mem: storing 1056 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1056
9999 mem: storing 32 in location 1056
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1057
9999 mem: storing 7 in location 1057
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 69 -> 68
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 68 -> 69
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 69 -> 70
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 51 -> 52
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 19
9999 mem: storing 1058 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1058
9999 mem: storing 32 in location 1058
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1059
9999 mem: storing 7 in location 1059
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 70 -> 69
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 69 -> 70
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 2
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 70 -> 71
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 2
9999 mem: location 1283 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 71 -> 70
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 70 -> 71
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 11 -> 10
9999 mem: storing 1211 in location 1255
9999 mem: incrementing refcount of 1211: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1198: 13 -> 12
9999 mem: storing 1207 in location 1256
9999 mem: incrementing refcount of 1207: 11 -> 12
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1211
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1255 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 98
9999 mem: storing 98 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 98
9999 mem: storing 0 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 98
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 71 -> 72
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 98
9999 mem: storing 0 in location 1299
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1302
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 52 -> 53
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 98
9999 mem: storing 0 in location 1305
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 20
9999 mem: storing 1060 in location 1307
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 98
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1308
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 98
9999 mem: location 1308 is 1060
9999 mem: storing 98 in location 1060
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 98
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1309
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1061
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 11 -> 10
9999 mem: storing 1215 in location 1255
9999 mem: incrementing refcount of 1215: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 13 -> 12
9999 mem: storing 1211 in location 1256
9999 mem: incrementing refcount of 1211: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1215
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1255 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 10
9999 mem: storing 10 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 72 -> 73
9990 schedule: clear-line-delimited/render/editor-render/scenario_editor-can-undo-page-up
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 73 -> 74
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 53 -> 54
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 21
9999 mem: storing 1062 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1062
9999 mem: storing 32 in location 1062
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1063
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 74 -> 73
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 73 -> 74
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 74 -> 75
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 54 -> 55
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 22
9999 mem: storing 1064 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1064
9999 mem: storing 32 in location 1064
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1065
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 75 -> 74
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 74 -> 75
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 75 -> 76
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 55 -> 56
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 23
9999 mem: storing 1066 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1066
9999 mem: storing 32 in location 1066
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1067
9999 mem: storing 7 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 76 -> 75
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 75 -> 76
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 76 -> 77
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 56 -> 57
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 24
9999 mem: storing 1068 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1068
9999 mem: storing 32 in location 1068
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1069
9999 mem: storing 7 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 77 -> 76
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 76 -> 77
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 77 -> 78
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 57 -> 58
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 25
9999 mem: storing 1070 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1070
9999 mem: storing 32 in location 1070
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1071
9999 mem: storing 7 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 78 -> 77
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 77 -> 78
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 78 -> 79
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 58 -> 59
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 26
9999 mem: storing 1072 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1072
9999 mem: storing 32 in location 1072
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1073
9999 mem: storing 7 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 79 -> 80
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 59 -> 60
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 27
9999 mem: storing 1074 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1074
9999 mem: storing 32 in location 1074
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1075
9999 mem: storing 7 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 80 -> 79
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 60 -> 61
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 28
9999 mem: storing 1076 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1076
9999 mem: storing 32 in location 1076
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1077
9999 mem: storing 7 in location 1077
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 80 -> 81
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 81 -> 82
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 61 -> 62
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 29
9999 mem: storing 1078 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1078
9999 mem: storing 32 in location 1078
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1079
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
9990 schedule: print/clear-line-delimited/render/editor-render/scenario_editor-can-undo-page-up
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 82 -> 81
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 81 -> 82
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 3
9999 mem: location 1283 is 1015
9999 mem: storing 3 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 83 -> 82
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 82 -> 83
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 11 -> 10
9999 mem: storing 1219 in location 1255
9999 mem: incrementing refcount of 1219: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 13 -> 12
9999 mem: storing 1215 in location 1256
9999 mem: incrementing refcount of 1215: 11 -> 12
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1219
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1255 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is "character"
9999 mem: location 1220 is 99
9999 mem: storing 99 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 99
9999 mem: storing 0 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 99
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 83 -> 84
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 99
9999 mem: storing 0 in location 1299
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1302
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 62 -> 63
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 99
9999 mem: storing 0 in location 1305
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 30
9999 mem: storing 1080 in location 1307
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 99
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1308
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 99
9999 mem: location 1308 is 1080
9999 mem: storing 99 in location 1080
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 99
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1309
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1081
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1206
9999 mem: incrementing refcount of 1223: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 11 -> 10
9999 mem: storing 1223 in location 1255
9999 mem: incrementing refcount of 1223: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 13 -> 12
9999 mem: storing 1219 in location 1256
9999 mem: incrementing refcount of 1219: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1223
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1255 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 10
9999 mem: storing 10 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 84 -> 85
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 85 -> 86
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 63 -> 64
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 31
9999 mem: storing 1082 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1082
9999 mem: storing 32 in location 1082
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1083
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 86 -> 85
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 85 -> 86
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 86 -> 87
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 64 -> 65
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 32
9999 mem: storing 1084 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1084
9999 mem: storing 32 in location 1084
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1085
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 86 -> 87
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 87 -> 88
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 65 -> 66
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 33
9999 mem: storing 1086 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1086
9999 mem: storing 32 in location 1086
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1087
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 88 -> 87
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 87 -> 88
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 88 -> 89
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 66 -> 67
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 34
9999 mem: storing 1088 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1088
9999 mem: storing 32 in location 1088
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1089
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 88 -> 89
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 89 -> 90
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 67 -> 68
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 35
9999 mem: storing 1090 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1090
9999 mem: storing 32 in location 1090
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1091
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 89 -> 90
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 90 -> 91
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
9990 schedule: print/clear-line-delimited/render/editor-render/scenario_editor-can-undo-page-up
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 68 -> 69
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 36
9999 mem: storing 1092 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1092
9999 mem: storing 32 in location 1092
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1093
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 91 -> 90
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 90 -> 91
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 91 -> 92
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 69 -> 70
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 37
9999 mem: storing 1094 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1094
9999 mem: storing 32 in location 1094
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1095
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 92 -> 91
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 91 -> 92
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 92 -> 93
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 70 -> 71
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 38
9999 mem: storing 1096 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1096
9999 mem: storing 32 in location 1096
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1097
9999 mem: storing 7 in location 1097
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 93 -> 92
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 92 -> 93
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 93 -> 94
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 71 -> 72
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 39
9999 mem: storing 1098 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1098
9999 mem: storing 32 in location 1098
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1099
9999 mem: storing 7 in location 1099
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 94 -> 93
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 93 -> 94
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 4
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 94 -> 95
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 4
9999 mem: location 1283 is 1015
9999 mem: storing 4 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 95 -> 94
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 94 -> 95
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 11 -> 10
9999 mem: storing 1227 in location 1255
9999 mem: incrementing refcount of 1227: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1206
9999 mem: incrementing refcount of 1223: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 13 -> 12
9999 mem: storing 1223 in location 1256
9999 mem: incrementing refcount of 1223: 11 -> 12
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1227
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 4
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is "character"
9999 mem: location 1228 is 100
9999 mem: storing 100 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 100
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 95 -> 96
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1299
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1302
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 72 -> 73
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1305
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 40
9999 mem: storing 1100 in location 1307
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 100
9999 mem: location 1101 is 7
9999 mem: location 1307 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1308
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 100
9999 mem: location 1308 is 1100
9999 mem: storing 100 in location 1100
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 100
9999 mem: location 1101 is 7
9999 mem: location 1307 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1309
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1101
9999 mem: storing 7 in location 1101
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 11 -> 10
9999 mem: storing 1231 in location 1255
9999 mem: incrementing refcount of 1231: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 13 -> 12
9999 mem: storing 1227 in location 1256
9999 mem: incrementing refcount of 1227: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1231
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 4
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is "character"
9999 mem: location 1232 is 10
9999 mem: storing 10 in location 1266
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 96 -> 97
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 97 -> 98
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 73 -> 74
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 41
9999 mem: storing 1102 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1307 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1102
9999 mem: storing 32 in location 1102
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1307 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1103
9999 mem: storing 7 in location 1103
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 97 -> 98
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 98 -> 99
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 74 -> 75
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 42
9999 mem: storing 1104 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1307 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1104
9999 mem: storing 32 in location 1104
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1307 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1105
9999 mem: storing 7 in location 1105
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 98 -> 99
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 99 -> 100
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
9990 schedule: print/clear-line-delimited/render/editor-render/scenario_editor-can-undo-page-up
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 75 -> 76
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 43
9999 mem: storing 1106 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1307 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1106
9999 mem: storing 32 in location 1106
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1307 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1107
9999 mem: storing 7 in location 1107
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 100 -> 99
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 99 -> 100
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 100 -> 101
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 76 -> 77
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 44
9999 mem: storing 1108 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1307 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1108
9999 mem: storing 32 in location 1108
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1307 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1109
9999 mem: storing 7 in location 1109
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 101 -> 100
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 100 -> 101
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 101 -> 102
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 77 -> 78
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 45
9999 mem: storing 1110 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1307 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1110
9999 mem: storing 32 in location 1110
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1307 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1111
9999 mem: storing 7 in location 1111
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 102 -> 101
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 101 -> 102
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 102 -> 103
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 78 -> 79
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 46
9999 mem: storing 1112 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1307 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1112
9999 mem: storing 32 in location 1112
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1307 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1113
9999 mem: storing 7 in location 1113
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 103 -> 102
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 102 -> 103
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 103 -> 104
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 79 -> 80
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 47
9999 mem: storing 1114 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1307 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1114
9999 mem: storing 32 in location 1114
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1307 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1115
9999 mem: storing 7 in location 1115
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 104 -> 103
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 103 -> 104
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 104 -> 105
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 80 -> 81
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 48
9999 mem: storing 1116 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1307 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1116
9999 mem: storing 32 in location 1116
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1307 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1117
9999 mem: storing 7 in location 1117
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 105 -> 104
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 104 -> 105
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 105 -> 106
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 81 -> 82
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 49
9999 mem: storing 1118 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1307 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1118
9999 mem: storing 32 in location 1118
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1307 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1119
9999 mem: storing 7 in location 1119
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 106 -> 105
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 105 -> 106
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 5
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 106 -> 107
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 5
9999 mem: location 1283 is 1015
9999 mem: storing 5 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 107 -> 106
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 106 -> 107
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1205
9999 mem: incrementing refcount of 1231: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1231
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1206
9999 mem: incrementing refcount of 1235: 7 -> 8
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 11 -> 10
9999 mem: storing 1235 in location 1255
9999 mem: incrementing refcount of 1235: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 13 -> 12
9999 mem: storing 1231 in location 1256
9999 mem: incrementing refcount of 1231: 11 -> 12
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1235
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 5
9999 mem: location 1253 is 5
9999 mem: storing 1 in location 1263
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1271
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1235
9999 mem: location 1271 is 1161
9999 mem: decrementing refcount of 1235: 9 -> 8
9999 mem: storing 1235 in location 1161
9999 mem: incrementing refcount of 1235: 8 -> 9
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 5
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 0
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1272
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1264 is 0
9999 mem: location 1272 is 1
9999 mem: storing 0 in location 1273
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 5
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1274
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: storing 0 in location 1275
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1276
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1258 is 5
9999 mem: location 1276 is 1165
9999 mem: storing 5 in location 1165
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1258 is 5
9999 mem: location 1259 is 0
9999 mem: location 1250 is 1012
9999 mem: location 1251 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 5
9998 run: result 1 is 0
9999 mem: storing 5 in location 1319
9999 mem: storing 0 in location 1320
 103 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1012
9999 mem: location 1320 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 107 -> 108
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1185
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 108 -> 109
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 109 -> 108
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 108 -> 109
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 109 -> 110
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 110 -> 109
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 109 -> 110
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 110 -> 111
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/editor-render/scenario_editor-can-undo-page-up
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 111 -> 110
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 110 -> 111
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 111 -> 112
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 112 -> 111
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 111 -> 112
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 112 -> 113
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 113 -> 112
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 112 -> 113
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 113 -> 114
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 114 -> 113
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 113 -> 114
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 114 -> 115
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 115 -> 114
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 114 -> 115
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 115 -> 116
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 116 -> 115
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 115 -> 116
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 116 -> 117
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 117 -> 116
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 116 -> 117
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 117 -> 118
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 118 -> 117
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 117 -> 118
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1319 is 5
9999 mem: storing 6 in location 1319
 103 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1315 is 1012
9999 mem: location 1319 is 6
9999 mem: location 1317 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1321
9999 mem: storing 12 in location 1322
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1324
9999 mem: incrementing refcount of 1012: 118 -> 119
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1325
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1326
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1327
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1328
9999 mem: storing 1 in location 1329
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1330
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1325 is 6
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 119 -> 120
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 6
9999 mem: location 1283 is 1015
9999 mem: storing 6 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 120 -> 119
9999 mem: storing 1012 in location 1324
9999 mem: incrementing refcount of 1012: 119 -> 120
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 0
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 120 -> 121
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 1
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 121 -> 122
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 1
9999 mem: storing 2 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 2
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 122 -> 123
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 2
9999 mem: storing 3 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 3
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 123 -> 124
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 3
9999 mem: storing 4 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 4
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 124 -> 125
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 4
9999 mem: storing 5 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 5
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 125 -> 126
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 5
9999 mem: storing 6 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 6
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 126 -> 127
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 6
9999 mem: storing 7 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 7
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 127 -> 128
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 7
9999 mem: storing 8 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 8
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 128 -> 129
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 8
9999 mem: storing 9 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 9
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 129 -> 130
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-can-undo-page-up
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 9
9999 mem: storing 10 in location 1326
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 10
9999 mem: location 1327 is 9
9999 mem: storing 0 in location 1334
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1324 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1319 is 6
9999 mem: storing 7 in location 1319
 103 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1315 is 1012
9999 mem: location 1319 is 7
9999 mem: location 1317 is 0
9999 mem: location 1317 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 130 -> 131
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1281
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1283
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1284
 104 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 7
9999 mem: location 1282 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1335
9999 mem: storing 6 in location 1336
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1338
9999 mem: incrementing refcount of 1012: 131 -> 132
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1339
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1338 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1341
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1339 is 7
9999 mem: location 1341 is 1015
9999 mem: storing 7 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1342
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1340 is 0
9999 mem: location 1342 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1338 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 132 -> 131
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 131 -> 132
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1282 is 0
9999 mem: location 1284 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 132 -> 133
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 133 -> 134
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 134 -> 133
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 133 -> 134
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 134 -> 135
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 135 -> 134
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 134 -> 135
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 135 -> 136
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 136 -> 135
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 135 -> 136
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 136 -> 137
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 137 -> 136
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 136 -> 137
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 137 -> 138
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 138 -> 137
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 137 -> 138
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 138 -> 139
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 139 -> 138
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 138 -> 139
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 139 -> 140
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 140 -> 139
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 139 -> 140
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 140 -> 141
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 141 -> 140
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 140 -> 141
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 141 -> 142
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 142 -> 141
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 141 -> 142
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 142 -> 143
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 143 -> 142
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 142 -> 143
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 7
9999 mem: location 1283 is 0
9999 mem: location 1284 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1343
9999 mem: storing 7 in location 1344
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 143 -> 144
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1347
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1348
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1349
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1347 is 7
9999 mem: storing 8 in location 1347
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1346 is 1012
9999 mem: location 1347 is 8
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1335
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1338
9999 mem: incrementing refcount of 1012: 144 -> 145
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1339
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1338 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1341
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1339 is 8
9999 mem: location 1341 is 1015
9999 mem: storing 8 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1342
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1340 is 0
9999 mem: location 1342 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1338 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 145 -> 144
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 144 -> 145
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 145 -> 146
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 106 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1350
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1347 is 8
9999 mem: location 1350 is 5
9999 mem: storing 1 in location 1351
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1346 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1158
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    press page-down\n    press page-up\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-down: ()}
9992 load: after rewriting: press {page-down: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-up: ()}
9992 load: after rewriting: press {page-up: ()}
9999 mem: storing 'press' event starting at 1354
9999 mem: storing 'press' event starting at 1358
9999 mem: storing console in 1362
9999 mem: storing console data in 1364
 102 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1362
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1365
9999 mem: storing 14 in location 1366
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 146 -> 147
 103 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1362 in location 1369
9999 mem: incrementing refcount of 1362: 0 -> 1
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1370
9999 mem: incrementing refcount of 1158: 6 -> 7
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1371
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1372
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1368 is 1012
9999 mem: location 1371 is 1
9999 mem: location 1372 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 147 -> 148
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 148 -> 147
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 147 -> 148
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1369 is 1362
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1321
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1362 in location 1324
9999 mem: incrementing refcount of 1362: 1 -> 2
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1324 is 1362
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9999 mem: location 1363 is 0
9999 mem: location 1364 is 1352
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9998 run: address to copy is 1363
9999 mem: storing 1363 in location 1325
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9999 mem: location 1363 is 0
9999 mem: location 1364 is 1352
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9998 run: address to copy is 1364
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1364 is 1352
9999 mem: storing 1352 in location 1326
9999 mem: incrementing refcount of 1352: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1326 is 1352
9999 mem: skipping refcount at 1352
9999 mem: storing 2 in location 1327
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1325 is 1363
9999 mem: location 1363 is 0
9999 mem: location 1327 is 2
9999 mem: storing 0 in location 1328
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1326 is 1352
9999 mem: skipping refcount at 1352
9998 run: base address is 1353
9999 mem: location 1325 is 1363
9999 mem: location 1363 is 0
9998 run: address to copy is 1354
9998 run: its type is event
9999 mem: location 1354 is 1
9999 mem: location 1355 is 65518
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: storing 1 in location 1330
9999 mem: storing 65518 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1325 is 1363
9999 mem: location 1363 is 0
9999 mem: location 1325 is 1363
9999 mem: storing 1 in location 1363
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1330 is 1
9999 mem: location 1331 is 65518
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1324 is 1362
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1362
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1373
9999 mem: storing 65518 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: decrementing refcount of 1362: 2 -> 1
9999 mem: storing 1362 in location 1369
9999 mem: incrementing refcount of 1362: 1 -> 2
9999 mem: storing 1 in location 1377
9999 mem: storing 0 in location 1378
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1373 is 1
9999 mem: location 1374 is 65518
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 mem: storing 0 in location 1379
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1368 is 1012
9999 mem: location 1370 is 1158
9999 mem: location 1373 is 1
9999 mem: location 1374 is 65518
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1381
9999 mem: storing 85 in location 1382
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1384
9999 mem: incrementing refcount of 1012: 148 -> 149
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1385
9999 mem: incrementing refcount of 1158: 7 -> 8
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1386
9999 mem: storing 65518 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1390
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1385 is 1158
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1384 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 149 -> 150
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1206
 105 run: return {width: "number"}
9999 mem: location 1206 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1391
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1384 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 150 -> 151
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 105 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1392
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1393
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1394
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1395
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1396
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1397
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1398
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1397 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1399
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1386 is 1
9999 mem: location 1387 is 65518
9999 mem: location 1388 is 0
9999 mem: location 1389 is 0
9999 mem: storing 0 in location 1400
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 438
 104 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1386 is 1
9999 mem: location 1387 is 65518
9999 mem: location 1388 is 0
9999 mem: location 1389 is 0
9999 mem: storing 1387 in location 1454
 104 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1454 is 1387
 104 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1454 is 1387
9999 mem: location 1387 is 65518
9999 mem: storing 0 in location 1417
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 482
 104 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1454 is 1387
9999 mem: location 1387 is 65518
9999 mem: storing 1 in location 1433
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 1
9998 run: jump-unless fell through
 104 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1418
 104 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1418 is 1160
9999 mem: location 1160 is 1177
9999 mem: storing 1177 in location 1419
9999 mem: incrementing refcount of 1177: 10 -> 11
 104 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1420
 104 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1421
 104 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1177
9999 mem: storing 1177 in location 1422
9999 mem: incrementing refcount of 1177: 11 -> 12
 104 run: page-down {editor: ("address" "shared" "editor-data")}
9999 mem: location 1385 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1312
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1315
9999 mem: incrementing refcount of 1158: 8 -> 9
 105 run: {bottom-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1315 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1315 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1235
9999 mem: storing 1235 in location 1316
9999 mem: incrementing refcount of 1235: 9 -> 10
 105 run: jump-if {bottom-of-screen: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1316 is 1235
9998 run: jumping to instruction 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1315 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1315 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1317
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {bottom-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1235
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1205
9999 mem: incrementing refcount of 1235: 10 -> 11
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1235
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1205 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 12 -> 13
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1231
9999 mem: location 1317 is 1162
9999 mem: decrementing refcount of 1177: 12 -> 11
9999 mem: storing 1231 in location 1162
9999 mem: incrementing refcount of 1231: 13 -> 14
 105 run: {last: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1317 is 1162
9999 mem: location 1162 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1317 is 1162
9999 mem: location 1162 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is "character"
9999 mem: location 1232 is 10
9999 mem: storing 10 in location 1318
 105 run: {newline?: "boolean"} <- equal {last: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1318 is 10
9999 mem: storing 1 in location 1319
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1317 is 1162
9999 mem: location 1162 is 1231
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1205
9999 mem: incrementing refcount of 1231: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1231
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 12 -> 13
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1227
9999 mem: location 1317 is 1162
9999 mem: decrementing refcount of 1231: 15 -> 14
9999 mem: storing 1227 in location 1162
9999 mem: incrementing refcount of 1227: 13 -> 14
 105 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1315 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1468
9999 mem: storing 9 in location 1469
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1471
9999 mem: incrementing refcount of 1158: 9 -> 10
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1471 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1471 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1472
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1471 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1471 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1473
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1472 is 0
9999 mem: location 1473 is 1167
9999 mem: storing 0 in location 1167
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1471 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1471 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1474
 106 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1471 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1471 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1159 is 1177
9999 mem: storing 1177 in location 1475
9999 mem: incrementing refcount of 1177: 11 -> 12
 106 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1474 is 1162
9999 mem: location 1162 is 1227
9999 mem: location 1475 is 1177
9999 mem: storing 0 in location 1476
 106 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jump-if fell through
 106 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1474 is 1162
9999 mem: location 1162 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1474 is 1162
9999 mem: location 1162 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is "character"
9999 mem: location 1228 is 100
9999 mem: storing 100 in location 1477
 106 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1477 is 100
9999 mem: storing 0 in location 1478
 106 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1474 is 1162
9999 mem: location 1162 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1223
9999 mem: storing 1223 in location 1206
9999 mem: incrementing refcount of 1223: 12 -> 13
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: location 1474 is 1162
9999 mem: decrementing refcount of 1227: 15 -> 14
9999 mem: storing 1223 in location 1162
9999 mem: incrementing refcount of 1223: 13 -> 14
 106 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1474 is 1162
9999 mem: location 1162 is 1223
 106 run: jump {: "offset"}
9998 run: jumping to instruction 8
9990 schedule: move-to-start-of-line/page-down/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1474 is 1162
9999 mem: location 1162 is 1223
9999 mem: location 1475 is 1177
9999 mem: storing 0 in location 1476
 106 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jump-if fell through
 106 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1474 is 1162
9999 mem: location 1162 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1474 is 1162
9999 mem: location 1162 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 10
9999 mem: storing 10 in location 1477
 106 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1477 is 10
9999 mem: storing 1 in location 1478
 106 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 1
9998 run: jumping to instruction 16
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1471 is 1158
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 5
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1315 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1315 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1320
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1317 is 1162
9999 mem: location 1162 is 1223
9999 mem: location 1320 is 1160
9999 mem: decrementing refcount of 1177: 12 -> 11
9999 mem: storing 1223 in location 1160
9999 mem: incrementing refcount of 1223: 14 -> 15
 105 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1315 is 1158
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1423
 104 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1424
 104 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1425
 104 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1223
9999 mem: storing 1223 in location 1426
9999 mem: incrementing refcount of 1223: 15 -> 16
 104 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 514
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
9999 mem: storing 1000 in location 1403
9999 mem: incrementing refcount of 1000: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1420 is 1
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1177
9999 mem: location 1424 is 1
9999 mem: location 1425 is 0
9999 mem: location 1426 is 1223
9999 mem: location 1423 is 0
9999 mem: location 1403 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1403 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1177 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 1223 in location 1007
9999 mem: storing 0 in location 1008
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1385 is 1158
9999 mem: location 1403 is 1000
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1194
9999 mem: incrementing refcount of 1158: 10 -> 11
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1195
9999 mem: incrementing refcount of 1000: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1194 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1194 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1196
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1195 is 1000
9999 mem: location 1196 is 1169
9999 mem: location 1169 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1171
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1174
9999 mem: incrementing refcount of 1000: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1175
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1479
9999 mem: storing 1479 in location 1176
9999 mem: incrementing refcount of 1479: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1174 is 1000
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1479
9999 mem: skipping refcount at 1479
9999 mem: location 1176 is 1479
9999 mem: skipping refcount at 1479
9999 mem: storing 1000 in location 1480
9999 mem: storing 0 in location 1481
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1176 is 1479
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1479
9999 mem: location 1196 is 1169
9999 mem: storing 1479 in location 1169
9999 mem: incrementing refcount of 1479: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1194 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1194 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1197
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1197 is 1170
9999 mem: storing 0 in location 1170
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1194 is 1158
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 11 -> 10
9999 mem: storing 1158 in location 1385
9999 mem: incrementing refcount of 1158: 10 -> 11
 104 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1418 is 1160
9999 mem: location 1160 is 1223
9999 mem: location 1419 is 1177
9999 mem: storing 0 in location 1432
 104 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1432 is 0
9999 mem: storing 1 in location 1390
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1384 is 1012
9999 mem: location 1385 is 1158
9999 mem: location 1390 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 151 -> 150
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 150 -> 151
9999 mem: decrementing refcount of 1158: 11 -> 10
9999 mem: storing 1158 in location 1370
9999 mem: incrementing refcount of 1158: 10 -> 11
9999 mem: storing 1 in location 1380
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 1
9998 run: jump-unless fell through
 103 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1368 is 1012
9999 mem: location 1370 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1312
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 151 -> 152
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1316
9999 mem: incrementing refcount of 1158: 11 -> 12
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1317
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1318
 104 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1247
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 152 -> 153
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1251
9999 mem: incrementing refcount of 1158: 12 -> 13
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1251 is 1158
9998 run: jumping to instruction 5
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1252
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1250 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 153 -> 154
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 106 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1253
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1254
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1223
9999 mem: storing 1223 in location 1255
9999 mem: incrementing refcount of 1223: 16 -> 17
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1223
9999 mem: storing 1223 in location 1256
9999 mem: incrementing refcount of 1223: 17 -> 18
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1223
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 19 -> 18
9999 mem: storing 1227 in location 1255
9999 mem: incrementing refcount of 1227: 15 -> 16
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 105 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1258
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1260
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1261
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1262
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 154 -> 155
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 155 -> 154
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 154 -> 155
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1227
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 0
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1265
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1223
9999 mem: location 1262 is 1162
9999 mem: decrementing refcount of 1223: 18 -> 17
9999 mem: storing 1223 in location 1162
9999 mem: incrementing refcount of 1223: 17 -> 18
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is "character"
9999 mem: location 1228 is 100
9999 mem: storing 100 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 100
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1123
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1124
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1123 is 7
9999 mem: storing 1 in location 1125
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1124 is 100
9999 mem: storing 0 in location 1126
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1126 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1127
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1124 is 100
9999 mem: storing 0 in location 1129
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1129 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1130
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1130 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1123 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 100
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 155 -> 156
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 100
  90 print-character: 100 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 82 -> 83
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 10
9999 mem: storing 1040 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 100
9999 mem: location 1308 is 1040
9999 mem: storing 100 in location 1040
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 100
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1041
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1227
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 17 -> 16
9999 mem: storing 1231 in location 1255
9999 mem: incrementing refcount of 1231: 15 -> 16
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1223
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 19 -> 18
9999 mem: storing 1227 in location 1256
9999 mem: incrementing refcount of 1227: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1231
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1265
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is "character"
9999 mem: location 1232 is 10
9999 mem: storing 10 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1123
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1124
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1123 is 7
9999 mem: storing 1 in location 1125
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1124 is 10
9999 mem: storing 0 in location 1126
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1126 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1127
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1124 is 10
9999 mem: storing 0 in location 1129
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1129 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1130
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1130 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1123 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 105 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1268
 105 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jumping to instruction 44
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 156 -> 157
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 157 -> 158
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 83 -> 84
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 11
9999 mem: storing 1042 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1042
9999 mem: storing 32 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 158 -> 157
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 157 -> 158
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 158 -> 159
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 84 -> 85
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 12
9999 mem: storing 1044 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1044
9999 mem: storing 32 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 159 -> 158
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 158 -> 159
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 159 -> 160
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 85 -> 86
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 13
9999 mem: storing 1046 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1046
9999 mem: storing 32 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 160 -> 159
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 159 -> 160
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 160 -> 161
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 86 -> 87
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 14
9999 mem: storing 1048 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1048
9999 mem: storing 32 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 161 -> 160
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 160 -> 161
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 161 -> 162
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 87 -> 88
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 15
9999 mem: storing 1050 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 162 -> 161
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 161 -> 162
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 162 -> 163
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 88 -> 89
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 16
9999 mem: storing 1052 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1052
9999 mem: storing 32 in location 1052
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 163 -> 162
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 162 -> 163
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 163 -> 164
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 89 -> 90
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 17
9999 mem: storing 1054 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 164 -> 163
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 163 -> 164
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 164 -> 165
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 90 -> 91
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 18
9999 mem: storing 1056 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1056
9999 mem: storing 32 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 165 -> 164
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 164 -> 165
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 165 -> 166
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 91 -> 92
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 19
9999 mem: storing 1058 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1058
9999 mem: storing 32 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 166 -> 165
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 165 -> 166
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 2
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 166 -> 167
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 2
9999 mem: location 1283 is 1015
9999 mem: storing 2 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 167 -> 166
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 166 -> 167
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1231
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1205
9999 mem: incrementing refcount of 1231: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1231
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1206
9999 mem: incrementing refcount of 1235: 11 -> 12
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 17 -> 16
9999 mem: storing 1235 in location 1255
9999 mem: incrementing refcount of 1235: 12 -> 13
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1227
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 19 -> 18
9999 mem: storing 1231 in location 1256
9999 mem: incrementing refcount of 1231: 17 -> 18
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1235
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1255 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9998 run: its type is "character"
9999 mem: location 1236 is 101
9999 mem: storing 101 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 101
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1123
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1124
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1123 is 7
9999 mem: storing 1 in location 1125
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1124 is 101
9999 mem: storing 0 in location 1126
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1126 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1127
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1124 is 101
9999 mem: storing 0 in location 1129
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1129 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1130
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1130 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1123 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 101
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 167 -> 168
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 101
  90 print-character: 101 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 101
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 92 -> 93
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 101
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 20
9999 mem: storing 1060 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 98
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 101
9999 mem: location 1308 is 1060
9999 mem: storing 101 in location 1060
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 101
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1061
9999 mem: storing 7 in location 1061
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1235
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1205
9999 mem: incrementing refcount of 1235: 13 -> 14
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1235
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1205 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1206
9999 mem: incrementing refcount of 1239: 4 -> 5
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 14 -> 13
9999 mem: storing 1239 in location 1255
9999 mem: incrementing refcount of 1239: 5 -> 6
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1231
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1205
9999 mem: incrementing refcount of 1231: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1231
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1206
9999 mem: incrementing refcount of 1235: 13 -> 14
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 19 -> 18
9999 mem: storing 1235 in location 1256
9999 mem: incrementing refcount of 1235: 14 -> 15
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1239
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 1243
9999 mem: location 1242 is 1235
9999 mem: location 1255 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9998 run: its type is "character"
9999 mem: location 1240 is 10
9999 mem: storing 10 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1123
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1124
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1123 is 7
9999 mem: storing 1 in location 1125
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1124 is 10
9999 mem: storing 0 in location 1126
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1126 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1127
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1124 is 10
9999 mem: storing 0 in location 1129
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1129 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1130
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1130 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1123 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 168 -> 169
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 169 -> 170
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 93 -> 94
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 21
9999 mem: storing 1062 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1062
9999 mem: storing 32 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1063
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 170 -> 169
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 169 -> 170
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
9990 schedule: clear-line-delimited/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 170 -> 171
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 94 -> 95
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 22
9999 mem: storing 1064 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1064
9999 mem: storing 32 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1065
9999 mem: storing 7 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 171 -> 170
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 170 -> 171
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 171 -> 172
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 95 -> 96
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 23
9999 mem: storing 1066 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1066
9999 mem: storing 32 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1067
9999 mem: storing 7 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 172 -> 171
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 171 -> 172
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 172 -> 173
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 96 -> 97
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 24
9999 mem: storing 1068 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1068
9999 mem: storing 32 in location 1068
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1069
9999 mem: storing 7 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 173 -> 172
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 172 -> 173
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 173 -> 174
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 97 -> 98
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 25
9999 mem: storing 1070 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1070
9999 mem: storing 32 in location 1070
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1071
9999 mem: storing 7 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 174 -> 173
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 173 -> 174
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 174 -> 175
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 98 -> 99
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 26
9999 mem: storing 1072 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1072
9999 mem: storing 32 in location 1072
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1073
9999 mem: storing 7 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 175 -> 174
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 174 -> 175
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 175 -> 176
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 99 -> 100
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 27
9999 mem: storing 1074 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1074
9999 mem: storing 32 in location 1074
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1075
9999 mem: storing 7 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 176 -> 175
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 175 -> 176
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 176 -> 177
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 100 -> 101
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 28
9999 mem: storing 1076 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1076
9999 mem: storing 32 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 177 -> 176
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 176 -> 177
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 177 -> 178
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 101 -> 102
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 29
9999 mem: storing 1078 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1078
9999 mem: storing 32 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 178 -> 177
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 177 -> 178
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 178 -> 179
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 3
9999 mem: location 1283 is 1015
9999 mem: storing 3 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 179 -> 178
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 178 -> 179
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1239
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1205
9999 mem: incrementing refcount of 1239: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1239
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 1243
9999 mem: location 1242 is 1235
9999 mem: location 1205 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 1243
9999 mem: storing 1243 in location 1206
9999 mem: incrementing refcount of 1243: 3 -> 4
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1243
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1243
9999 mem: decrementing refcount of 1239: 7 -> 6
9999 mem: storing 1243 in location 1255
9999 mem: incrementing refcount of 1243: 4 -> 5
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1235
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1205
9999 mem: incrementing refcount of 1235: 15 -> 16
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1235
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1205 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1206
9999 mem: incrementing refcount of 1239: 6 -> 7
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 16 -> 15
9999 mem: storing 1239 in location 1256
9999 mem: incrementing refcount of 1239: 7 -> 8
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1243
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1243
9999 mem: skipping refcount at 1243
9999 mem: location 1244 is 102
9999 mem: location 1245 is 0
9999 mem: location 1246 is 1239
9999 mem: location 1255 is 1243
9999 mem: skipping refcount at 1243
9998 run: address to copy is 1244
9998 run: its type is "character"
9999 mem: location 1244 is 102
9999 mem: storing 102 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 102
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1123
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1124
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1123 is 7
9999 mem: storing 1 in location 1125
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1124 is 102
9999 mem: storing 0 in location 1126
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1126 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1127
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1124 is 102
9999 mem: storing 0 in location 1129
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1129 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1130
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1130 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1123 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 102
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 179 -> 180
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 102
  90 print-character: 102 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 102
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 102 -> 103
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 102
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 30
9999 mem: storing 1080 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 99
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 102
9999 mem: location 1308 is 1080
9999 mem: storing 102 in location 1080
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 102
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1081
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1243
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1243 in location 1205
9999 mem: incrementing refcount of 1243: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1243
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1243
9999 mem: skipping refcount at 1243
9999 mem: location 1244 is 102
9999 mem: location 1245 is 0
9999 mem: location 1246 is 1239
9999 mem: location 1205 is 1243
9999 mem: skipping refcount at 1243
9998 run: address to copy is 1245
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1206
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1243: 6 -> 5
9999 mem: storing 0 in location 1255
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1239
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1205
9999 mem: incrementing refcount of 1239: 8 -> 9
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1239
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 1243
9999 mem: location 1242 is 1235
9999 mem: location 1205 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 1243
9999 mem: storing 1243 in location 1206
9999 mem: incrementing refcount of 1243: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1243
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1243
9999 mem: decrementing refcount of 1239: 9 -> 8
9999 mem: storing 1243 in location 1256
9999 mem: incrementing refcount of 1243: 6 -> 7
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 68
 105 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1271
 105 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 0
9999 mem: location 1271 is 1161
9999 mem: decrementing refcount of 1235: 15 -> 14
9999 mem: storing 0 in location 1161
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1272
 105 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1264 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1273
 105 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1274
 105 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: storing 0 in location 1275
 105 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 81
 105 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1276
 105 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1276 is 1165
9999 mem: storing 3 in location 1165
 105 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1258 is 3
9999 mem: location 1259 is 1
9999 mem: location 1250 is 1012
9999 mem: location 1251 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 3 in location 1319
9999 mem: storing 1 in location 1320
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1012
9999 mem: location 1320 is 1
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 180 -> 181
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 181 -> 182
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 103 -> 104
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 31
9999 mem: storing 1082 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1082
9999 mem: storing 32 in location 1082
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1083
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 182 -> 181
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 181 -> 182
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 182 -> 183
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 104 -> 105
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 32
9999 mem: storing 1084 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1084
9999 mem: storing 32 in location 1084
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1085
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 183 -> 182
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 182 -> 183
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 183 -> 184
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 105 -> 106
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 33
9999 mem: storing 1086 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1086
9999 mem: storing 32 in location 1086
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1087
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 184 -> 183
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 183 -> 184
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 184 -> 185
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 106 -> 107
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 34
9999 mem: storing 1088 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1088
9999 mem: storing 32 in location 1088
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1089
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 185 -> 184
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 184 -> 185
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 185 -> 186
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 107 -> 108
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 35
9999 mem: storing 1090 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1090
9999 mem: storing 32 in location 1090
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1091
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 186 -> 185
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 185 -> 186
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 186 -> 187
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 108 -> 109
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 36
9999 mem: storing 1092 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1092
9999 mem: storing 32 in location 1092
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1093
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 187 -> 186
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 186 -> 187
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 187 -> 188
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 109 -> 110
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 37
9999 mem: storing 1094 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1094
9999 mem: storing 32 in location 1094
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1095
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 188 -> 187
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 187 -> 188
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 188 -> 189
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 110 -> 111
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 38
9999 mem: storing 1096 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1096
9999 mem: storing 32 in location 1096
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1097
9999 mem: storing 7 in location 1097
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 189 -> 188
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 188 -> 189
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 189 -> 190
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 111 -> 112
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 39
9999 mem: storing 1098 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1098
9999 mem: storing 32 in location 1098
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1099
9999 mem: storing 7 in location 1099
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 190 -> 189
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 189 -> 190
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1319 is 3
9999 mem: storing 4 in location 1319
 104 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1315 is 1012
9999 mem: location 1319 is 4
9999 mem: location 1317 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1321
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1324
9999 mem: incrementing refcount of 1012: 190 -> 191
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1325
 105 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1326
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1327
 105 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1328
9999 mem: storing 1 in location 1329
 105 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jumping to instruction 9
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1330
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1332
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1325 is 4
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 191 -> 192
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 4
9999 mem: location 1283 is 1015
9999 mem: storing 4 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 192 -> 191
9999 mem: storing 1012 in location 1324
9999 mem: incrementing refcount of 1012: 191 -> 192
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 0
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 192 -> 193
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 112 -> 113
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 40
9999 mem: storing 1100 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 100
9999 mem: location 1101 is 7
9999 mem: location 1307 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1100
9999 mem: storing 9480 in location 1100
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 7
9999 mem: location 1307 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1101
9999 mem: storing 245 in location 1101
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 1
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 193 -> 194
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 113 -> 114
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 41
9999 mem: storing 1102 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1307 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1102
9999 mem: storing 9480 in location 1102
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 7
9999 mem: location 1307 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1103
9999 mem: storing 245 in location 1103
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 1
9999 mem: storing 2 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 2
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 194 -> 195
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 114 -> 115
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 42
9999 mem: storing 1104 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1307 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1104
9999 mem: storing 9480 in location 1104
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 7
9999 mem: location 1307 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1105
9999 mem: storing 245 in location 1105
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 2
9999 mem: storing 3 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 3
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 195 -> 196
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 115 -> 116
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 43
9999 mem: storing 1106 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1307 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1106
9999 mem: storing 9480 in location 1106
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 7
9999 mem: location 1307 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1107
9999 mem: storing 245 in location 1107
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 3
9999 mem: storing 4 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 4
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 196 -> 197
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 116 -> 117
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 44
9999 mem: storing 1108 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1307 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1108
9999 mem: storing 9480 in location 1108
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 7
9999 mem: location 1307 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1109
9999 mem: storing 245 in location 1109
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 4
9999 mem: storing 5 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 5
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 197 -> 198
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 117 -> 118
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 45
9999 mem: storing 1110 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1307 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1110
9999 mem: storing 9480 in location 1110
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 7
9999 mem: location 1307 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1111
9999 mem: storing 245 in location 1111
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 5
9999 mem: storing 6 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 6
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 198 -> 199
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 118 -> 119
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 46
9999 mem: storing 1112 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1307 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1112
9999 mem: storing 9480 in location 1112
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 7
9999 mem: location 1307 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1113
9999 mem: storing 245 in location 1113
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 6
9999 mem: storing 7 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 7
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 199 -> 200
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 119 -> 120
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 47
9999 mem: storing 1114 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1307 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1114
9999 mem: storing 9480 in location 1114
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 7
9999 mem: location 1307 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1115
9999 mem: storing 245 in location 1115
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 7
9999 mem: storing 8 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 8
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 200 -> 201
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 120 -> 121
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 48
9999 mem: storing 1116 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1307 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1116
9999 mem: storing 9480 in location 1116
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 7
9999 mem: location 1307 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1117
9999 mem: storing 245 in location 1117
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 8
9999 mem: storing 9 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 9
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 201 -> 202
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 121 -> 122
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 49
9999 mem: storing 1118 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1307 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1118
9999 mem: storing 9480 in location 1118
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 7
9999 mem: location 1307 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1119
9999 mem: storing 245 in location 1119
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 9
9999 mem: storing 10 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 10
9999 mem: location 1327 is 9
9999 mem: storing 0 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 27
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1324 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1319 is 4
9999 mem: storing 5 in location 1319
 104 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1315 is 1012
9999 mem: location 1319 is 5
9999 mem: location 1317 is 0
9999 mem: location 1317 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 202 -> 203
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1281
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1283
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1284
 105 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jumping to instruction 10
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 5
9999 mem: location 1282 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1335
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1338
9999 mem: incrementing refcount of 1012: 203 -> 204
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1339
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1338 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1341
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1339 is 5
9999 mem: location 1341 is 1015
9999 mem: storing 5 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1342
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1340 is 0
9999 mem: location 1342 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1338 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 204 -> 203
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 203 -> 204
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1282 is 0
9999 mem: location 1284 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 204 -> 205
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 205 -> 206
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 206 -> 205
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 205 -> 206
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 206 -> 207
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 207 -> 206
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 206 -> 207
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 207 -> 208
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 208 -> 207
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 207 -> 208
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 208 -> 209
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 209 -> 208
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 208 -> 209
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 209 -> 210
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 210 -> 209
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 209 -> 210
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 210 -> 211
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 211 -> 210
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 210 -> 211
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 211 -> 212
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 212 -> 211
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 211 -> 212
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 212 -> 213
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 213 -> 212
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 212 -> 213
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 213 -> 214
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 214 -> 213
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 213 -> 214
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 214 -> 215
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 215 -> 214
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 214 -> 215
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 5
9999 mem: location 1283 is 0
9999 mem: location 1284 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1343
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 215 -> 216
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1347
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1348
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1349
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1347 is 5
9999 mem: storing 6 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1346 is 1012
9999 mem: location 1347 is 6
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1335
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1338
9999 mem: incrementing refcount of 1012: 216 -> 217
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1339
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1338 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1341
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1339 is 6
9999 mem: location 1341 is 1015
9999 mem: storing 6 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1342
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1340 is 0
9999 mem: location 1342 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1338 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 217 -> 216
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 216 -> 217
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 217 -> 218
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 107 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1350
 106 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1347 is 6
9999 mem: location 1350 is 5
9999 mem: storing 1 in location 1351
 106 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jumping to instruction 15
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1346 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1158
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 218 -> 217
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 217 -> 218
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1371
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1372
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1368 is 1012
9999 mem: location 1371 is 1
9999 mem: location 1372 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 218 -> 219
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 219 -> 218
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 218 -> 219
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1369 is 1362
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1321
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1362 in location 1324
9999 mem: incrementing refcount of 1362: 2 -> 3
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1324 is 1362
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9999 mem: location 1363 is 1
9999 mem: location 1364 is 1352
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9998 run: address to copy is 1363
9999 mem: storing 1363 in location 1325
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9999 mem: location 1363 is 1
9999 mem: location 1364 is 1352
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9998 run: address to copy is 1364
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1364 is 1352
9999 mem: storing 1352 in location 1326
9999 mem: incrementing refcount of 1352: 2 -> 3
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1326 is 1352
9999 mem: skipping refcount at 1352
9999 mem: storing 2 in location 1327
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1325 is 1363
9999 mem: location 1363 is 1
9999 mem: location 1327 is 2
9999 mem: storing 0 in location 1328
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1326 is 1352
9999 mem: skipping refcount at 1352
9998 run: base address is 1353
9999 mem: location 1325 is 1363
9999 mem: location 1363 is 1
9998 run: address to copy is 1358
9998 run: its type is event
9999 mem: location 1358 is 1
9999 mem: location 1359 is 65519
9999 mem: location 1360 is 0
9999 mem: location 1361 is 0
9999 mem: storing 1 in location 1330
9999 mem: storing 65519 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1325 is 1363
9999 mem: location 1363 is 1
9999 mem: location 1325 is 1363
9999 mem: storing 2 in location 1363
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1330 is 1
9999 mem: location 1331 is 65519
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1324 is 1362
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [1, 65519, 0, 0]
9998 run: result 1 is 1362
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1373
9999 mem: storing 65519 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: decrementing refcount of 1362: 3 -> 2
9999 mem: storing 1362 in location 1369
9999 mem: incrementing refcount of 1362: 2 -> 3
9999 mem: storing 1 in location 1377
9999 mem: storing 0 in location 1378
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1373 is 1
9999 mem: location 1374 is 65519
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 mem: storing 0 in location 1379
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1368 is 1012
9999 mem: location 1370 is 1158
9999 mem: location 1373 is 1
9999 mem: location 1374 is 65519
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1381
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1384
9999 mem: incrementing refcount of 1012: 219 -> 220
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1385
9999 mem: incrementing refcount of 1158: 13 -> 14
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1386
9999 mem: storing 65519 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1390
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1385 is 1158
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1384 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 220 -> 221
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1206
 105 run: return {width: "number"}
9999 mem: location 1206 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1391
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1384 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 221 -> 222
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 105 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1392
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1393
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1394
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1395
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1396
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1397
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1398
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1397 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1399
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1386 is 1
9999 mem: location 1387 is 65519
9999 mem: location 1388 is 0
9999 mem: location 1389 is 0
9999 mem: storing 0 in location 1400
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 438
 104 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1386 is 1
9999 mem: location 1387 is 65519
9999 mem: location 1388 is 0
9999 mem: location 1389 is 0
9999 mem: storing 1387 in location 1454
 104 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1454 is 1387
 104 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1454 is 1387
9999 mem: location 1387 is 65519
9999 mem: storing 1 in location 1417
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 104 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1418
 104 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1418 is 1160
9999 mem: location 1160 is 1223
9999 mem: storing 1223 in location 1419
9999 mem: incrementing refcount of 1223: 18 -> 19
 104 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1420
 104 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1421
 104 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1223
9999 mem: storing 1223 in location 1422
9999 mem: incrementing refcount of 1223: 19 -> 20
 104 run: {editor: ("address" "shared" "editor-data")} <- page-up {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1385 is 1158
9999 mem: location 1392 is 5
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1184
9999 mem: incrementing refcount of 1158: 14 -> 15
 105 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1185
 105 run: {max: "number"} <- subtract {screen-height: "number"}, {1: "literal", "menu-bar": ()}, {1: "literal", "overlapping-line": ()}
9999 mem: location 1185 is 5
9999 mem: storing 3 in location 1186
 105 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1187
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1184 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1184 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1188
 105 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1187 is 0
9999 mem: location 1186 is 3
9999 mem: storing 0 in location 1189
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1188 is 1160
9999 mem: location 1160 is 1223
9999 mem: location 1184 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1482
9999 mem: storing 14 in location 1483
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1485
9999 mem: incrementing refcount of 1223: 20 -> 21
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1486
9999 mem: incrementing refcount of 1158: 15 -> 16
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1485 is 1223
9999 mem: storing 1223 in location 1487
9999 mem: incrementing refcount of 1223: 21 -> 22
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1487 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1487 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 10
9999 mem: storing 10 in location 1488
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1489
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1490
 106 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1490 is 9
9999 mem: location 1489 is 0
9999 mem: storing 9 in location 1491
 106 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1159 is 1177
9999 mem: storing 1177 in location 1492
9999 mem: incrementing refcount of 1177: 11 -> 12
 106 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1223
9999 mem: location 1492 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1312
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1315
9999 mem: incrementing refcount of 1223: 22 -> 23
 107 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1316
9999 mem: incrementing refcount of 1177: 12 -> 13
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1317
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1315 is 1223
9998 run: jumping to instruction 6
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1223
9999 mem: location 1316 is 1177
9999 mem: storing 0 in location 1318
 107 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1318 is 0
9998 run: jumping to instruction 9
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1223
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 23 -> 24
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1223: 24 -> 23
9999 mem: storing 1219 in location 1315
9999 mem: incrementing refcount of 1219: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1315 is 1219
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1219
9999 mem: location 1316 is 1177
9999 mem: storing 0 in location 1318
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1315 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1315 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is "character"
9999 mem: location 1220 is 99
9999 mem: storing 99 in location 1319
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1319 is 99
9999 mem: storing 0 in location 1320
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1317
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1219
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1219: 15 -> 14
9999 mem: storing 1215 in location 1315
9999 mem: incrementing refcount of 1215: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1315 is 1215
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1215
9999 mem: location 1316 is 1177
9999 mem: storing 0 in location 1318
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1315 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1315 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 10
9999 mem: storing 10 in location 1319
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1319 is 10
9999 mem: storing 1 in location 1320
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jumping to instruction 19
 107 run: reply {result: "number"}
9999 mem: location 1317 is 1
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1
9999 mem: storing 1 in location 1493
 106 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1493 is 1
9998 run: jumping to instruction 16
 106 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1493 is 1
9999 mem: location 1491 is 9
9999 mem: storing 1 in location 1495
 106 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1495 is 1
9998 run: jumping to instruction 21
 106 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 106 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1496
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 0
9999 mem: location 1495 is 2
9999 mem: storing 0 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 23 -> 24
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1494
9999 mem: incrementing refcount of 1219: 15 -> 16
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1494 is 1219
9998 run: jump-unless fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1494 is 1219
9999 mem: decrementing refcount of 1223: 24 -> 23
9999 mem: storing 1219 in location 1487
9999 mem: incrementing refcount of 1219: 16 -> 17
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1496 is 0
9999 mem: storing 1 in location 1496
 106 run: jump {: "offset"}
9998 run: jumping to instruction 25
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 1
9999 mem: location 1495 is 2
9999 mem: storing 0 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1219: 18 -> 17
9999 mem: storing 1215 in location 1494
9999 mem: incrementing refcount of 1215: 15 -> 16
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1494 is 1215
9998 run: jump-unless fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1494 is 1215
9999 mem: decrementing refcount of 1219: 17 -> 16
9999 mem: storing 1215 in location 1487
9999 mem: incrementing refcount of 1215: 16 -> 17
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1496 is 1
9999 mem: storing 2 in location 1496
 106 run: jump {: "offset"}
9998 run: jumping to instruction 25
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 2
9999 mem: location 1495 is 2
9999 mem: storing 1 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 1
9998 run: jumping to instruction 32
 106 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1215
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1190
9999 mem: incrementing refcount of 1215: 17 -> 18
 105 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1190 is 1215
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1215
9999 mem: location 1188 is 1160
9999 mem: decrementing refcount of 1223: 23 -> 22
9999 mem: storing 1215 in location 1160
9999 mem: incrementing refcount of 1215: 18 -> 19
 105 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 105 run: jump {: "offset"}
9998 run: jumping to instruction 7
 105 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1187 is 1
9999 mem: location 1186 is 3
9999 mem: storing 0 in location 1189
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1188 is 1160
9999 mem: location 1160 is 1215
9999 mem: location 1184 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1482
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1485
9999 mem: incrementing refcount of 1215: 19 -> 20
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1486
9999 mem: incrementing refcount of 1158: 16 -> 17
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1485 is 1215
9999 mem: storing 1215 in location 1487
9999 mem: incrementing refcount of 1215: 20 -> 21
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1487 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1487 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 10
9999 mem: storing 10 in location 1488
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1215
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1489
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1215
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1490
 106 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1490 is 9
9999 mem: location 1489 is 0
9999 mem: storing 9 in location 1491
 106 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1215
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1159 is 1177
9999 mem: storing 1177 in location 1492
9999 mem: incrementing refcount of 1177: 13 -> 14
 106 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1215
9999 mem: location 1492 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1312
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1315
9999 mem: incrementing refcount of 1215: 21 -> 22
 107 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1316
9999 mem: incrementing refcount of 1177: 14 -> 15
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1317
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1315 is 1215
9998 run: jumping to instruction 6
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1215
9999 mem: location 1316 is 1177
9999 mem: storing 0 in location 1318
 107 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1318 is 0
9998 run: jumping to instruction 9
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1215
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 22 -> 23
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1215: 23 -> 22
9999 mem: storing 1211 in location 1315
9999 mem: incrementing refcount of 1211: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1315 is 1211
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1211
9999 mem: location 1316 is 1177
9999 mem: storing 0 in location 1318
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1315 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1315 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 98
9999 mem: storing 98 in location 1319
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1319 is 98
9999 mem: storing 0 in location 1320
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1317
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1211
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1211: 15 -> 14
9999 mem: storing 1207 in location 1315
9999 mem: incrementing refcount of 1207: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1315 is 1207
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1207
9999 mem: location 1316 is 1177
9999 mem: storing 0 in location 1318
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1315 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1315 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1319
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1319 is 10
9999 mem: storing 1 in location 1320
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jumping to instruction 19
 107 run: reply {result: "number"}
9999 mem: location 1317 is 1
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1
9999 mem: storing 1 in location 1493
 106 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1493 is 1
9998 run: jumping to instruction 16
 106 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1493 is 1
9999 mem: location 1491 is 9
9999 mem: storing 1 in location 1495
 106 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1495 is 1
9998 run: jumping to instruction 21
 106 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 106 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1496
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 0
9999 mem: location 1495 is 2
9999 mem: storing 0 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1494
9999 mem: incrementing refcount of 1211: 15 -> 16
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1494 is 1211
9998 run: jump-unless fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1494 is 1211
9999 mem: decrementing refcount of 1215: 23 -> 22
9999 mem: storing 1211 in location 1487
9999 mem: incrementing refcount of 1211: 16 -> 17
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1496 is 0
9999 mem: storing 1 in location 1496
 106 run: jump {: "offset"}
9998 run: jumping to instruction 25
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 1
9999 mem: location 1495 is 2
9999 mem: storing 0 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1211: 18 -> 17
9999 mem: storing 1207 in location 1494
9999 mem: incrementing refcount of 1207: 15 -> 16
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1494 is 1207
9998 run: jump-unless fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1494 is 1207
9999 mem: decrementing refcount of 1211: 17 -> 16
9999 mem: storing 1207 in location 1487
9999 mem: incrementing refcount of 1207: 16 -> 17
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1496 is 1
9999 mem: storing 2 in location 1496
 106 run: jump {: "offset"}
9998 run: jumping to instruction 25
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 2
9999 mem: location 1495 is 2
9999 mem: storing 1 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 1
9998 run: jumping to instruction 32
 106 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1207
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1215: 22 -> 21
9999 mem: storing 1207 in location 1190
9999 mem: incrementing refcount of 1207: 17 -> 18
 105 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1190 is 1207
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1207
9999 mem: location 1188 is 1160
9999 mem: decrementing refcount of 1215: 21 -> 20
9999 mem: storing 1207 in location 1160
9999 mem: incrementing refcount of 1207: 18 -> 19
 105 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1187 is 1
9999 mem: storing 2 in location 1187
 105 run: jump {: "offset"}
9998 run: jumping to instruction 7
 105 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1187 is 2
9999 mem: location 1186 is 3
9999 mem: storing 0 in location 1189
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1188 is 1160
9999 mem: location 1160 is 1207
9999 mem: location 1184 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1482
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1485
9999 mem: incrementing refcount of 1207: 19 -> 20
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1486
9999 mem: incrementing refcount of 1158: 17 -> 18
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1485 is 1207
9999 mem: storing 1207 in location 1487
9999 mem: incrementing refcount of 1207: 20 -> 21
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1487 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1487 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1488
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1207
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1489
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1207
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1490
 106 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1490 is 9
9999 mem: location 1489 is 0
9999 mem: storing 9 in location 1491
 106 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1207
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1486 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1159 is 1177
9999 mem: storing 1177 in location 1492
9999 mem: incrementing refcount of 1177: 15 -> 16
 106 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1207
9999 mem: location 1492 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1312
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1315
9999 mem: incrementing refcount of 1207: 21 -> 22
 107 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1316
9999 mem: incrementing refcount of 1177: 16 -> 17
 107 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1317
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1315 is 1207
9998 run: jumping to instruction 6
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1207
9999 mem: location 1316 is 1177
9999 mem: storing 0 in location 1318
 107 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1318 is 0
9998 run: jumping to instruction 9
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1207
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 22 -> 23
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1207: 23 -> 22
9999 mem: storing 1198 in location 1315
9999 mem: incrementing refcount of 1198: 13 -> 14
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1315 is 1198
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1198
9999 mem: location 1316 is 1177
9999 mem: storing 0 in location 1318
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1315 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1315 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 97
9999 mem: storing 97 in location 1319
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1319 is 97
9999 mem: storing 0 in location 1320
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 107 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1317
 107 run: jump {: "offset"}
9998 run: jumping to instruction 10
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1198
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1177
9999 mem: storing 1177 in location 1206
9999 mem: incrementing refcount of 1177: 17 -> 18
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1177
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1198: 15 -> 14
9999 mem: storing 1177 in location 1315
9999 mem: incrementing refcount of 1177: 18 -> 19
 107 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1315 is 1177
9998 run: jump-unless fell through
 107 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1315 is 1177
9999 mem: location 1316 is 1177
9999 mem: storing 1 in location 1318
 107 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1318 is 1
9998 run: jumping to instruction 19
 107 run: reply {result: "number"}
9999 mem: location 1317 is 1
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1
9999 mem: storing 1 in location 1493
 106 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1493 is 1
9998 run: jumping to instruction 16
 106 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1493 is 1
9999 mem: location 1491 is 9
9999 mem: storing 1 in location 1495
 106 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1495 is 1
9998 run: jumping to instruction 21
 106 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 106 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1496
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 0
9999 mem: location 1495 is 2
9999 mem: storing 0 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1494
9999 mem: incrementing refcount of 1198: 15 -> 16
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1494 is 1198
9998 run: jump-unless fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1494 is 1198
9999 mem: decrementing refcount of 1207: 23 -> 22
9999 mem: storing 1198 in location 1487
9999 mem: incrementing refcount of 1198: 16 -> 17
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1496 is 0
9999 mem: storing 1 in location 1496
 106 run: jump {: "offset"}
9998 run: jumping to instruction 25
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 1
9999 mem: location 1495 is 2
9999 mem: storing 0 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1177
9999 mem: storing 1177 in location 1206
9999 mem: incrementing refcount of 1177: 19 -> 20
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1206 is 1177
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1198: 18 -> 17
9999 mem: storing 1177 in location 1494
9999 mem: incrementing refcount of 1177: 20 -> 21
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1494 is 1177
9998 run: jump-unless fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1494 is 1177
9999 mem: decrementing refcount of 1198: 17 -> 16
9999 mem: storing 1177 in location 1487
9999 mem: incrementing refcount of 1177: 21 -> 22
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1496 is 1
9999 mem: storing 2 in location 1496
 106 run: jump {: "offset"}
9998 run: jumping to instruction 25
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1496 is 2
9999 mem: location 1495 is 2
9999 mem: storing 1 in location 1497
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 1
9998 run: jumping to instruction 32
 106 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1487 is 1177
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1207: 22 -> 21
9999 mem: storing 1177 in location 1190
9999 mem: incrementing refcount of 1177: 22 -> 23
 105 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1190 is 1177
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1177
9999 mem: location 1188 is 1160
9999 mem: decrementing refcount of 1207: 21 -> 20
9999 mem: storing 1177 in location 1160
9999 mem: incrementing refcount of 1177: 23 -> 24
 105 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1187 is 2
9999 mem: storing 3 in location 1187
 105 run: jump {: "offset"}
9998 run: jumping to instruction 7
 105 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1187 is 3
9999 mem: location 1186 is 3
9999 mem: storing 1 in location 1189
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 1
9998 run: jumping to instruction 14
 105 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1158
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 18 -> 17
9999 mem: storing 1158 in location 1385
9999 mem: incrementing refcount of 1158: 17 -> 18
 104 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1423
 104 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1424
 104 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1425
 104 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1177
9999 mem: storing 1177 in location 1426
9999 mem: incrementing refcount of 1177: 24 -> 25
 104 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 473
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
9999 mem: storing 1120 in location 1403
9999 mem: incrementing refcount of 1120: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1420 is 1
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1223
9999 mem: location 1424 is 1
9999 mem: location 1425 is 0
9999 mem: location 1426 is 1177
9999 mem: location 1423 is 0
9999 mem: location 1403 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1403 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1223 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 0 in location 1126
9999 mem: storing 1177 in location 1127
9999 mem: storing 0 in location 1128
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1385 is 1158
9999 mem: location 1403 is 1120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1191
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1194
9999 mem: incrementing refcount of 1158: 18 -> 19
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1195
9999 mem: incrementing refcount of 1120: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1194 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1194 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1196
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1195 is 1120
9999 mem: location 1196 is 1169
9999 mem: location 1169 is 1479
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1171
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1174
9999 mem: incrementing refcount of 1120: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1479 in location 1175
9999 mem: incrementing refcount of 1479: 2 -> 3
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1498
9999 mem: storing 1498 in location 1176
9999 mem: incrementing refcount of 1498: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1174 is 1120
9999 mem: location 1175 is 1479
9999 mem: location 1176 is 1498
9999 mem: skipping refcount at 1498
9999 mem: location 1176 is 1498
9999 mem: skipping refcount at 1498
9999 mem: storing 1120 in location 1499
9999 mem: storing 1479 in location 1500
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1176 is 1498
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1498
9999 mem: location 1196 is 1169
9999 mem: decrementing refcount of 1479: 3 -> 2
9999 mem: storing 1498 in location 1169
9999 mem: incrementing refcount of 1498: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1194 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1194 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1197
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1197 is 1170
9999 mem: storing 0 in location 1170
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1194 is 1158
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 19 -> 18
9999 mem: storing 1158 in location 1385
9999 mem: incrementing refcount of 1158: 18 -> 19
 104 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1418 is 1160
9999 mem: location 1160 is 1177
9999 mem: location 1419 is 1223
9999 mem: storing 0 in location 1432
 104 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1432 is 0
9999 mem: storing 1 in location 1390
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1384 is 1012
9999 mem: location 1385 is 1158
9999 mem: location 1390 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 222 -> 221
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 221 -> 222
9999 mem: decrementing refcount of 1158: 19 -> 18
9999 mem: storing 1158 in location 1370
9999 mem: incrementing refcount of 1158: 18 -> 19
9999 mem: storing 1 in location 1380
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 1
9998 run: jump-unless fell through
 103 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1368 is 1012
9999 mem: location 1370 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1312
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 222 -> 223
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1316
9999 mem: incrementing refcount of 1158: 19 -> 20
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1317
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1318
 104 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1247
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 223 -> 224
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1251
9999 mem: incrementing refcount of 1158: 20 -> 21
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1251 is 1158
9998 run: jumping to instruction 5
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1252
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1250 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 224 -> 225
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 106 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1253
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1254
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1177
9999 mem: storing 1177 in location 1255
9999 mem: incrementing refcount of 1177: 25 -> 26
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1177
9999 mem: storing 1177 in location 1256
9999 mem: incrementing refcount of 1177: 26 -> 27
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1177
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1205
9999 mem: incrementing refcount of 1177: 27 -> 28
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1177
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1198
9999 mem: location 1180 is 0
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1177: 28 -> 27
9999 mem: storing 1198 in location 1255
9999 mem: incrementing refcount of 1198: 17 -> 18
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 105 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1258
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1260
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1261
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1262
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 225 -> 226
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 226 -> 225
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 225 -> 226
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1198
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 0
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1265
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1177
9999 mem: location 1262 is 1162
9999 mem: decrementing refcount of 1223: 22 -> 21
9999 mem: storing 1177 in location 1162
9999 mem: incrementing refcount of 1177: 27 -> 28
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1255 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 97
9999 mem: storing 97 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1501
9999 mem: storing 10 in location 1502
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1505
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
9990 schedule: get-color/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 97
9999 mem: storing 0 in location 1507
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 97
9999 mem: storing 0 in location 1510
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 97
9999 mem: storing 0 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 97
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 226 -> 227
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 97
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 122 -> 123
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 97
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 10
9999 mem: storing 1040 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 100
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 97
9999 mem: location 1308 is 1040
9999 mem: storing 97 in location 1040
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1041
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1198
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 20 -> 21
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1198: 19 -> 18
9999 mem: storing 1207 in location 1255
9999 mem: incrementing refcount of 1207: 21 -> 22
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1177
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1205
9999 mem: incrementing refcount of 1177: 28 -> 29
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1177
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1198
9999 mem: location 1180 is 0
9999 mem: location 1205 is 1177
9999 mem: skipping refcount at 1177
9998 run: address to copy is 1179
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1179 is 1198
9999 mem: storing 1198 in location 1206
9999 mem: incrementing refcount of 1198: 18 -> 19
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1177: 29 -> 28
9999 mem: storing 1198 in location 1256
9999 mem: incrementing refcount of 1198: 19 -> 20
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1207
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1265
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1255 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1505
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1507
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1510
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 105 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1268
 105 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jumping to instruction 44
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 227 -> 228
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 228 -> 229
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 123 -> 124
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 11
9999 mem: storing 1042 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1042
9999 mem: storing 32 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 229 -> 228
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 228 -> 229
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 229 -> 230
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 124 -> 125
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 12
9999 mem: storing 1044 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1044
9999 mem: storing 32 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 230 -> 229
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 229 -> 230
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 230 -> 231
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 125 -> 126
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 13
9999 mem: storing 1046 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1046
9999 mem: storing 32 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 231 -> 230
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 230 -> 231
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 231 -> 232
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 126 -> 127
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 14
9999 mem: storing 1048 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1048
9999 mem: storing 32 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 232 -> 231
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 231 -> 232
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 232 -> 233
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 127 -> 128
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 15
9999 mem: storing 1050 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 233 -> 232
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 232 -> 233
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 233 -> 234
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 128 -> 129
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 16
9999 mem: storing 1052 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1052
9999 mem: storing 32 in location 1052
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 234 -> 233
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 233 -> 234
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 234 -> 235
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 129 -> 130
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 17
9999 mem: storing 1054 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 235 -> 234
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 234 -> 235
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 235 -> 236
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 130 -> 131
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 18
9999 mem: storing 1056 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1056
9999 mem: storing 32 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 236 -> 235
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 235 -> 236
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 236 -> 237
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 131 -> 132
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 19
9999 mem: storing 1058 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1058
9999 mem: storing 32 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 237 -> 236
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 236 -> 237
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 2
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 237 -> 238
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 2
9999 mem: location 1283 is 1015
9999 mem: storing 2 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 238 -> 237
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 237 -> 238
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1207
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 22 -> 23
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 23 -> 22
9999 mem: storing 1211 in location 1255
9999 mem: incrementing refcount of 1211: 17 -> 18
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1198
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1205
9999 mem: incrementing refcount of 1198: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1198
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 97
9999 mem: location 1200 is 1207
9999 mem: location 1201 is 1177
9999 mem: location 1205 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1207
9999 mem: storing 1207 in location 1206
9999 mem: incrementing refcount of 1207: 22 -> 23
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1198: 21 -> 20
9999 mem: storing 1207 in location 1256
9999 mem: incrementing refcount of 1207: 23 -> 24
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1211
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1255 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 98
9999 mem: storing 98 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 98
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1505
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 98
9999 mem: storing 0 in location 1507
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 98
9999 mem: storing 0 in location 1510
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 98
9999 mem: storing 0 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 98
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 238 -> 239
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 98
  90 print-character: 98 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 98
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 132 -> 133
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 98
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 20
9999 mem: storing 1060 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 101
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 98
9999 mem: location 1308 is 1060
9999 mem: storing 98 in location 1060
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 98
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1061
9999 mem: storing 7 in location 1061
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 20 -> 21
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 19 -> 18
9999 mem: storing 1215 in location 1255
9999 mem: incrementing refcount of 1215: 21 -> 22
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1207
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 24 -> 25
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1207
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1198
9999 mem: location 1205 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1206
9999 mem: incrementing refcount of 1211: 18 -> 19
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 25 -> 24
9999 mem: storing 1211 in location 1256
9999 mem: incrementing refcount of 1211: 19 -> 20
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1215
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1255 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 10
9999 mem: storing 10 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1505
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1507
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1510
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 239 -> 240
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 240 -> 241
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 133 -> 134
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 21
9999 mem: storing 1062 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1062
9999 mem: storing 32 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1063
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 241 -> 240
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 240 -> 241
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 241 -> 242
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 134 -> 135
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 22
9999 mem: storing 1064 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1064
9999 mem: storing 32 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1065
9999 mem: storing 7 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 242 -> 241
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 241 -> 242
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 242 -> 243
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 135 -> 136
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 23
9999 mem: storing 1066 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1066
9999 mem: storing 32 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1067
9999 mem: storing 7 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 243 -> 242
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 242 -> 243
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 243 -> 244
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 136 -> 137
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 24
9999 mem: storing 1068 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1068
9999 mem: storing 32 in location 1068
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1069
9999 mem: storing 7 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 244 -> 243
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 243 -> 244
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 244 -> 245
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 137 -> 138
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 25
9999 mem: storing 1070 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1070
9999 mem: storing 32 in location 1070
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1071
9999 mem: storing 7 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 245 -> 244
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 244 -> 245
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 245 -> 246
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 138 -> 139
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 26
9999 mem: storing 1072 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1072
9999 mem: storing 32 in location 1072
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1073
9999 mem: storing 7 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 246 -> 245
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 245 -> 246
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 246 -> 247
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 139 -> 140
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 27
9999 mem: storing 1074 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1074
9999 mem: storing 32 in location 1074
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1075
9999 mem: storing 7 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 247 -> 246
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 246 -> 247
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 247 -> 248
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 140 -> 141
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 28
9999 mem: storing 1076 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1076
9999 mem: storing 32 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 248 -> 247
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 247 -> 248
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 248 -> 249
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 141 -> 142
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 29
9999 mem: storing 1078 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1078
9999 mem: storing 32 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 249 -> 248
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 248 -> 249
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 249 -> 250
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 3
9999 mem: location 1283 is 1015
9999 mem: storing 3 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 250 -> 249
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 249 -> 250
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 22 -> 23
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 23 -> 22
9999 mem: storing 1219 in location 1255
9999 mem: incrementing refcount of 1219: 17 -> 18
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1205
9999 mem: incrementing refcount of 1211: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1211
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 98
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1205 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1206
9999 mem: incrementing refcount of 1215: 22 -> 23
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 21 -> 20
9999 mem: storing 1215 in location 1256
9999 mem: incrementing refcount of 1215: 23 -> 24
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1219
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1255 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is "character"
9999 mem: location 1220 is 99
9999 mem: storing 99 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 99
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1505
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 99
9999 mem: storing 0 in location 1507
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 99
9999 mem: storing 0 in location 1510
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 99
9999 mem: storing 0 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 99
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 250 -> 251
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 99
  90 print-character: 99 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 99
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 142 -> 143
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 99
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 30
9999 mem: storing 1080 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 102
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 99
9999 mem: location 1308 is 1080
9999 mem: storing 99 in location 1080
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 99
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1081
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1219
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1206
9999 mem: incrementing refcount of 1223: 21 -> 22
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 19 -> 18
9999 mem: storing 1223 in location 1255
9999 mem: incrementing refcount of 1223: 22 -> 23
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1205
9999 mem: incrementing refcount of 1215: 24 -> 25
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1215
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 10
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1205 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1206
9999 mem: incrementing refcount of 1219: 18 -> 19
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 25 -> 24
9999 mem: storing 1219 in location 1256
9999 mem: incrementing refcount of 1219: 19 -> 20
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1223
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1255 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 10
9999 mem: storing 10 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1505
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1507
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1510
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 251 -> 252
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 252 -> 253
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 143 -> 144
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 31
9999 mem: storing 1082 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1082
9999 mem: storing 32 in location 1082
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1083
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 253 -> 252
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 252 -> 253
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 253 -> 254
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 144 -> 145
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 32
9999 mem: storing 1084 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1084
9999 mem: storing 32 in location 1084
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1085
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 254 -> 253
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 253 -> 254
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 254 -> 255
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 145 -> 146
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 33
9999 mem: storing 1086 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1086
9999 mem: storing 32 in location 1086
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1087
9999 mem: storing 7 in location 1087
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 255 -> 254
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 254 -> 255
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 255 -> 256
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 146 -> 147
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 34
9999 mem: storing 1088 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1088
9999 mem: storing 32 in location 1088
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1089
9999 mem: storing 7 in location 1089
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 256 -> 255
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 255 -> 256
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 256 -> 257
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 147 -> 148
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 35
9999 mem: storing 1090 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1090
9999 mem: storing 32 in location 1090
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1091
9999 mem: storing 7 in location 1091
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 257 -> 256
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 256 -> 257
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 257 -> 258
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 148 -> 149
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 36
9999 mem: storing 1092 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1092
9999 mem: storing 32 in location 1092
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1093
9999 mem: storing 7 in location 1093
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 258 -> 257
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 257 -> 258
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 258 -> 259
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 149 -> 150
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 37
9999 mem: storing 1094 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1094
9999 mem: storing 32 in location 1094
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1095
9999 mem: storing 7 in location 1095
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 259 -> 258
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 258 -> 259
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 259 -> 260
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 150 -> 151
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 38
9999 mem: storing 1096 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1096
9999 mem: storing 32 in location 1096
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1097
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 260 -> 259
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 259 -> 260
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 260 -> 261
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1302
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 151 -> 152
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 39
9999 mem: storing 1098 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1098
9999 mem: storing 32 in location 1098
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1099
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 261 -> 260
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 260 -> 261
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 3
9999 mem: storing 4 in location 1258
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 4
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 261 -> 262
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 4
9999 mem: location 1283 is 1015
9999 mem: storing 4 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 262 -> 261
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 261 -> 262
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1223
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 23 -> 24
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 18 -> 19
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 24 -> 23
9999 mem: storing 1227 in location 1255
9999 mem: incrementing refcount of 1227: 19 -> 20
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1219
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1205
9999 mem: incrementing refcount of 1219: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1219
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 99
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1205 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1206
9999 mem: incrementing refcount of 1223: 23 -> 24
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 21 -> 20
9999 mem: storing 1223 in location 1256
9999 mem: incrementing refcount of 1223: 24 -> 25
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1227
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 4
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is "character"
9999 mem: location 1228 is 100
9999 mem: storing 100 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 100
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1505
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 100
9999 mem: storing 0 in location 1507
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 100
9999 mem: storing 0 in location 1510
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 100
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 262 -> 263
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 100
  90 print-character: 100 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1299
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1302
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 152 -> 153
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1305
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 40
9999 mem: storing 1100 in location 1307
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 245
9999 mem: location 1307 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1308
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 100
9999 mem: location 1308 is 1100
9999 mem: storing 100 in location 1100
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 100
9999 mem: location 1101 is 245
9999 mem: location 1307 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1309
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1101
9999 mem: storing 7 in location 1101
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1227
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 18 -> 19
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 21 -> 20
9999 mem: storing 1231 in location 1255
9999 mem: incrementing refcount of 1231: 19 -> 20
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1223
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1205
9999 mem: incrementing refcount of 1223: 25 -> 26
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1223
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1205 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1206
9999 mem: incrementing refcount of 1227: 20 -> 21
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 26 -> 25
9999 mem: storing 1227 in location 1256
9999 mem: incrementing refcount of 1227: 21 -> 22
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1231
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 4
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is "character"
9999 mem: location 1232 is 10
9999 mem: storing 10 in location 1266
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1505
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1507
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1510
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 4
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 263 -> 264
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 264 -> 265
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 153 -> 154
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 41
9999 mem: storing 1102 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 245
9999 mem: location 1307 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1102
9999 mem: storing 32 in location 1102
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 245
9999 mem: location 1307 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1103
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 265 -> 264
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 264 -> 265
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 265 -> 266
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 154 -> 155
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 42
9999 mem: storing 1104 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 245
9999 mem: location 1307 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1104
9999 mem: storing 32 in location 1104
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 245
9999 mem: location 1307 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1105
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 266 -> 265
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 265 -> 266
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 266 -> 267
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 155 -> 156
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 43
9999 mem: storing 1106 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 245
9999 mem: location 1307 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1106
9999 mem: storing 32 in location 1106
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 245
9999 mem: location 1307 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1107
9999 mem: storing 7 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 267 -> 266
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 266 -> 267
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 267 -> 268
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 156 -> 157
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 44
9999 mem: storing 1108 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 245
9999 mem: location 1307 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1108
9999 mem: storing 32 in location 1108
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 245
9999 mem: location 1307 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1109
9999 mem: storing 7 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 268 -> 267
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 267 -> 268
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 268 -> 269
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 157 -> 158
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 45
9999 mem: storing 1110 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 245
9999 mem: location 1307 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1110
9999 mem: storing 32 in location 1110
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 245
9999 mem: location 1307 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1111
9999 mem: storing 7 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 269 -> 268
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 268 -> 269
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 269 -> 270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 158 -> 159
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 46
9999 mem: storing 1112 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 245
9999 mem: location 1307 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1112
9999 mem: storing 32 in location 1112
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 245
9999 mem: location 1307 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1113
9999 mem: storing 7 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 270 -> 269
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 269 -> 270
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 270 -> 271
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 159 -> 160
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 47
9999 mem: storing 1114 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 245
9999 mem: location 1307 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1114
9999 mem: storing 32 in location 1114
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 245
9999 mem: location 1307 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1115
9999 mem: storing 7 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 271 -> 270
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 270 -> 271
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 271 -> 272
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 160 -> 161
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 48
9999 mem: storing 1116 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 245
9999 mem: location 1307 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1116
9999 mem: storing 32 in location 1116
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 245
9999 mem: location 1307 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1117
9999 mem: storing 7 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 272 -> 271
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 271 -> 272
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 272 -> 273
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 161 -> 162
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 49
9999 mem: storing 1118 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 245
9999 mem: location 1307 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1118
9999 mem: storing 32 in location 1118
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 245
9999 mem: location 1307 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1119
9999 mem: storing 7 in location 1119
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 273 -> 272
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 272 -> 273
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 4
9999 mem: storing 5 in location 1258
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 5
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 273 -> 274
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 5
9999 mem: location 1283 is 1015
9999 mem: storing 5 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 274 -> 273
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 273 -> 274
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1231
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1205
9999 mem: incrementing refcount of 1231: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1231
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1205 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1206
9999 mem: incrementing refcount of 1235: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 21 -> 20
9999 mem: storing 1235 in location 1255
9999 mem: incrementing refcount of 1235: 15 -> 16
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1227
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1205
9999 mem: incrementing refcount of 1227: 22 -> 23
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1205 is 1227
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1205 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1206
9999 mem: incrementing refcount of 1231: 20 -> 21
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1206 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 23 -> 22
9999 mem: storing 1231 in location 1256
9999 mem: incrementing refcount of 1231: 21 -> 22
 105 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1235
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 5
9999 mem: location 1253 is 5
9999 mem: storing 1 in location 1263
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jumping to instruction 68
 105 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1271
 105 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1235
9999 mem: location 1271 is 1161
9999 mem: storing 1235 in location 1161
9999 mem: incrementing refcount of 1235: 16 -> 17
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 5
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 105 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 0
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1272
 105 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1264 is 0
9999 mem: location 1272 is 1
9999 mem: storing 0 in location 1273
 105 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 5
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1274
 105 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: storing 0 in location 1275
 105 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 81
 105 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1276
 105 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1258 is 5
9999 mem: location 1276 is 1165
9999 mem: storing 5 in location 1165
 105 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1258 is 5
9999 mem: location 1259 is 0
9999 mem: location 1250 is 1012
9999 mem: location 1251 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9998 run: result 1 is 0
9999 mem: storing 5 in location 1319
9999 mem: storing 0 in location 1320
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1012
9999 mem: location 1320 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 274 -> 275
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1185
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 275 -> 276
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 276 -> 275
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 275 -> 276
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 276 -> 277
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 277 -> 276
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 276 -> 277
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 277 -> 278
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 278 -> 277
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 277 -> 278
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 278 -> 279
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 279 -> 278
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 278 -> 279
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 279 -> 280
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 280 -> 279
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 279 -> 280
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 280 -> 281
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 281 -> 280
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 280 -> 281
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 281 -> 282
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 282 -> 281
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 281 -> 282
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 282 -> 283
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 283 -> 282
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 282 -> 283
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 283 -> 284
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 284 -> 283
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 283 -> 284
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 284 -> 285
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 285 -> 284
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 284 -> 285
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1319 is 5
9999 mem: storing 6 in location 1319
 104 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1315 is 1012
9999 mem: location 1319 is 6
9999 mem: location 1317 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1321
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1324
9999 mem: incrementing refcount of 1012: 285 -> 286
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1325
 105 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1326
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1327
 105 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1328
9999 mem: storing 1 in location 1329
 105 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jumping to instruction 9
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1330
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1332
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1325 is 6
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 286 -> 287
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1281
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 6
9999 mem: location 1283 is 1015
9999 mem: storing 6 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 287 -> 286
9999 mem: storing 1012 in location 1324
9999 mem: incrementing refcount of 1012: 286 -> 287
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 0
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 287 -> 288
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 1
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 288 -> 289
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 1
9999 mem: storing 2 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 2
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 289 -> 290
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 2
9999 mem: storing 3 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 3
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 290 -> 291
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 3
9999 mem: storing 4 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 4
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 291 -> 292
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 4
9999 mem: storing 5 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 5
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 292 -> 293
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 5
9999 mem: storing 6 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 6
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 293 -> 294
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 6
9999 mem: storing 7 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 7
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 294 -> 295
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 7
9999 mem: storing 8 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 8
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 295 -> 296
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 8
9999 mem: storing 9 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 9
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 296 -> 297
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 9
9999 mem: storing 10 in location 1326
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 10
9999 mem: location 1327 is 9
9999 mem: storing 0 in location 1334
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 27
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1324 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1319 is 6
9999 mem: storing 7 in location 1319
 104 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1315 is 1012
9999 mem: location 1319 is 7
9999 mem: location 1317 is 0
9999 mem: location 1317 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 297 -> 298
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1281
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1283
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1284
 105 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jumping to instruction 10
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 7
9999 mem: location 1282 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1335
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1338
9999 mem: incrementing refcount of 1012: 298 -> 299
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1339
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1338 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1341
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1339 is 7
9999 mem: location 1341 is 1015
9999 mem: storing 7 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1342
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1340 is 0
9999 mem: location 1342 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1338 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 299 -> 298
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 298 -> 299
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1282 is 0
9999 mem: location 1284 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 299 -> 300
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 300 -> 301
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 301 -> 300
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 300 -> 301
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 301 -> 302
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 302 -> 301
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 301 -> 302
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 302 -> 303
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 303 -> 302
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 302 -> 303
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 303 -> 304
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 304 -> 303
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 303 -> 304
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 304 -> 305
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/scenario_editor-can-undo-page-up
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 305 -> 304
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 304 -> 305
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 305 -> 306
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 306 -> 305
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 305 -> 306
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 306 -> 307
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 307 -> 306
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 306 -> 307
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 307 -> 308
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 308 -> 307
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 307 -> 308
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 308 -> 309
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 309 -> 308
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 308 -> 309
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 309 -> 310
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 7
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 310 -> 309
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 309 -> 310
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 7
9999 mem: location 1283 is 0
9999 mem: location 1284 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1343
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 310 -> 311
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1347
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1348
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1349
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1347 is 7
9999 mem: storing 8 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1346 is 1012
9999 mem: location 1347 is 8
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1335
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1338
9999 mem: incrementing refcount of 1012: 311 -> 312
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1339
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1338 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1341
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1339 is 8
9999 mem: location 1341 is 1015
9999 mem: storing 8 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1342
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1340 is 0
9999 mem: location 1342 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1338 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 312 -> 311
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 311 -> 312
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1205
9999 mem: incrementing refcount of 1012: 312 -> 313
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1205 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1205 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1206
 107 run: return {height: "number"}
9999 mem: location 1206 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1350
 106 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1347 is 8
9999 mem: location 1350 is 5
9999 mem: storing 1 in location 1351
 106 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jumping to instruction 15
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1346 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1158
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 313 -> 312
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 312 -> 313
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1371
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1372
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1368 is 1012
9999 mem: location 1371 is 1
9999 mem: location 1372 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 313 -> 314
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 8
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 314 -> 313
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 313 -> 314
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1369 is 1362
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1321
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1362 in location 1324
9999 mem: incrementing refcount of 1362: 3 -> 4
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1324 is 1362
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9999 mem: location 1363 is 2
9999 mem: location 1364 is 1352
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9998 run: address to copy is 1363
9999 mem: storing 1363 in location 1325
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9999 mem: location 1363 is 2
9999 mem: location 1364 is 1352
9999 mem: location 1324 is 1362
9999 mem: skipping refcount at 1362
9998 run: address to copy is 1364
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1364 is 1352
9999 mem: storing 1352 in location 1326
9999 mem: incrementing refcount of 1352: 3 -> 4
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1326 is 1352
9999 mem: skipping refcount at 1352
9999 mem: storing 2 in location 1327
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1325 is 1363
9999 mem: location 1363 is 2
9999 mem: location 1327 is 2
9999 mem: storing 1 in location 1328
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 104 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1202
9999 mem: storing 1202 in location 1329
9999 mem: incrementing refcount of 1202: 0 -> 1
 104 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1329 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1324 is 1362
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1362
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: decrementing refcount of 1362: 4 -> 3
9999 mem: storing 1362 in location 1369
9999 mem: incrementing refcount of 1362: 3 -> 4
9999 mem: storing 1 in location 1377
9999 mem: storing 1 in location 1378
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 1
9998 run: jumping to instruction 28
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1368 is 1012
9999 mem: location 1369 is 1362
9999 mem: location 1370 is 1158
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'press' event starting at 1515
9999 mem: storing console in 1519
9999 mem: storing console data in 1521
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1519
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1365
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 314 -> 315
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1369
9999 mem: incrementing refcount of 1519: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1370
9999 mem: incrementing refcount of 1158: 21 -> 22
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1371
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1372
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1368 is 1012
9999 mem: location 1371 is 1
9999 mem: location 1372 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 315 -> 316
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 316 -> 315
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 315 -> 316
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1369 is 1519
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1321
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1324
9999 mem: incrementing refcount of 1519: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1324 is 1519
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1324 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 0
9999 mem: location 1521 is 1513
9999 mem: location 1324 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1520
9999 mem: storing 1520 in location 1325
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1324 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 0
9999 mem: location 1521 is 1513
9999 mem: location 1324 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1521
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1521 is 1513
9999 mem: storing 1513 in location 1326
9999 mem: incrementing refcount of 1513: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1326 is 1513
9999 mem: skipping refcount at 1513
9999 mem: storing 1 in location 1327
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1325 is 1520
9999 mem: location 1520 is 0
9999 mem: location 1327 is 1
9999 mem: storing 0 in location 1328
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1326 is 1513
9999 mem: skipping refcount at 1513
9998 run: base address is 1514
9999 mem: location 1325 is 1520
9999 mem: location 1520 is 0
9998 run: address to copy is 1515
9998 run: its type is event
9999 mem: location 1515 is 0
9999 mem: location 1516 is 26
9999 mem: location 1517 is 0
9999 mem: location 1518 is 0
9999 mem: storing 0 in location 1330
9999 mem: storing 26 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1325 is 1520
9999 mem: location 1520 is 0
9999 mem: location 1325 is 1520
9999 mem: storing 1 in location 1520
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1330 is 0
9999 mem: location 1331 is 26
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1324 is 1519
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1519
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1373
9999 mem: storing 26 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: decrementing refcount of 1519: 2 -> 1
9999 mem: storing 1519 in location 1369
9999 mem: incrementing refcount of 1519: 1 -> 2
9999 mem: storing 1 in location 1377
9999 mem: storing 0 in location 1378
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1373 is 0
9999 mem: location 1374 is 26
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 mem: storing 0 in location 1379
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1368 is 1012
9999 mem: location 1370 is 1158
9999 mem: location 1373 is 0
9999 mem: location 1374 is 26
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1381
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1384
9999 mem: incrementing refcount of 1012: 316 -> 317
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1385
9999 mem: incrementing refcount of 1158: 22 -> 23
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1386
9999 mem: storing 26 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1390
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1385 is 1158
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1384 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1522
9999 mem: storing 3 in location 1523
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1525
9999 mem: incrementing refcount of 1012: 317 -> 318
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1525 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1525 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1525 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1526
 106 run: return {width: "number"}
9999 mem: location 1526 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1391
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1384 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1525
9999 mem: incrementing refcount of 1012: 318 -> 319
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1525 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1525 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1525 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1526
 106 run: return {height: "number"}
9999 mem: location 1526 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1392
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1393
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1394
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1395
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1396
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1397
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1396 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1398
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1397 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1399
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1386 is 0
9999 mem: location 1387 is 26
9999 mem: location 1388 is 0
9999 mem: location 1389 is 0
9999 mem: storing 1387 in location 1400
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1400 is 1387
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1400 is 1387
9999 mem: location 1387 is 26
9999 mem: storing 0 in location 1401
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1400 is 1387
9999 mem: location 1387 is 26
9999 mem: storing 1 in location 1412
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1498
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1404
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1404 is 1169
9999 mem: location 1169 is 1498
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1404 is 1169
9999 mem: location 1169 is 1498
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1498 in location 1525
9999 mem: incrementing refcount of 1498: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1525 is 1498
9999 mem: skipping refcount at 1498
9999 mem: location 1499 is 1120
9999 mem: location 1500 is 1479
9999 mem: location 1525 is 1498
9999 mem: skipping refcount at 1498
9998 run: address to copy is 1499
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1499 is 1120
9999 mem: storing 1120 in location 1526
9999 mem: incrementing refcount of 1120: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1526 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1403
9999 mem: incrementing refcount of 1120: 4 -> 5
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1404 is 1169
9999 mem: location 1169 is 1498
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1498 in location 1525
9999 mem: incrementing refcount of 1498: 3 -> 4
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1498
9999 mem: skipping refcount at 1498
9999 mem: location 1499 is 1120
9999 mem: location 1500 is 1479
9999 mem: location 1525 is 1498
9999 mem: skipping refcount at 1498
9998 run: address to copy is 1500
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1500 is 1479
9999 mem: storing 1479 in location 1526
9999 mem: incrementing refcount of 1479: 2 -> 3
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1526 is 1479
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1479
9999 mem: location 1404 is 1169
9999 mem: decrementing refcount of 1498: 4 -> 3
9999 mem: storing 1479 in location 1169
9999 mem: incrementing refcount of 1479: 3 -> 4
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 0
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1402
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1403 is 1120
9999 mem: location 1402 is 1170
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1171
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1174
9999 mem: incrementing refcount of 1120: 5 -> 6
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1175
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1527
9999 mem: storing 1527 in location 1176
9999 mem: incrementing refcount of 1527: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1174 is 1120
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1527
9999 mem: skipping refcount at 1527
9999 mem: location 1176 is 1527
9999 mem: skipping refcount at 1527
9999 mem: storing 1120 in location 1528
9999 mem: storing 0 in location 1529
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1176 is 1527
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1527
9999 mem: location 1402 is 1170
9999 mem: storing 1527 in location 1170
9999 mem: incrementing refcount of 1527: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1403 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1223
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1177
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1403 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1405
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 86
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1403 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1223
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1177
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1403 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1409
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1409 is 1122
9998 run: jump-unless fell through
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1177
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1385 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1408
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-row: "offset"}
9999 mem: location 1409 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1223
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1177
9999 mem: location 1128 is 0
9999 mem: location 1409 is 1122
9998 run: address to copy is 1122
9998 run: its type is "number"
9999 mem: location 1122 is 1
9999 mem: location 1396 is 1166
9999 mem: storing 1 in location 1166
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-column: "offset"}
9999 mem: location 1409 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1223
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1177
9999 mem: location 1128 is 0
9999 mem: location 1409 is 1122
9998 run: address to copy is 1123
9998 run: its type is "number"
9999 mem: location 1123 is 0
9999 mem: location 1397 is 1167
9999 mem: storing 0 in location 1167
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-top-of-screen: "offset"}
9999 mem: location 1409 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1223
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1177
9999 mem: location 1128 is 0
9999 mem: location 1409 is 1122
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1223
9999 mem: location 1408 is 1160
9999 mem: decrementing refcount of 1177: 28 -> 27
9999 mem: storing 1223 in location 1160
9999 mem: incrementing refcount of 1223: 25 -> 26
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1403 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1223
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1177
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1403 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1410
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jumping to instruction 106
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1384 is 1012
9999 mem: location 1385 is 1158
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 319 -> 318
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 318 -> 319
9999 mem: decrementing refcount of 1158: 23 -> 22
9999 mem: storing 1158 in location 1370
9999 mem: incrementing refcount of 1158: 22 -> 23
9999 mem: storing 1 in location 1380
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1368 is 1012
9999 mem: location 1370 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1312
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 319 -> 320
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1316
9999 mem: incrementing refcount of 1158: 23 -> 24
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1317
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1316 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1318
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1247
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 320 -> 321
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1251
9999 mem: incrementing refcount of 1158: 24 -> 25
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1251 is 1158
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1252
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1250 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1525
9999 mem: incrementing refcount of 1012: 321 -> 322
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1525 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1525 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1525 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1526
 107 run: return {height: "number"}
9999 mem: location 1526 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1253
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is "number"
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1254
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1160 is 1223
9999 mem: storing 1223 in location 1255
9999 mem: incrementing refcount of 1223: 26 -> 27
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1223
9999 mem: storing 1223 in location 1256
9999 mem: incrementing refcount of 1223: 27 -> 28
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1525
9999 mem: incrementing refcount of 1223: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1223
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1525 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1526
9999 mem: incrementing refcount of 1227: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 29 -> 28
9999 mem: storing 1227 in location 1255
9999 mem: incrementing refcount of 1227: 23 -> 24
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1257
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1258
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1260
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1261
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1177
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1262
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 322 -> 323
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 323 -> 322
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 322 -> 323
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1227
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 0
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1265
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1223
9999 mem: location 1262 is 1162
9999 mem: decrementing refcount of 1177: 27 -> 26
9999 mem: storing 1223 in location 1162
9999 mem: incrementing refcount of 1223: 28 -> 29
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1255 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is "character"
9999 mem: location 1228 is 100
9999 mem: storing 100 in location 1266
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1505
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 100
9999 mem: storing 0 in location 1507
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 100
9999 mem: storing 0 in location 1510
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1267
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 100
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 323 -> 324
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 162 -> 163
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 100
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 10
9999 mem: storing 1040 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 100
9999 mem: location 1308 is 1040
9999 mem: storing 100 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1040
9999 mem: location 1040 is 100
9999 mem: location 1041 is 7
9999 mem: location 1307 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-page-up
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1525
9999 mem: incrementing refcount of 1227: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1227
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1525 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1526
9999 mem: incrementing refcount of 1231: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 25 -> 24
9999 mem: storing 1231 in location 1255
9999 mem: incrementing refcount of 1231: 23 -> 24
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1525
9999 mem: incrementing refcount of 1223: 29 -> 30
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1223
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 10
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1525 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1526
9999 mem: incrementing refcount of 1227: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 30 -> 29
9999 mem: storing 1227 in location 1256
9999 mem: incrementing refcount of 1227: 25 -> 26
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1231
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1265
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1255 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is "character"
9999 mem: location 1232 is 10
9999 mem: storing 10 in location 1266
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1505
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1507
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1510
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 1
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1264
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1268
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 324 -> 325
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 325 -> 326
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 163 -> 164
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 11
9999 mem: storing 1042 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1042
9999 mem: storing 32 in location 1042
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1307 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1043
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 326 -> 325
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 325 -> 326
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 326 -> 327
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 164 -> 165
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 12
9999 mem: storing 1044 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1044
9999 mem: storing 32 in location 1044
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1307 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1045
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 327 -> 326
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 326 -> 327
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 327 -> 328
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 165 -> 166
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 13
9999 mem: storing 1046 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1046
9999 mem: storing 32 in location 1046
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1307 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1047
9999 mem: storing 7 in location 1047
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 328 -> 327
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 327 -> 328
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 328 -> 329
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 166 -> 167
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 14
9999 mem: storing 1048 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1048
9999 mem: storing 32 in location 1048
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1307 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1049
9999 mem: storing 7 in location 1049
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 329 -> 328
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 328 -> 329
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 329 -> 330
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 167 -> 168
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 15
9999 mem: storing 1050 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1050
9999 mem: storing 32 in location 1050
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1307 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1051
9999 mem: storing 7 in location 1051
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 330 -> 329
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 329 -> 330
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 330 -> 331
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 168 -> 169
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 16
9999 mem: storing 1052 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1052
9999 mem: storing 32 in location 1052
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1307 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1053
9999 mem: storing 7 in location 1053
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 331 -> 330
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 330 -> 331
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 331 -> 332
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 169 -> 170
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 17
9999 mem: storing 1054 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1054
9999 mem: storing 32 in location 1054
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1307 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1055
9999 mem: storing 7 in location 1055
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 332 -> 331
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 331 -> 332
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 332 -> 333
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 170 -> 171
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 18
9999 mem: storing 1056 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1056
9999 mem: storing 32 in location 1056
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1307 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1309
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-page-up
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1057
9999 mem: storing 7 in location 1057
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 333 -> 332
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 332 -> 333
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 333 -> 334
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1294 is 10
9999 mem: storing 10 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 10
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 171 -> 172
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 19
9999 mem: storing 1058 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1058
9999 mem: storing 32 in location 1058
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1307 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1059
9999 mem: storing 7 in location 1059
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 334 -> 333
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 333 -> 334
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 1
9999 mem: storing 2 in location 1258
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 2
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 334 -> 335
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1281
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 2
9999 mem: location 1283 is 1015
9999 mem: storing 2 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 335 -> 334
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 334 -> 335
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1231
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1525
9999 mem: incrementing refcount of 1231: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1231
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1525 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1526
9999 mem: incrementing refcount of 1235: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 25 -> 24
9999 mem: storing 1235 in location 1255
9999 mem: incrementing refcount of 1235: 18 -> 19
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1525
9999 mem: incrementing refcount of 1227: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1227
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1227
9999 mem: skipping refcount at 1227
9999 mem: location 1228 is 100
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1525 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1526
9999 mem: incrementing refcount of 1231: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 27 -> 26
9999 mem: storing 1231 in location 1256
9999 mem: incrementing refcount of 1231: 25 -> 26
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1235
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1255 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9998 run: its type is "character"
9999 mem: location 1236 is 101
9999 mem: storing 101 in location 1266
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1505
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 101
9999 mem: storing 0 in location 1507
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 101
9999 mem: storing 0 in location 1510
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1267
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 101
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 335 -> 336
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 101
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 172 -> 173
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 101
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 20
9999 mem: storing 1060 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 98
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 101
9999 mem: location 1308 is 1060
9999 mem: storing 101 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1060
9999 mem: location 1060 is 101
9999 mem: location 1061 is 7
9999 mem: location 1307 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1235
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1525
9999 mem: incrementing refcount of 1235: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1235
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1525 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1526
9999 mem: incrementing refcount of 1239: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 20 -> 19
9999 mem: storing 1239 in location 1255
9999 mem: incrementing refcount of 1239: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1231
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1525
9999 mem: incrementing refcount of 1231: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1231
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1231
9999 mem: skipping refcount at 1231
9999 mem: location 1232 is 10
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1525 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1526
9999 mem: incrementing refcount of 1235: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 27 -> 26
9999 mem: storing 1235 in location 1256
9999 mem: incrementing refcount of 1235: 20 -> 21
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1239
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 2
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 1243
9999 mem: location 1242 is 1235
9999 mem: location 1255 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9998 run: its type is "character"
9999 mem: location 1240 is 10
9999 mem: storing 10 in location 1266
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1505
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1507
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 10
9999 mem: storing 0 in location 1510
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1267
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 2
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1259 is 1
9999 mem: location 1254 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 336 -> 337
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 337 -> 338
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 173 -> 174
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 21
9999 mem: storing 1062 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1062
9999 mem: storing 32 in location 1062
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1307 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1063
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 338 -> 337
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 337 -> 338
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 338 -> 339
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 174 -> 175
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 22
9999 mem: storing 1064 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1064
9999 mem: storing 32 in location 1064
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1307 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1065
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 339 -> 338
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 338 -> 339
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 339 -> 340
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 175 -> 176
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 23
9999 mem: storing 1066 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1066
9999 mem: storing 32 in location 1066
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1307 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1067
9999 mem: storing 7 in location 1067
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 340 -> 339
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 339 -> 340
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 340 -> 341
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 176 -> 177
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 24
9999 mem: storing 1068 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1068
9999 mem: storing 32 in location 1068
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1307 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1069
9999 mem: storing 7 in location 1069
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 341 -> 340
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 340 -> 341
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 341 -> 342
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-page-up
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 177 -> 178
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 25
9999 mem: storing 1070 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1070
9999 mem: storing 32 in location 1070
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1307 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1071
9999 mem: storing 7 in location 1071
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 342 -> 341
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 341 -> 342
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 342 -> 343
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 178 -> 179
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 26
9999 mem: storing 1072 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1072
9999 mem: storing 32 in location 1072
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1307 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1073
9999 mem: storing 7 in location 1073
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 343 -> 342
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 342 -> 343
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 343 -> 344
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 179 -> 180
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 27
9999 mem: storing 1074 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1074
9999 mem: storing 32 in location 1074
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1307 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1075
9999 mem: storing 7 in location 1075
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 344 -> 343
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 343 -> 344
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 344 -> 345
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 180 -> 181
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 28
9999 mem: storing 1076 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1076
9999 mem: storing 32 in location 1076
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1307 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1077
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 345 -> 344
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 344 -> 345
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 345 -> 346
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1294 is 10
9999 mem: storing 20 in location 1302
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 20
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1302
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 181 -> 182
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 29
9999 mem: storing 1078 in location 1307
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1308
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1078
9999 mem: storing 32 in location 1078
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1307 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1309
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1079
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 346 -> 345
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 345 -> 346
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1258 is 2
9999 mem: storing 3 in location 1258
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1259
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 346 -> 347
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1281
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 3
9999 mem: location 1283 is 1015
9999 mem: storing 3 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 347 -> 346
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 346 -> 347
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1239
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1525
9999 mem: incrementing refcount of 1239: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1239
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 1243
9999 mem: location 1242 is 1235
9999 mem: location 1525 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 1243
9999 mem: storing 1243 in location 1526
9999 mem: incrementing refcount of 1243: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1243
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1243
9999 mem: decrementing refcount of 1239: 11 -> 10
9999 mem: storing 1243 in location 1255
9999 mem: incrementing refcount of 1243: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1235
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1525
9999 mem: incrementing refcount of 1235: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1235
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 101
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1525 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1526
9999 mem: incrementing refcount of 1239: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 22 -> 21
9999 mem: storing 1239 in location 1256
9999 mem: incrementing refcount of 1239: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 1243
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1253 is 5
9999 mem: storing 0 in location 1263
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1255 is 1243
9999 mem: skipping refcount at 1243
9999 mem: location 1244 is 102
9999 mem: location 1245 is 0
9999 mem: location 1246 is 1239
9999 mem: location 1255 is 1243
9999 mem: skipping refcount at 1243
9998 run: address to copy is 1244
9998 run: its type is "character"
9999 mem: location 1244 is 102
9999 mem: storing 102 in location 1266
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1257 is 7
9999 mem: location 1266 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1501
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1504
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1505
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1504 is 7
9999 mem: storing 1 in location 1506
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1505 is 102
9999 mem: storing 0 in location 1507
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1508
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1506 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1505 is 102
9999 mem: storing 0 in location 1510
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1504 is 7
9999 mem: storing 0 in location 1511
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1504 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1257
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1267
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1259 is 0
9999 mem: location 1254 is 9
9999 mem: storing 0 in location 1269
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1250 is 1012
9999 mem: location 1266 is 102
9999 mem: location 1257 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 347 -> 348
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1292
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 102
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 182 -> 183
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 102
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 30
9999 mem: storing 1080 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 99
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 102
9999 mem: location 1308 is 1080
9999 mem: storing 102 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1080
9999 mem: location 1080 is 102
9999 mem: location 1081 is 7
9999 mem: location 1307 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 1243
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1243 in location 1525
9999 mem: incrementing refcount of 1243: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1243
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1243
9999 mem: skipping refcount at 1243
9999 mem: location 1244 is 102
9999 mem: location 1245 is 0
9999 mem: location 1246 is 1239
9999 mem: location 1525 is 1243
9999 mem: skipping refcount at 1243
9998 run: address to copy is 1245
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1526
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1243: 10 -> 9
9999 mem: storing 0 in location 1255
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1256 is 1239
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1525
9999 mem: incrementing refcount of 1239: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1525 is 1239
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1525 is 1239
9999 mem: skipping refcount at 1239
9999 mem: location 1240 is 10
9999 mem: location 1241 is 1243
9999 mem: location 1242 is 1235
9999 mem: location 1525 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 1243
9999 mem: storing 1243 in location 1526
9999 mem: incrementing refcount of 1243: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1526 is 1243
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1243
9999 mem: decrementing refcount of 1239: 13 -> 12
9999 mem: storing 1243 in location 1256
9999 mem: incrementing refcount of 1243: 10 -> 11
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1259
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 1235
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1271
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1255 is 0
9999 mem: location 1271 is 1161
9999 mem: decrementing refcount of 1235: 21 -> 20
9999 mem: storing 0 in location 1161
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1264
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1259 is 1
9999 mem: location 1261 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1272
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1264 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1273
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1274
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: storing 0 in location 1275
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 5
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1251 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1276
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1258 is 3
9999 mem: location 1276 is 1165
9999 mem: storing 3 in location 1165
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1258 is 3
9999 mem: location 1259 is 1
9999 mem: location 1250 is 1012
9999 mem: location 1251 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 3 in location 1319
9999 mem: storing 1 in location 1320
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1012
9999 mem: location 1320 is 1
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 348 -> 349
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1185
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 349 -> 350
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 183 -> 184
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 31
9999 mem: storing 1082 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1082
9999 mem: storing 32 in location 1082
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1307 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1083
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 350 -> 349
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 349 -> 350
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 350 -> 351
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-page-up
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 184 -> 185
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 32
9999 mem: storing 1084 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1084
9999 mem: storing 32 in location 1084
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1307 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1085
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 351 -> 350
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 350 -> 351
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 351 -> 352
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 185 -> 186
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 33
9999 mem: storing 1086 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1086
9999 mem: storing 32 in location 1086
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1307 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1087
9999 mem: storing 7 in location 1087
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 352 -> 351
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 351 -> 352
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 352 -> 353
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 186 -> 187
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 34
9999 mem: storing 1088 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1088
9999 mem: storing 32 in location 1088
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1307 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1089
9999 mem: storing 7 in location 1089
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 353 -> 352
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 352 -> 353
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 353 -> 354
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 187 -> 188
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 35
9999 mem: storing 1090 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1090
9999 mem: storing 32 in location 1090
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1307 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1091
9999 mem: storing 7 in location 1091
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 354 -> 353
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 353 -> 354
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 354 -> 355
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 188 -> 189
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 36
9999 mem: storing 1092 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1092
9999 mem: storing 32 in location 1092
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1307 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1093
9999 mem: storing 7 in location 1093
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 355 -> 354
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 354 -> 355
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 355 -> 356
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 189 -> 190
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 37
9999 mem: storing 1094 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1094
9999 mem: storing 32 in location 1094
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1307 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1095
9999 mem: storing 7 in location 1095
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 356 -> 355
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 355 -> 356
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 356 -> 357
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 190 -> 191
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 38
9999 mem: storing 1096 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1096
9999 mem: storing 32 in location 1096
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1307 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1097
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 357 -> 356
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 356 -> 357
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 357 -> 358
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1294 is 10
9999 mem: storing 30 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 30
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 191 -> 192
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 32
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 39
9999 mem: storing 1098 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 32
9999 mem: location 1308 is 1098
9999 mem: storing 32 in location 1098
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1307 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 7
9999 mem: location 1309 is 1099
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 358 -> 357
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 357 -> 358
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1319 is 3
9999 mem: storing 4 in location 1319
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1315 is 1012
9999 mem: location 1319 is 4
9999 mem: location 1317 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1321
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1324
9999 mem: incrementing refcount of 1012: 358 -> 359
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1325
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1326
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1327
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1328
9999 mem: storing 1 in location 1329
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1330
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1332
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1325 is 4
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 359 -> 360
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1281
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 4
9999 mem: location 1283 is 1015
9999 mem: storing 4 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 360 -> 359
9999 mem: storing 1012 in location 1324
9999 mem: incrementing refcount of 1012: 359 -> 360
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 0
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 360 -> 361
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 192 -> 193
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 40
9999 mem: storing 1100 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 100
9999 mem: location 1101 is 7
9999 mem: location 1307 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1100
9999 mem: storing 9480 in location 1100
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 7
9999 mem: location 1307 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1101
9999 mem: storing 245 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-page-up
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1298 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 1
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 361 -> 362
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 193 -> 194
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 41
9999 mem: storing 1102 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1307 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1102
9999 mem: storing 9480 in location 1102
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 7
9999 mem: location 1307 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1103
9999 mem: storing 245 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1298 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 1
9999 mem: storing 2 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 2
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 362 -> 363
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 194 -> 195
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 42
9999 mem: storing 1104 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1307 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1104
9999 mem: storing 9480 in location 1104
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 7
9999 mem: location 1307 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1105
9999 mem: storing 245 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1298 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 2
9999 mem: storing 3 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 3
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 363 -> 364
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 195 -> 196
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 43
9999 mem: storing 1106 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1307 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1106
9999 mem: storing 9480 in location 1106
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 7
9999 mem: location 1307 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1107
9999 mem: storing 245 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1298 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 3
9999 mem: storing 4 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 4
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 364 -> 365
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 196 -> 197
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 44
9999 mem: storing 1108 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1307 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1108
9999 mem: storing 9480 in location 1108
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 7
9999 mem: location 1307 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1109
9999 mem: storing 245 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1298 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 4
9999 mem: storing 5 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 5
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 365 -> 366
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 197 -> 198
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 45
9999 mem: storing 1110 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1307 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1110
9999 mem: storing 9480 in location 1110
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 7
9999 mem: location 1307 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1111
9999 mem: storing 245 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1298 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 5
9999 mem: storing 6 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 6
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 366 -> 367
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 198 -> 199
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 46
9999 mem: storing 1112 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1307 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1112
9999 mem: storing 9480 in location 1112
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 7
9999 mem: location 1307 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1113
9999 mem: storing 245 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1298 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 6
9999 mem: storing 7 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 7
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 367 -> 368
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 199 -> 200
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 47
9999 mem: storing 1114 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1307 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1114
9999 mem: storing 9480 in location 1114
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 7
9999 mem: location 1307 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1115
9999 mem: storing 245 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1298 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 7
9999 mem: storing 8 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 8
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 368 -> 369
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 200 -> 201
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 48
9999 mem: storing 1116 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1307 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1116
9999 mem: storing 9480 in location 1116
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 7
9999 mem: location 1307 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1117
9999 mem: storing 245 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1298 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 8
9999 mem: storing 9 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 9
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1324 is 1012
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 369 -> 370
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1289
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1290
9999 mem: storing 1 in location 1291
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1295 is 5
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1294 is 10
9999 mem: storing 1 in location 1297
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1299
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1299 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1294 is 10
9999 mem: storing 40 in location 1302
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1302 is 40
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1302
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1303
9999 mem: incrementing refcount of 1018: 201 -> 202
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1304
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1289 is 9480
9999 mem: storing 0 in location 1305
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1303 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1302 is 49
9999 mem: storing 1118 in location 1307
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1307 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1308
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1289 is 9480
9999 mem: location 1308 is 1118
9999 mem: storing 9480 in location 1118
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 7
9999 mem: location 1307 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1309
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1290 is 245
9999 mem: location 1309 is 1119
9999 mem: storing 245 in location 1119
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1294 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1298 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1310 is 9
9999 mem: storing 1 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1326 is 9
9999 mem: storing 10 in location 1326
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1326 is 10
9999 mem: location 1327 is 9
9999 mem: storing 0 in location 1334
9990 schedule: draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-page-up
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1324 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1319 is 4
9999 mem: storing 5 in location 1319
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1315 is 1012
9999 mem: location 1319 is 5
9999 mem: location 1317 is 0
9999 mem: location 1317 is 0
9999 mem: location 1318 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 370 -> 371
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1281
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1283
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1284
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 5
9999 mem: location 1282 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1335
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1338
9999 mem: incrementing refcount of 1012: 371 -> 372
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1339
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1338 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1341
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1339 is 5
9999 mem: location 1341 is 1015
9999 mem: storing 5 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1342
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1340 is 0
9999 mem: location 1342 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1338 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 372 -> 371
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 371 -> 372
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1282 is 0
9999 mem: location 1284 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1181
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 372 -> 373
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1185
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1186
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1187
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1188
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 373 -> 374
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 374 -> 373
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 373 -> 374
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 374 -> 375
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 375 -> 374
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 374 -> 375
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 375 -> 376
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 376 -> 375
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 375 -> 376
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 376 -> 377
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 377 -> 376
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 376 -> 377
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 4
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 377 -> 378
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 378 -> 377
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 377 -> 378
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 4
9999 mem: storing 5 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 5
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 378 -> 379
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 379 -> 378
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 378 -> 379
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 5
9999 mem: storing 6 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 6
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 379 -> 380
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 380 -> 379
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 379 -> 380
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 6
9999 mem: storing 7 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 7
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 380 -> 381
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 381 -> 380
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 380 -> 381
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 7
9999 mem: storing 8 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 8
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 381 -> 382
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 382 -> 381
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 381 -> 382
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 8
9999 mem: storing 9 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 9
9999 mem: location 1186 is 9
9999 mem: storing 0 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1184 is 1012
9999 mem: location 1187 is 32
9999 mem: location 1188 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1285
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1288
9999 mem: incrementing refcount of 1012: 382 -> 383
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1289
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1290
9999 mem: storing 1 in location 1291
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1289 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1288 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1294
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1295
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1288 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1296
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1296 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1295 is 5
9999 mem: storing 0 in location 1297
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1288 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 383 -> 382
9999 mem: storing 1012 in location 1184
9999 mem: incrementing refcount of 1012: 382 -> 383
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 9
9999 mem: storing 10 in location 1185
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1185 is 10
9999 mem: location 1186 is 9
9999 mem: storing 1 in location 1190
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1184 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 5
9999 mem: location 1283 is 0
9999 mem: location 1284 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1343
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 383 -> 384
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1347
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1348
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1349
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1347 is 5
9999 mem: storing 6 in location 1347
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1346 is 1012
9999 mem: location 1347 is 6
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1335
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1338
9999 mem: incrementing refcount of 1012: 384 -> 385
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1339
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1338 is 1012
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1341
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1339 is 6
9999 mem: location 1341 is 1015
9999 mem: storing 6 in location 1015
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1338 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1342
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1340 is 0
9999 mem: location 1342 is 1016
9999 mem: storing 0 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1338 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 385 -> 384
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 384 -> 385
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1525
9999 mem: incrementing refcount of 1012: 385 -> 386
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1525 is 1012
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1525 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1525 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1526
 108 run: return {height: "number"}
9999 mem: location 1526 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1350
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1347 is 6
9999 mem: location 1350 is 5
9999 mem: storing 1 in location 1351
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1346 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1158
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 386 -> 385
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 385 -> 386
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1371
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 1370 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1372
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1368 is 1012
9999 mem: location 1371 is 1
9999 mem: location 1372 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1277
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 386 -> 387
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1281
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1282
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1280 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1283
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1281 is 1
9999 mem: location 1283 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1280 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1284
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1282 is 0
9999 mem: location 1284 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1280 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 387 -> 386
9999 mem: storing 1012 in location 1368
9999 mem: incrementing refcount of 1012: 386 -> 387
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1369 is 1519
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1321
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1324
9999 mem: incrementing refcount of 1519: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1324 is 1519
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1324 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 1
9999 mem: location 1521 is 1513
9999 mem: location 1324 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1520
9999 mem: storing 1520 in location 1325
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1324 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 1
9999 mem: location 1521 is 1513
9999 mem: location 1324 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1521
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1521 is 1513
9999 mem: storing 1513 in location 1326
9999 mem: incrementing refcount of 1513: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1326 is 1513
9999 mem: skipping refcount at 1513
9999 mem: storing 1 in location 1327
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1325 is 1520
9999 mem: location 1520 is 1
9999 mem: location 1327 is 1
9999 mem: storing 1 in location 1328
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1522
9999 mem: storing 1522 in location 1329
9999 mem: incrementing refcount of 1522: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1329 is 1522
9999 mem: skipping refcount at 1522
9999 mem: location 1523 is 0
9999 mem: location 1524 is 0
9999 mem: location 1525 is 0
9999 mem: location 1526 is 0
9999 mem: location 1324 is 1519
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1519
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: decrementing refcount of 1519: 3 -> 2
9999 mem: storing 1519 in location 1369
9999 mem: incrementing refcount of 1519: 2 -> 3
9999 mem: storing 1 in location 1377
9999 mem: storing 1 in location 1378
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1368 is 1012
9999 mem: location 1369 is 1519
9999 mem: location 1370 is 1158
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is "number"
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 1223
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1479
9999 mem: location 1170 is 1527
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is "number"
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .d         .\n    .e         .\n    .f         .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
